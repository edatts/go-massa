// Copyright (c) 2023 MASSA LABS <info@massa.net>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: massa/model/v1/stats.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Consensus statistics
type ConsensusStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Start of the time span for stats
	StartTimespan *NativeTime `protobuf:"bytes,1,opt,name=start_timespan,json=startTimespan,proto3" json:"start_timespan,omitempty"`
	// End of the time span for stats
	EndTimespan *NativeTime `protobuf:"bytes,2,opt,name=end_timespan,json=endTimespan,proto3" json:"end_timespan,omitempty"`
	// Number of final blocks
	FinalBlockCount uint64 `protobuf:"varint,3,opt,name=final_block_count,json=finalBlockCount,proto3" json:"final_block_count,omitempty"`
	// Number of stale blocks in memory
	StaleBlockCount uint64 `protobuf:"varint,4,opt,name=stale_block_count,json=staleBlockCount,proto3" json:"stale_block_count,omitempty"`
	// Number of actives cliques
	CliqueCount uint64 `protobuf:"varint,5,opt,name=clique_count,json=cliqueCount,proto3" json:"clique_count,omitempty"`
}

func (x *ConsensusStats) Reset() {
	*x = ConsensusStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusStats) ProtoMessage() {}

func (x *ConsensusStats) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusStats.ProtoReflect.Descriptor instead.
func (*ConsensusStats) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_stats_proto_rawDescGZIP(), []int{0}
}

func (x *ConsensusStats) GetStartTimespan() *NativeTime {
	if x != nil {
		return x.StartTimespan
	}
	return nil
}

func (x *ConsensusStats) GetEndTimespan() *NativeTime {
	if x != nil {
		return x.EndTimespan
	}
	return nil
}

func (x *ConsensusStats) GetFinalBlockCount() uint64 {
	if x != nil {
		return x.FinalBlockCount
	}
	return 0
}

func (x *ConsensusStats) GetStaleBlockCount() uint64 {
	if x != nil {
		return x.StaleBlockCount
	}
	return 0
}

func (x *ConsensusStats) GetCliqueCount() uint64 {
	if x != nil {
		return x.CliqueCount
	}
	return 0
}

// Pool statistics
type PoolStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Endorsements
	EndorsementsCount uint64 `protobuf:"varint,1,opt,name=endorsements_count,json=endorsementsCount,proto3" json:"endorsements_count,omitempty"`
	// Operations
	OperationsCount uint64 `protobuf:"varint,2,opt,name=operations_count,json=operationsCount,proto3" json:"operations_count,omitempty"`
}

func (x *PoolStats) Reset() {
	*x = PoolStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolStats) ProtoMessage() {}

func (x *PoolStats) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolStats.ProtoReflect.Descriptor instead.
func (*PoolStats) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_stats_proto_rawDescGZIP(), []int{1}
}

func (x *PoolStats) GetEndorsementsCount() uint64 {
	if x != nil {
		return x.EndorsementsCount
	}
	return 0
}

func (x *PoolStats) GetOperationsCount() uint64 {
	if x != nil {
		return x.OperationsCount
	}
	return 0
}

// Network statistics
type NetworkStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// In connections count
	InConnectionCount uint64 `protobuf:"varint,1,opt,name=in_connection_count,json=inConnectionCount,proto3" json:"in_connection_count,omitempty"`
	// Out connections count
	OutConnectionCount uint64 `protobuf:"varint,2,opt,name=out_connection_count,json=outConnectionCount,proto3" json:"out_connection_count,omitempty"`
	// Total known peers count
	KnownPeerCount uint64 `protobuf:"varint,3,opt,name=known_peer_count,json=knownPeerCount,proto3" json:"known_peer_count,omitempty"`
	// Banned node count
	BannedPeerCount uint64 `protobuf:"varint,4,opt,name=banned_peer_count,json=bannedPeerCount,proto3" json:"banned_peer_count,omitempty"`
	// Active node count
	ActiveNodeCount uint64 `protobuf:"varint,5,opt,name=active_node_count,json=activeNodeCount,proto3" json:"active_node_count,omitempty"`
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_stats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_stats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_stats_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkStats) GetInConnectionCount() uint64 {
	if x != nil {
		return x.InConnectionCount
	}
	return 0
}

func (x *NetworkStats) GetOutConnectionCount() uint64 {
	if x != nil {
		return x.OutConnectionCount
	}
	return 0
}

func (x *NetworkStats) GetKnownPeerCount() uint64 {
	if x != nil {
		return x.KnownPeerCount
	}
	return 0
}

func (x *NetworkStats) GetBannedPeerCount() uint64 {
	if x != nil {
		return x.BannedPeerCount
	}
	return 0
}

func (x *NetworkStats) GetActiveNodeCount() uint64 {
	if x != nil {
		return x.ActiveNodeCount
	}
	return 0
}

// Execution statistics
type ExecutionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time window start
	TimeWindowStart *NativeTime `protobuf:"bytes,1,opt,name=time_window_start,json=timeWindowStart,proto3" json:"time_window_start,omitempty"`
	// Time window end
	TimeWindowEnd *NativeTime `protobuf:"bytes,2,opt,name=time_window_end,json=timeWindowEnd,proto3" json:"time_window_end,omitempty"`
	// Number of final blocks in the time window
	FinalBlockCount uint64 `protobuf:"varint,3,opt,name=final_block_count,json=finalBlockCount,proto3" json:"final_block_count,omitempty"`
	// Number of final executed operations in the time window
	FinalExecutedOperationsCount uint64 `protobuf:"varint,4,opt,name=final_executed_operations_count,json=finalExecutedOperationsCount,proto3" json:"final_executed_operations_count,omitempty"`
}

func (x *ExecutionStats) Reset() {
	*x = ExecutionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_stats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStats) ProtoMessage() {}

func (x *ExecutionStats) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_stats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStats.ProtoReflect.Descriptor instead.
func (*ExecutionStats) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_stats_proto_rawDescGZIP(), []int{3}
}

func (x *ExecutionStats) GetTimeWindowStart() *NativeTime {
	if x != nil {
		return x.TimeWindowStart
	}
	return nil
}

func (x *ExecutionStats) GetTimeWindowEnd() *NativeTime {
	if x != nil {
		return x.TimeWindowEnd
	}
	return nil
}

func (x *ExecutionStats) GetFinalBlockCount() uint64 {
	if x != nil {
		return x.FinalBlockCount
	}
	return 0
}

func (x *ExecutionStats) GetFinalExecutedOperationsCount() uint64 {
	if x != nil {
		return x.FinalExecutedOperationsCount
	}
	return 0
}

var File_massa_model_v1_stats_proto protoreflect.FileDescriptor

var file_massa_model_v1_stats_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0d,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x3d, 0x0a,
	0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x0b, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x11,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x6c,
	0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x71,
	0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x09, 0x50, 0x6f, 0x6f, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf2,
	0x01, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x30, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6f,
	0x75, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x50, 0x65,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x8f, 0x02, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x46, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x42,
	0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x45,
	0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x45,
	0x0a, 0x1f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x9f, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x61, 0x74, 0x74,
	0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0xa2, 0x02, 0x06, 0x4d, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0xaa, 0x02, 0x12, 0x43,
	0x6f, 0x6d, 0x2e, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0xba, 0x02, 0x06, 0x4d, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0xca, 0x02, 0x12, 0x43, 0x6f, 0x6d,
	0x5c, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0xea,
	0x02, 0x15, 0x43, 0x6f, 0x6d, 0x3a, 0x3a, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x3a, 0x3a, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_massa_model_v1_stats_proto_rawDescOnce sync.Once
	file_massa_model_v1_stats_proto_rawDescData = file_massa_model_v1_stats_proto_rawDesc
)

func file_massa_model_v1_stats_proto_rawDescGZIP() []byte {
	file_massa_model_v1_stats_proto_rawDescOnce.Do(func() {
		file_massa_model_v1_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_massa_model_v1_stats_proto_rawDescData)
	})
	return file_massa_model_v1_stats_proto_rawDescData
}

var file_massa_model_v1_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_massa_model_v1_stats_proto_goTypes = []interface{}{
	(*ConsensusStats)(nil), // 0: massa.model.v1.ConsensusStats
	(*PoolStats)(nil),      // 1: massa.model.v1.PoolStats
	(*NetworkStats)(nil),   // 2: massa.model.v1.NetworkStats
	(*ExecutionStats)(nil), // 3: massa.model.v1.ExecutionStats
	(*NativeTime)(nil),     // 4: massa.model.v1.NativeTime
}
var file_massa_model_v1_stats_proto_depIdxs = []int32{
	4, // 0: massa.model.v1.ConsensusStats.start_timespan:type_name -> massa.model.v1.NativeTime
	4, // 1: massa.model.v1.ConsensusStats.end_timespan:type_name -> massa.model.v1.NativeTime
	4, // 2: massa.model.v1.ExecutionStats.time_window_start:type_name -> massa.model.v1.NativeTime
	4, // 3: massa.model.v1.ExecutionStats.time_window_end:type_name -> massa.model.v1.NativeTime
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_massa_model_v1_stats_proto_init() }
func file_massa_model_v1_stats_proto_init() {
	if File_massa_model_v1_stats_proto != nil {
		return
	}
	file_massa_model_v1_time_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_massa_model_v1_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsensusStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_stats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_stats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_massa_model_v1_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_massa_model_v1_stats_proto_goTypes,
		DependencyIndexes: file_massa_model_v1_stats_proto_depIdxs,
		MessageInfos:      file_massa_model_v1_stats_proto_msgTypes,
	}.Build()
	File_massa_model_v1_stats_proto = out.File
	file_massa_model_v1_stats_proto_rawDesc = nil
	file_massa_model_v1_stats_proto_goTypes = nil
	file_massa_model_v1_stats_proto_depIdxs = nil
}
