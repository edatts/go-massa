// Copyright (c) 2023 MASSA LABS <info@massa.net>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: massa/model/v1/block.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Possible statuses for a block
type BlockStatus int32

const (
	BlockStatus_BLOCK_STATUS_UNSPECIFIED                BlockStatus = 0 // Default enum value
	BlockStatus_BLOCK_STATUS_NON_FINAL_BLOCKCLIQUE      BlockStatus = 1 // The block is in the greatest clique (and not final)
	BlockStatus_BLOCK_STATUS_FINAL                      BlockStatus = 2 // The block is final
	BlockStatus_BLOCK_STATUS_NON_FINAL_ALTERNATE_CLIQUE BlockStatus = 3 // The block is candidate (active any clique but not final)
	BlockStatus_BLOCK_STATUS_DISCARDED                  BlockStatus = 4 // The block is discarded
)

// Enum value maps for BlockStatus.
var (
	BlockStatus_name = map[int32]string{
		0: "BLOCK_STATUS_UNSPECIFIED",
		1: "BLOCK_STATUS_NON_FINAL_BLOCKCLIQUE",
		2: "BLOCK_STATUS_FINAL",
		3: "BLOCK_STATUS_NON_FINAL_ALTERNATE_CLIQUE",
		4: "BLOCK_STATUS_DISCARDED",
	}
	BlockStatus_value = map[string]int32{
		"BLOCK_STATUS_UNSPECIFIED":                0,
		"BLOCK_STATUS_NON_FINAL_BLOCKCLIQUE":      1,
		"BLOCK_STATUS_FINAL":                      2,
		"BLOCK_STATUS_NON_FINAL_ALTERNATE_CLIQUE": 3,
		"BLOCK_STATUS_DISCARDED":                  4,
	}
)

func (x BlockStatus) Enum() *BlockStatus {
	p := new(BlockStatus)
	*p = x
	return p
}

func (x BlockStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_model_v1_block_proto_enumTypes[0].Descriptor()
}

func (BlockStatus) Type() protoreflect.EnumType {
	return &file_massa_model_v1_block_proto_enumTypes[0]
}

func (x BlockStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockStatus.Descriptor instead.
func (BlockStatus) EnumDescriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{0}
}

// Block
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed header
	Header *SignedBlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Operations ids
	Operations []string `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetHeader() *SignedBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetOperations() []string {
	if x != nil {
		return x.Operations
	}
	return nil
}

// Filled block
type FilledBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed header
	Header *SignedBlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Operations
	Operations []*FilledOperationEntry `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *FilledBlock) Reset() {
	*x = FilledBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilledBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilledBlock) ProtoMessage() {}

func (x *FilledBlock) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilledBlock.ProtoReflect.Descriptor instead.
func (*FilledBlock) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{1}
}

func (x *FilledBlock) GetHeader() *SignedBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *FilledBlock) GetOperations() []*FilledOperationEntry {
	if x != nil {
		return x.Operations
	}
	return nil
}

// Block header
type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current network version
	CurrentVersion uint32 `protobuf:"varint,1,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	// Announced network version(Optional)
	AnnouncedVersion *wrapperspb.UInt32Value `protobuf:"bytes,2,opt,name=announced_version,json=announcedVersion,proto3" json:"announced_version,omitempty"`
	// Slot
	Slot *Slot `protobuf:"bytes,3,opt,name=slot,proto3" json:"slot,omitempty"`
	// parents
	Parents []string `protobuf:"bytes,4,rep,name=parents,proto3" json:"parents,omitempty"`
	// All operations hash
	OperationsHash string `protobuf:"bytes,5,opt,name=operations_hash,json=operationsHash,proto3" json:"operations_hash,omitempty"`
	// Signed endorsements
	Endorsements []*SignedEndorsement `protobuf:"bytes,6,rep,name=endorsements,proto3" json:"endorsements,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{2}
}

func (x *BlockHeader) GetCurrentVersion() uint32 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

func (x *BlockHeader) GetAnnouncedVersion() *wrapperspb.UInt32Value {
	if x != nil {
		return x.AnnouncedVersion
	}
	return nil
}

func (x *BlockHeader) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *BlockHeader) GetParents() []string {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *BlockHeader) GetOperationsHash() string {
	if x != nil {
		return x.OperationsHash
	}
	return ""
}

func (x *BlockHeader) GetEndorsements() []*SignedEndorsement {
	if x != nil {
		return x.Endorsements
	}
	return nil
}

// Filled Operation Tuple
type FilledOperationEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation id
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Signed operation
	Operation *SignedOperation `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *FilledOperationEntry) Reset() {
	*x = FilledOperationEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilledOperationEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilledOperationEntry) ProtoMessage() {}

func (x *FilledOperationEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilledOperationEntry.ProtoReflect.Descriptor instead.
func (*FilledOperationEntry) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{3}
}

func (x *FilledOperationEntry) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *FilledOperationEntry) GetOperation() *SignedOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// Signed block
type SignedBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block
	Content *Block `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// A cryptographically generated value using `serialized_data` and a public key.
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The public-key component used in the generation of the signature
	ContentCreatorPubKey string `protobuf:"bytes,3,opt,name=content_creator_pub_key,json=contentCreatorPubKey,proto3" json:"content_creator_pub_key,omitempty"`
	// Derived from the same public key used to generate the signature
	ContentCreatorAddress string `protobuf:"bytes,4,opt,name=content_creator_address,json=contentCreatorAddress,proto3" json:"content_creator_address,omitempty"`
	// A secure hash of the non-malleable contents of a deterministic binary representation of the block header
	SecureHash string `protobuf:"bytes,5,opt,name=secure_hash,json=secureHash,proto3" json:"secure_hash,omitempty"`
	// The size of the serialized block in bytes
	SerializedSize uint64 `protobuf:"varint,6,opt,name=serialized_size,json=serializedSize,proto3" json:"serialized_size,omitempty"`
}

func (x *SignedBlock) Reset() {
	*x = SignedBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBlock) ProtoMessage() {}

func (x *SignedBlock) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBlock.ProtoReflect.Descriptor instead.
func (*SignedBlock) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{4}
}

func (x *SignedBlock) GetContent() *Block {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SignedBlock) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignedBlock) GetContentCreatorPubKey() string {
	if x != nil {
		return x.ContentCreatorPubKey
	}
	return ""
}

func (x *SignedBlock) GetContentCreatorAddress() string {
	if x != nil {
		return x.ContentCreatorAddress
	}
	return ""
}

func (x *SignedBlock) GetSecureHash() string {
	if x != nil {
		return x.SecureHash
	}
	return ""
}

func (x *SignedBlock) GetSerializedSize() uint64 {
	if x != nil {
		return x.SerializedSize
	}
	return 0
}

// Signed block header
type SignedBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BlockHeader
	Content *BlockHeader `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// A cryptographically generated value using `serialized_data` and a public key.
	Signature string `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// The public-key component used in the generation of the signature
	ContentCreatorPubKey string `protobuf:"bytes,3,opt,name=content_creator_pub_key,json=contentCreatorPubKey,proto3" json:"content_creator_pub_key,omitempty"`
	// Derived from the same public key used to generate the signature
	ContentCreatorAddress string `protobuf:"bytes,4,opt,name=content_creator_address,json=contentCreatorAddress,proto3" json:"content_creator_address,omitempty"`
	// A secure hash of the non-malleable contents of a deterministic binary representation of the block header
	SecureHash string `protobuf:"bytes,5,opt,name=secure_hash,json=secureHash,proto3" json:"secure_hash,omitempty"`
	// The size of the serialized block header in bytes
	SerializedSize uint64 `protobuf:"varint,6,opt,name=serialized_size,json=serializedSize,proto3" json:"serialized_size,omitempty"`
}

func (x *SignedBlockHeader) Reset() {
	*x = SignedBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedBlockHeader) ProtoMessage() {}

func (x *SignedBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedBlockHeader.ProtoReflect.Descriptor instead.
func (*SignedBlockHeader) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{5}
}

func (x *SignedBlockHeader) GetContent() *BlockHeader {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SignedBlockHeader) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignedBlockHeader) GetContentCreatorPubKey() string {
	if x != nil {
		return x.ContentCreatorPubKey
	}
	return ""
}

func (x *SignedBlockHeader) GetContentCreatorAddress() string {
	if x != nil {
		return x.ContentCreatorAddress
	}
	return ""
}

func (x *SignedBlockHeader) GetSecureHash() string {
	if x != nil {
		return x.SecureHash
	}
	return ""
}

func (x *SignedBlockHeader) GetSerializedSize() uint64 {
	if x != nil {
		return x.SerializedSize
	}
	return 0
}

// A wrapper around a block with its metadata
type BlockWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The execution status of the block
	Status BlockStatus `protobuf:"varint,1,opt,name=status,proto3,enum=massa.model.v1.BlockStatus" json:"status,omitempty"`
	// The block object itself
	Block *Block `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockWrapper) Reset() {
	*x = BlockWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockWrapper) ProtoMessage() {}

func (x *BlockWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockWrapper.ProtoReflect.Descriptor instead.
func (*BlockWrapper) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{6}
}

func (x *BlockWrapper) GetStatus() BlockStatus {
	if x != nil {
		return x.Status
	}
	return BlockStatus_BLOCK_STATUS_UNSPECIFIED
}

func (x *BlockWrapper) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

// Informations about a block with its metadata
type BlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID of the block.
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	// The execution status of the block
	Status BlockStatus `protobuf:"varint,2,opt,name=status,proto3,enum=massa.model.v1.BlockStatus" json:"status,omitempty"`
}

func (x *BlockInfo) Reset() {
	*x = BlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockInfo) ProtoMessage() {}

func (x *BlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockInfo.ProtoReflect.Descriptor instead.
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{7}
}

func (x *BlockInfo) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *BlockInfo) GetStatus() BlockStatus {
	if x != nil {
		return x.Status
	}
	return BlockStatus_BLOCK_STATUS_UNSPECIFIED
}

// BlockIds holds block ids
type BlockIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block ids
	BlockIds []string `protobuf:"bytes,1,rep,name=block_ids,json=blockIds,proto3" json:"block_ids,omitempty"`
}

func (x *BlockIds) Reset() {
	*x = BlockIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockIds) ProtoMessage() {}

func (x *BlockIds) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockIds.ProtoReflect.Descriptor instead.
func (*BlockIds) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{8}
}

func (x *BlockIds) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

// Block parent tuple
type BlockParent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block id
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	// Period
	Period uint64 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *BlockParent) Reset() {
	*x = BlockParent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockParent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockParent) ProtoMessage() {}

func (x *BlockParent) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockParent.ProtoReflect.Descriptor instead.
func (*BlockParent) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_block_proto_rawDescGZIP(), []int{9}
}

func (x *BlockParent) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *BlockParent) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

var File_massa_model_v1_block_proto protoreflect.FileDescriptor

var file_massa_model_v1_block_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x05, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x39, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8e, 0x01,
	0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x39, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb5,
	0x02, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x10, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x45, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x78, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x95, 0x02, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa1, 0x02, 0x0a, 0x11, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x35,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x70, 0x0a, 0x0c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x5b,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x08, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x73, 0x22, 0x40, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x2a, 0xb4, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x42,
	0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x4c, 0x49, 0x51, 0x55, 0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e,
	0x41, 0x4c, 0x10, 0x02, 0x12, 0x2b, 0x0a, 0x27, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x41,
	0x4c, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x51, 0x55, 0x45, 0x10,
	0x03, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x45, 0x44, 0x10, 0x04, 0x42, 0x9f, 0x01,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x61, 0x74, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xa2, 0x02, 0x06, 0x4d, 0x4d,
	0x4f, 0x44, 0x45, 0x4c, 0xaa, 0x02, 0x12, 0x43, 0x6f, 0x6d, 0x2e, 0x4d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0xba, 0x02, 0x06, 0x4d, 0x4d, 0x4f, 0x44,
	0x45, 0x4c, 0xca, 0x02, 0x12, 0x43, 0x6f, 0x6d, 0x5c, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x15, 0x43, 0x6f, 0x6d, 0x3a, 0x3a, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_massa_model_v1_block_proto_rawDescOnce sync.Once
	file_massa_model_v1_block_proto_rawDescData = file_massa_model_v1_block_proto_rawDesc
)

func file_massa_model_v1_block_proto_rawDescGZIP() []byte {
	file_massa_model_v1_block_proto_rawDescOnce.Do(func() {
		file_massa_model_v1_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_massa_model_v1_block_proto_rawDescData)
	})
	return file_massa_model_v1_block_proto_rawDescData
}

var file_massa_model_v1_block_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_massa_model_v1_block_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_massa_model_v1_block_proto_goTypes = []interface{}{
	(BlockStatus)(0),               // 0: massa.model.v1.BlockStatus
	(*Block)(nil),                  // 1: massa.model.v1.Block
	(*FilledBlock)(nil),            // 2: massa.model.v1.FilledBlock
	(*BlockHeader)(nil),            // 3: massa.model.v1.BlockHeader
	(*FilledOperationEntry)(nil),   // 4: massa.model.v1.FilledOperationEntry
	(*SignedBlock)(nil),            // 5: massa.model.v1.SignedBlock
	(*SignedBlockHeader)(nil),      // 6: massa.model.v1.SignedBlockHeader
	(*BlockWrapper)(nil),           // 7: massa.model.v1.BlockWrapper
	(*BlockInfo)(nil),              // 8: massa.model.v1.BlockInfo
	(*BlockIds)(nil),               // 9: massa.model.v1.BlockIds
	(*BlockParent)(nil),            // 10: massa.model.v1.BlockParent
	(*wrapperspb.UInt32Value)(nil), // 11: google.protobuf.UInt32Value
	(*Slot)(nil),                   // 12: massa.model.v1.Slot
	(*SignedEndorsement)(nil),      // 13: massa.model.v1.SignedEndorsement
	(*SignedOperation)(nil),        // 14: massa.model.v1.SignedOperation
}
var file_massa_model_v1_block_proto_depIdxs = []int32{
	6,  // 0: massa.model.v1.Block.header:type_name -> massa.model.v1.SignedBlockHeader
	6,  // 1: massa.model.v1.FilledBlock.header:type_name -> massa.model.v1.SignedBlockHeader
	4,  // 2: massa.model.v1.FilledBlock.operations:type_name -> massa.model.v1.FilledOperationEntry
	11, // 3: massa.model.v1.BlockHeader.announced_version:type_name -> google.protobuf.UInt32Value
	12, // 4: massa.model.v1.BlockHeader.slot:type_name -> massa.model.v1.Slot
	13, // 5: massa.model.v1.BlockHeader.endorsements:type_name -> massa.model.v1.SignedEndorsement
	14, // 6: massa.model.v1.FilledOperationEntry.operation:type_name -> massa.model.v1.SignedOperation
	1,  // 7: massa.model.v1.SignedBlock.content:type_name -> massa.model.v1.Block
	3,  // 8: massa.model.v1.SignedBlockHeader.content:type_name -> massa.model.v1.BlockHeader
	0,  // 9: massa.model.v1.BlockWrapper.status:type_name -> massa.model.v1.BlockStatus
	1,  // 10: massa.model.v1.BlockWrapper.block:type_name -> massa.model.v1.Block
	0,  // 11: massa.model.v1.BlockInfo.status:type_name -> massa.model.v1.BlockStatus
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_massa_model_v1_block_proto_init() }
func file_massa_model_v1_block_proto_init() {
	if File_massa_model_v1_block_proto != nil {
		return
	}
	file_massa_model_v1_endorsement_proto_init()
	file_massa_model_v1_operation_proto_init()
	file_massa_model_v1_slot_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_massa_model_v1_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilledBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilledOperationEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockParent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_massa_model_v1_block_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_massa_model_v1_block_proto_goTypes,
		DependencyIndexes: file_massa_model_v1_block_proto_depIdxs,
		EnumInfos:         file_massa_model_v1_block_proto_enumTypes,
		MessageInfos:      file_massa_model_v1_block_proto_msgTypes,
	}.Build()
	File_massa_model_v1_block_proto = out.File
	file_massa_model_v1_block_proto_rawDesc = nil
	file_massa_model_v1_block_proto_goTypes = nil
	file_massa_model_v1_block_proto_depIdxs = nil
}
