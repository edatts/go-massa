// Copyright (c) 2023 MASSA LABS <info@massa.net>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: massa/model/v1/execution.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ScExecutionEventStatus type enum
type ScExecutionEventStatus int32

const (
	ScExecutionEventStatus_SC_EXECUTION_EVENT_STATUS_UNSPECIFIED ScExecutionEventStatus = 0 // Default enum value
	ScExecutionEventStatus_SC_EXECUTION_EVENT_STATUS_FINAL       ScExecutionEventStatus = 1 // Final status
	ScExecutionEventStatus_SC_EXECUTION_EVENT_STATUS_READ_ONLY   ScExecutionEventStatus = 2 // Read only status
	ScExecutionEventStatus_SC_EXECUTION_EVENT_STATUS_CANDIDATE   ScExecutionEventStatus = 3 // Candidate status
)

// Enum value maps for ScExecutionEventStatus.
var (
	ScExecutionEventStatus_name = map[int32]string{
		0: "SC_EXECUTION_EVENT_STATUS_UNSPECIFIED",
		1: "SC_EXECUTION_EVENT_STATUS_FINAL",
		2: "SC_EXECUTION_EVENT_STATUS_READ_ONLY",
		3: "SC_EXECUTION_EVENT_STATUS_CANDIDATE",
	}
	ScExecutionEventStatus_value = map[string]int32{
		"SC_EXECUTION_EVENT_STATUS_UNSPECIFIED": 0,
		"SC_EXECUTION_EVENT_STATUS_FINAL":       1,
		"SC_EXECUTION_EVENT_STATUS_READ_ONLY":   2,
		"SC_EXECUTION_EVENT_STATUS_CANDIDATE":   3,
	}
)

func (x ScExecutionEventStatus) Enum() *ScExecutionEventStatus {
	p := new(ScExecutionEventStatus)
	*p = x
	return p
}

func (x ScExecutionEventStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScExecutionEventStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_model_v1_execution_proto_enumTypes[0].Descriptor()
}

func (ScExecutionEventStatus) Type() protoreflect.EnumType {
	return &file_massa_model_v1_execution_proto_enumTypes[0]
}

func (x ScExecutionEventStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScExecutionEventStatus.Descriptor instead.
func (ScExecutionEventStatus) EnumDescriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{0}
}

// ExecutionOutputStatus type enum
type ExecutionOutputStatus int32

const (
	ExecutionOutputStatus_EXECUTION_OUTPUT_STATUS_UNSPECIFIED ExecutionOutputStatus = 0 // Default enum value
	ExecutionOutputStatus_EXECUTION_OUTPUT_STATUS_CANDIDATE   ExecutionOutputStatus = 1 // Candidate status
	ExecutionOutputStatus_EXECUTION_OUTPUT_STATUS_FINAL       ExecutionOutputStatus = 2 // Final status
	ExecutionOutputStatus_EXECUTION_OUTPUT_STATUS_UNKNOWN     ExecutionOutputStatus = 3 // Unknown status
)

// Enum value maps for ExecutionOutputStatus.
var (
	ExecutionOutputStatus_name = map[int32]string{
		0: "EXECUTION_OUTPUT_STATUS_UNSPECIFIED",
		1: "EXECUTION_OUTPUT_STATUS_CANDIDATE",
		2: "EXECUTION_OUTPUT_STATUS_FINAL",
		3: "EXECUTION_OUTPUT_STATUS_UNKNOWN",
	}
	ExecutionOutputStatus_value = map[string]int32{
		"EXECUTION_OUTPUT_STATUS_UNSPECIFIED": 0,
		"EXECUTION_OUTPUT_STATUS_CANDIDATE":   1,
		"EXECUTION_OUTPUT_STATUS_FINAL":       2,
		"EXECUTION_OUTPUT_STATUS_UNKNOWN":     3,
	}
)

func (x ExecutionOutputStatus) Enum() *ExecutionOutputStatus {
	p := new(ExecutionOutputStatus)
	*p = x
	return p
}

func (x ExecutionOutputStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionOutputStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_model_v1_execution_proto_enumTypes[1].Descriptor()
}

func (ExecutionOutputStatus) Type() protoreflect.EnumType {
	return &file_massa_model_v1_execution_proto_enumTypes[1]
}

func (x ExecutionOutputStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionOutputStatus.Descriptor instead.
func (ExecutionOutputStatus) EnumDescriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{1}
}

// OperationExecutionStatus type enum
type OperationExecutionStatus int32

const (
	OperationExecutionStatus_OPERATION_EXECUTION_STATUS_UNSPECIFIED OperationExecutionStatus = 0 // Default enum value
	OperationExecutionStatus_OPERATION_EXECUTION_STATUS_SUCCESS     OperationExecutionStatus = 1 // Success status
	OperationExecutionStatus_OPERATION_EXECUTION_STATUS_FAILED      OperationExecutionStatus = 2 // Failed only status
)

// Enum value maps for OperationExecutionStatus.
var (
	OperationExecutionStatus_name = map[int32]string{
		0: "OPERATION_EXECUTION_STATUS_UNSPECIFIED",
		1: "OPERATION_EXECUTION_STATUS_SUCCESS",
		2: "OPERATION_EXECUTION_STATUS_FAILED",
	}
	OperationExecutionStatus_value = map[string]int32{
		"OPERATION_EXECUTION_STATUS_UNSPECIFIED": 0,
		"OPERATION_EXECUTION_STATUS_SUCCESS":     1,
		"OPERATION_EXECUTION_STATUS_FAILED":      2,
	}
)

func (x OperationExecutionStatus) Enum() *OperationExecutionStatus {
	p := new(OperationExecutionStatus)
	*p = x
	return p
}

func (x OperationExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_model_v1_execution_proto_enumTypes[2].Descriptor()
}

func (OperationExecutionStatus) Type() protoreflect.EnumType {
	return &file_massa_model_v1_execution_proto_enumTypes[2]
}

func (x OperationExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationExecutionStatus.Descriptor instead.
func (OperationExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{2}
}

// AsyncPoolChangeType type enum
type AsyncPoolChangeType int32

const (
	AsyncPoolChangeType_ASYNC_POOL_CHANGE_TYPE_UNSPECIFIED AsyncPoolChangeType = 0 // Default enum value
	AsyncPoolChangeType_ASYNC_POOL_CHANGE_TYPE_SET         AsyncPoolChangeType = 1 // Set type
	AsyncPoolChangeType_ASYNC_POOL_CHANGE_TYPE_UPDATE      AsyncPoolChangeType = 2 // Activate only type
	AsyncPoolChangeType_ASYNC_POOL_CHANGE_TYPE_DELETE      AsyncPoolChangeType = 3 // Delete only type
)

// Enum value maps for AsyncPoolChangeType.
var (
	AsyncPoolChangeType_name = map[int32]string{
		0: "ASYNC_POOL_CHANGE_TYPE_UNSPECIFIED",
		1: "ASYNC_POOL_CHANGE_TYPE_SET",
		2: "ASYNC_POOL_CHANGE_TYPE_UPDATE",
		3: "ASYNC_POOL_CHANGE_TYPE_DELETE",
	}
	AsyncPoolChangeType_value = map[string]int32{
		"ASYNC_POOL_CHANGE_TYPE_UNSPECIFIED": 0,
		"ASYNC_POOL_CHANGE_TYPE_SET":         1,
		"ASYNC_POOL_CHANGE_TYPE_UPDATE":      2,
		"ASYNC_POOL_CHANGE_TYPE_DELETE":      3,
	}
)

func (x AsyncPoolChangeType) Enum() *AsyncPoolChangeType {
	p := new(AsyncPoolChangeType)
	*p = x
	return p
}

func (x AsyncPoolChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AsyncPoolChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_model_v1_execution_proto_enumTypes[3].Descriptor()
}

func (AsyncPoolChangeType) Type() protoreflect.EnumType {
	return &file_massa_model_v1_execution_proto_enumTypes[3]
}

func (x AsyncPoolChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AsyncPoolChangeType.Descriptor instead.
func (AsyncPoolChangeType) EnumDescriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{3}
}

// LedgerChangeType type enum
type LedgerChangeType int32

const (
	LedgerChangeType_LEDGER_CHANGE_TYPE_UNSPECIFIED LedgerChangeType = 0 // Default enum value
	LedgerChangeType_LEDGER_CHANGE_TYPE_SET         LedgerChangeType = 1 // Set type
	LedgerChangeType_LEDGER_CHANGE_TYPE_UPDATE      LedgerChangeType = 2 // Update type
	LedgerChangeType_LEDGER_CHANGE_TYPE_DELETE      LedgerChangeType = 3 // Delete type
)

// Enum value maps for LedgerChangeType.
var (
	LedgerChangeType_name = map[int32]string{
		0: "LEDGER_CHANGE_TYPE_UNSPECIFIED",
		1: "LEDGER_CHANGE_TYPE_SET",
		2: "LEDGER_CHANGE_TYPE_UPDATE",
		3: "LEDGER_CHANGE_TYPE_DELETE",
	}
	LedgerChangeType_value = map[string]int32{
		"LEDGER_CHANGE_TYPE_UNSPECIFIED": 0,
		"LEDGER_CHANGE_TYPE_SET":         1,
		"LEDGER_CHANGE_TYPE_UPDATE":      2,
		"LEDGER_CHANGE_TYPE_DELETE":      3,
	}
)

func (x LedgerChangeType) Enum() *LedgerChangeType {
	p := new(LedgerChangeType)
	*p = x
	return p
}

func (x LedgerChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LedgerChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_model_v1_execution_proto_enumTypes[4].Descriptor()
}

func (LedgerChangeType) Type() protoreflect.EnumType {
	return &file_massa_model_v1_execution_proto_enumTypes[4]
}

func (x LedgerChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LedgerChangeType.Descriptor instead.
func (LedgerChangeType) EnumDescriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{4}
}

// SlotExecutionOutput
type SlotExecutionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status
	Status ExecutionOutputStatus `protobuf:"varint,1,opt,name=status,proto3,enum=massa.model.v1.ExecutionOutputStatus" json:"status,omitempty"`
	// Executed slot output
	ExecutionOutput *ExecutionOutput `protobuf:"bytes,2,opt,name=execution_output,json=executionOutput,proto3" json:"execution_output,omitempty"`
}

func (x *SlotExecutionOutput) Reset() {
	*x = SlotExecutionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotExecutionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotExecutionOutput) ProtoMessage() {}

func (x *SlotExecutionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotExecutionOutput.ProtoReflect.Descriptor instead.
func (*SlotExecutionOutput) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{0}
}

func (x *SlotExecutionOutput) GetStatus() ExecutionOutputStatus {
	if x != nil {
		return x.Status
	}
	return ExecutionOutputStatus_EXECUTION_OUTPUT_STATUS_UNSPECIFIED
}

func (x *SlotExecutionOutput) GetExecutionOutput() *ExecutionOutput {
	if x != nil {
		return x.ExecutionOutput
	}
	return nil
}

// FinalizedExecutionOutput
type FinalizedExecutionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slot
	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *FinalizedExecutionOutput) Reset() {
	*x = FinalizedExecutionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizedExecutionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizedExecutionOutput) ProtoMessage() {}

func (x *FinalizedExecutionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizedExecutionOutput.ProtoReflect.Descriptor instead.
func (*FinalizedExecutionOutput) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{1}
}

func (x *FinalizedExecutionOutput) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

// ExecutionOutput
type ExecutionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slot
	Slot *Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// Block id at that slot (Optional)
	BlockId *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	// Events emitted by the execution step
	Events []*ScExecutionEvent `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	// State changes caused by the execution step
	StateChanges *StateChanges `protobuf:"bytes,4,opt,name=state_changes,json=stateChanges,proto3" json:"state_changes,omitempty"`
}

func (x *ExecutionOutput) Reset() {
	*x = ExecutionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionOutput) ProtoMessage() {}

func (x *ExecutionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionOutput.ProtoReflect.Descriptor instead.
func (*ExecutionOutput) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{2}
}

func (x *ExecutionOutput) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *ExecutionOutput) GetBlockId() *wrapperspb.StringValue {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *ExecutionOutput) GetEvents() []*ScExecutionEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ExecutionOutput) GetStateChanges() *StateChanges {
	if x != nil {
		return x.StateChanges
	}
	return nil
}

// ScExecutionEvent
type ScExecutionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sc execution context
	Context *ScExecutionEventContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// Generated data of the event
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ScExecutionEvent) Reset() {
	*x = ScExecutionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScExecutionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScExecutionEvent) ProtoMessage() {}

func (x *ScExecutionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScExecutionEvent.ProtoReflect.Descriptor instead.
func (*ScExecutionEvent) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{3}
}

func (x *ScExecutionEvent) GetContext() *ScExecutionEventContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ScExecutionEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ScExecutionEvent context
type ScExecutionEventContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// When was it generated
	OriginSlot *Slot `protobuf:"bytes,1,opt,name=origin_slot,json=originSlot,proto3" json:"origin_slot,omitempty"`
	// Block id if there was a block at that slot (Optional)
	BlockId *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	// Index of the event in the slot
	IndexInSlot uint64 `protobuf:"varint,3,opt,name=index_in_slot,json=indexInSlot,proto3" json:"index_in_slot,omitempty"`
	// Call stack addresses. most recent at the end
	CallStack []string `protobuf:"bytes,4,rep,name=call_stack,json=callStack,proto3" json:"call_stack,omitempty"`
	// Origin operation id (Optional)
	OriginOperationId *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=origin_operation_id,json=originOperationId,proto3" json:"origin_operation_id,omitempty"`
	// If a failure occurred
	IsFailure bool `protobuf:"varint,6,opt,name=is_failure,json=isFailure,proto3" json:"is_failure,omitempty"`
	// Status
	Status ScExecutionEventStatus `protobuf:"varint,7,opt,name=status,proto3,enum=massa.model.v1.ScExecutionEventStatus" json:"status,omitempty"`
}

func (x *ScExecutionEventContext) Reset() {
	*x = ScExecutionEventContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScExecutionEventContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScExecutionEventContext) ProtoMessage() {}

func (x *ScExecutionEventContext) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScExecutionEventContext.ProtoReflect.Descriptor instead.
func (*ScExecutionEventContext) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{4}
}

func (x *ScExecutionEventContext) GetOriginSlot() *Slot {
	if x != nil {
		return x.OriginSlot
	}
	return nil
}

func (x *ScExecutionEventContext) GetBlockId() *wrapperspb.StringValue {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *ScExecutionEventContext) GetIndexInSlot() uint64 {
	if x != nil {
		return x.IndexInSlot
	}
	return 0
}

func (x *ScExecutionEventContext) GetCallStack() []string {
	if x != nil {
		return x.CallStack
	}
	return nil
}

func (x *ScExecutionEventContext) GetOriginOperationId() *wrapperspb.StringValue {
	if x != nil {
		return x.OriginOperationId
	}
	return nil
}

func (x *ScExecutionEventContext) GetIsFailure() bool {
	if x != nil {
		return x.IsFailure
	}
	return false
}

func (x *ScExecutionEventContext) GetStatus() ScExecutionEventStatus {
	if x != nil {
		return x.Status
	}
	return ScExecutionEventStatus_SC_EXECUTION_EVENT_STATUS_UNSPECIFIED
}

// ScExecutionEventsStatus
type ScExecutionEventsStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status
	Status []ScExecutionEventStatus `protobuf:"varint,1,rep,packed,name=status,proto3,enum=massa.model.v1.ScExecutionEventStatus" json:"status,omitempty"`
}

func (x *ScExecutionEventsStatus) Reset() {
	*x = ScExecutionEventsStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScExecutionEventsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScExecutionEventsStatus) ProtoMessage() {}

func (x *ScExecutionEventsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScExecutionEventsStatus.ProtoReflect.Descriptor instead.
func (*ScExecutionEventsStatus) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{5}
}

func (x *ScExecutionEventsStatus) GetStatus() []ScExecutionEventStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// StateChanges
type StateChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ledger changes
	LedgerChanges []*LedgerChangeEntry `protobuf:"bytes,1,rep,name=ledger_changes,json=ledgerChanges,proto3" json:"ledger_changes,omitempty"`
	// Asynchronous pool changes
	AsyncPoolChanges []*AsyncPoolChangeEntry `protobuf:"bytes,2,rep,name=async_pool_changes,json=asyncPoolChanges,proto3" json:"async_pool_changes,omitempty"`
	// Executed operations changes
	ExecutedOpsChanges []*ExecutedOpsChangeEntry `protobuf:"bytes,4,rep,name=executed_ops_changes,json=executedOpsChanges,proto3" json:"executed_ops_changes,omitempty"`
	// Executed denunciations changes
	ExecutedDenunciationsChanges []*DenunciationIndex `protobuf:"bytes,5,rep,name=executed_denunciations_changes,json=executedDenunciationsChanges,proto3" json:"executed_denunciations_changes,omitempty"`
	// Execution trail hash change
	ExecutionTrailHashChange *SetOrKeepString `protobuf:"bytes,6,opt,name=execution_trail_hash_change,json=executionTrailHashChange,proto3" json:"execution_trail_hash_change,omitempty"`
}

func (x *StateChanges) Reset() {
	*x = StateChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChanges) ProtoMessage() {}

func (x *StateChanges) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChanges.ProtoReflect.Descriptor instead.
func (*StateChanges) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{6}
}

func (x *StateChanges) GetLedgerChanges() []*LedgerChangeEntry {
	if x != nil {
		return x.LedgerChanges
	}
	return nil
}

func (x *StateChanges) GetAsyncPoolChanges() []*AsyncPoolChangeEntry {
	if x != nil {
		return x.AsyncPoolChanges
	}
	return nil
}

func (x *StateChanges) GetExecutedOpsChanges() []*ExecutedOpsChangeEntry {
	if x != nil {
		return x.ExecutedOpsChanges
	}
	return nil
}

func (x *StateChanges) GetExecutedDenunciationsChanges() []*DenunciationIndex {
	if x != nil {
		return x.ExecutedDenunciationsChanges
	}
	return nil
}

func (x *StateChanges) GetExecutionTrailHashChange() *SetOrKeepString {
	if x != nil {
		return x.ExecutionTrailHashChange
	}
	return nil
}

// ExecutedOpsChangeEntry
type ExecutedOpsChangeEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// ExecutedOpsChangeValue
	Value *ExecutedOpsChangeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ExecutedOpsChangeEntry) Reset() {
	*x = ExecutedOpsChangeEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutedOpsChangeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutedOpsChangeEntry) ProtoMessage() {}

func (x *ExecutedOpsChangeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutedOpsChangeEntry.ProtoReflect.Descriptor instead.
func (*ExecutedOpsChangeEntry) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{7}
}

func (x *ExecutedOpsChangeEntry) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *ExecutedOpsChangeEntry) GetValue() *ExecutedOpsChangeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

// ExecutedOpsChangeValue
type ExecutedOpsChangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The status of the execution of the operation
	Status OperationExecutionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=massa.model.v1.OperationExecutionStatus" json:"status,omitempty"`
	// Slot until which the operation remains valid (included)
	Slot *Slot `protobuf:"bytes,2,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *ExecutedOpsChangeValue) Reset() {
	*x = ExecutedOpsChangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutedOpsChangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutedOpsChangeValue) ProtoMessage() {}

func (x *ExecutedOpsChangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutedOpsChangeValue.ProtoReflect.Descriptor instead.
func (*ExecutedOpsChangeValue) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{8}
}

func (x *ExecutedOpsChangeValue) GetStatus() OperationExecutionStatus {
	if x != nil {
		return x.Status
	}
	return OperationExecutionStatus_OPERATION_EXECUTION_STATUS_UNSPECIFIED
}

func (x *ExecutedOpsChangeValue) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

// AsyncPoolChange Entry
type AsyncPoolChangeEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Async message id
	AsyncMessageId string `protobuf:"bytes,1,opt,name=async_message_id,json=asyncMessageId,proto3" json:"async_message_id,omitempty"`
	// AsyncPool message
	Value *AsyncPoolChangeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AsyncPoolChangeEntry) Reset() {
	*x = AsyncPoolChangeEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncPoolChangeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncPoolChangeEntry) ProtoMessage() {}

func (x *AsyncPoolChangeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncPoolChangeEntry.ProtoReflect.Descriptor instead.
func (*AsyncPoolChangeEntry) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{9}
}

func (x *AsyncPoolChangeEntry) GetAsyncMessageId() string {
	if x != nil {
		return x.AsyncMessageId
	}
	return ""
}

func (x *AsyncPoolChangeEntry) GetValue() *AsyncPoolChangeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

// AsyncPoolChangeValue
type AsyncPoolChangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	Type AsyncPoolChangeType `protobuf:"varint,1,opt,name=type,proto3,enum=massa.model.v1.AsyncPoolChangeType" json:"type,omitempty"`
	// AsyncPool message
	//
	// Types that are assignable to Message:
	//
	//	*AsyncPoolChangeValue_CreatedMessage
	//	*AsyncPoolChangeValue_UpdatedMessage
	Message isAsyncPoolChangeValue_Message `protobuf_oneof:"message"`
}

func (x *AsyncPoolChangeValue) Reset() {
	*x = AsyncPoolChangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncPoolChangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncPoolChangeValue) ProtoMessage() {}

func (x *AsyncPoolChangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncPoolChangeValue.ProtoReflect.Descriptor instead.
func (*AsyncPoolChangeValue) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{10}
}

func (x *AsyncPoolChangeValue) GetType() AsyncPoolChangeType {
	if x != nil {
		return x.Type
	}
	return AsyncPoolChangeType_ASYNC_POOL_CHANGE_TYPE_UNSPECIFIED
}

func (m *AsyncPoolChangeValue) GetMessage() isAsyncPoolChangeValue_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *AsyncPoolChangeValue) GetCreatedMessage() *AsyncMessage {
	if x, ok := x.GetMessage().(*AsyncPoolChangeValue_CreatedMessage); ok {
		return x.CreatedMessage
	}
	return nil
}

func (x *AsyncPoolChangeValue) GetUpdatedMessage() *AsyncMessageUpdate {
	if x, ok := x.GetMessage().(*AsyncPoolChangeValue_UpdatedMessage); ok {
		return x.UpdatedMessage
	}
	return nil
}

type isAsyncPoolChangeValue_Message interface {
	isAsyncPoolChangeValue_Message()
}

type AsyncPoolChangeValue_CreatedMessage struct {
	// Created ledger entry
	CreatedMessage *AsyncMessage `protobuf:"bytes,2,opt,name=created_message,json=createdMessage,proto3,oneof"`
}

type AsyncPoolChangeValue_UpdatedMessage struct {
	// Update ledger entry
	UpdatedMessage *AsyncMessageUpdate `protobuf:"bytes,3,opt,name=updated_message,json=updatedMessage,proto3,oneof"`
}

func (*AsyncPoolChangeValue_CreatedMessage) isAsyncPoolChangeValue_Message() {}

func (*AsyncPoolChangeValue_UpdatedMessage) isAsyncPoolChangeValue_Message() {}

// Asynchronous smart contract message
type AsyncMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slot at which the message was emitted
	EmissionSlot *Slot `protobuf:"bytes,1,opt,name=emission_slot,json=emissionSlot,proto3" json:"emission_slot,omitempty"`
	// Index of the emitted message within the `emission_slot`.
	// This is used for disambiguate the emission of multiple messages at the same slot.
	EmissionIndex uint64 `protobuf:"varint,2,opt,name=emission_index,json=emissionIndex,proto3" json:"emission_index,omitempty"`
	// The address that sent the message
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// The address towards which the message is being sent
	Destination string `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	// the handler function name within the destination address' bytecode
	Handler string `protobuf:"bytes,5,opt,name=handler,proto3" json:"handler,omitempty"`
	// Maximum gas to use when processing the message
	MaxGas uint64 `protobuf:"varint,6,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	// Fee paid by the sender when the message is processed.
	Fee *NativeAmount `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	// Coins sent from the sender to the target address of the message.
	// Those coins are spent by the sender address when the message is sent,
	// and credited to the destination address when receiving the message.
	// In case of failure or discard, those coins are reimbursed to the sender.
	Coins *NativeAmount `protobuf:"bytes,8,opt,name=coins,proto3" json:"coins,omitempty"`
	// Slot at which the message starts being valid (bound included in the validity range)
	ValidityStart *Slot `protobuf:"bytes,9,opt,name=validity_start,json=validityStart,proto3" json:"validity_start,omitempty"`
	// Slot at which the message stops being valid (bound not included in the validity range)
	ValidityEnd *Slot `protobuf:"bytes,10,opt,name=validity_end,json=validityEnd,proto3" json:"validity_end,omitempty"`
	// Raw payload data of the message
	Data []byte `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	// Trigger that define whenever a message can be executed
	Trigger *AsyncMessageTrigger `protobuf:"bytes,12,opt,name=trigger,proto3" json:"trigger,omitempty"`
	// Boolean that determine if the message can be executed. For messages without filter this boolean is always true.
	// For messages with filter, this boolean is true if the filter has been matched between `validity_start` and current slot.
	CanBeExecuted bool `protobuf:"varint,13,opt,name=can_be_executed,json=canBeExecuted,proto3" json:"can_be_executed,omitempty"`
}

func (x *AsyncMessage) Reset() {
	*x = AsyncMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncMessage) ProtoMessage() {}

func (x *AsyncMessage) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncMessage.ProtoReflect.Descriptor instead.
func (*AsyncMessage) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{11}
}

func (x *AsyncMessage) GetEmissionSlot() *Slot {
	if x != nil {
		return x.EmissionSlot
	}
	return nil
}

func (x *AsyncMessage) GetEmissionIndex() uint64 {
	if x != nil {
		return x.EmissionIndex
	}
	return 0
}

func (x *AsyncMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *AsyncMessage) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *AsyncMessage) GetHandler() string {
	if x != nil {
		return x.Handler
	}
	return ""
}

func (x *AsyncMessage) GetMaxGas() uint64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

func (x *AsyncMessage) GetFee() *NativeAmount {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *AsyncMessage) GetCoins() *NativeAmount {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *AsyncMessage) GetValidityStart() *Slot {
	if x != nil {
		return x.ValidityStart
	}
	return nil
}

func (x *AsyncMessage) GetValidityEnd() *Slot {
	if x != nil {
		return x.ValidityEnd
	}
	return nil
}

func (x *AsyncMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AsyncMessage) GetTrigger() *AsyncMessageTrigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *AsyncMessage) GetCanBeExecuted() bool {
	if x != nil {
		return x.CanBeExecuted
	}
	return false
}

// Asynchronous smart contract message
type AsyncMessageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Change the slot at which the message was emitted
	EmissionSlot *SetOrKeepSlot `protobuf:"bytes,1,opt,name=emission_slot,json=emissionSlot,proto3" json:"emission_slot,omitempty"`
	// Change the index of the emitted message within the `emission_slot`.
	// This is used for disambiguate the emission of multiple messages at the same slot.
	EmissionIndex *SetOrKeepUint64 `protobuf:"bytes,2,opt,name=emission_index,json=emissionIndex,proto3" json:"emission_index,omitempty"`
	// Change the address that sent the message
	Sender *SetOrKeepString `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// Change the address towards which the message is being sent
	Destination *SetOrKeepString `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	// Change the handler function name within the destination address' bytecode
	Handler *SetOrKeepString `protobuf:"bytes,5,opt,name=handler,proto3" json:"handler,omitempty"`
	// Change the maximum gas to use when processing the message
	MaxGas *SetOrKeepUint64 `protobuf:"bytes,6,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	// Change the fee paid by the sender when the message is processed.
	Fee *SetOrKeepUint64 `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
	// Change the coins sent from the sender to the target address of the message.
	// Those coins are spent by the sender address when the message is sent,
	// and credited to the destination address when receiving the message.
	// In case of failure or discard, those coins are reimbursed to the sender.
	Coins *SetOrKeepUint64 `protobuf:"bytes,8,opt,name=coins,proto3" json:"coins,omitempty"`
	// Change the slot at which the message starts being valid (bound included in the validity range)
	ValidityStart *SetOrKeepSlot `protobuf:"bytes,9,opt,name=validity_start,json=validityStart,proto3" json:"validity_start,omitempty"`
	// Change the slot at which the message stops being valid (bound not included in the validity range)
	ValidityEnd *SetOrKeepSlot `protobuf:"bytes,10,opt,name=validity_end,json=validityEnd,proto3" json:"validity_end,omitempty"`
	// Change the raw payload data of the message
	Data *SetOrKeepBytes `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	// Change the trigger that define whenever a message can be executed
	Trigger *SetOrKeepAsyncMessageTrigger `protobuf:"bytes,12,opt,name=trigger,proto3" json:"trigger,omitempty"`
	// Change the boolean that determine if the message can be executed. For messages without filter this boolean is always true.
	// For messages with filter, this boolean is true if the filter has been matched between `validity_start` and current slot.
	CanBeExecuted *SetOrKeepBool `protobuf:"bytes,13,opt,name=can_be_executed,json=canBeExecuted,proto3" json:"can_be_executed,omitempty"`
}

func (x *AsyncMessageUpdate) Reset() {
	*x = AsyncMessageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncMessageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncMessageUpdate) ProtoMessage() {}

func (x *AsyncMessageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncMessageUpdate.ProtoReflect.Descriptor instead.
func (*AsyncMessageUpdate) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{12}
}

func (x *AsyncMessageUpdate) GetEmissionSlot() *SetOrKeepSlot {
	if x != nil {
		return x.EmissionSlot
	}
	return nil
}

func (x *AsyncMessageUpdate) GetEmissionIndex() *SetOrKeepUint64 {
	if x != nil {
		return x.EmissionIndex
	}
	return nil
}

func (x *AsyncMessageUpdate) GetSender() *SetOrKeepString {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *AsyncMessageUpdate) GetDestination() *SetOrKeepString {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *AsyncMessageUpdate) GetHandler() *SetOrKeepString {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *AsyncMessageUpdate) GetMaxGas() *SetOrKeepUint64 {
	if x != nil {
		return x.MaxGas
	}
	return nil
}

func (x *AsyncMessageUpdate) GetFee() *SetOrKeepUint64 {
	if x != nil {
		return x.Fee
	}
	return nil
}

func (x *AsyncMessageUpdate) GetCoins() *SetOrKeepUint64 {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *AsyncMessageUpdate) GetValidityStart() *SetOrKeepSlot {
	if x != nil {
		return x.ValidityStart
	}
	return nil
}

func (x *AsyncMessageUpdate) GetValidityEnd() *SetOrKeepSlot {
	if x != nil {
		return x.ValidityEnd
	}
	return nil
}

func (x *AsyncMessageUpdate) GetData() *SetOrKeepBytes {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AsyncMessageUpdate) GetTrigger() *SetOrKeepAsyncMessageTrigger {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *AsyncMessageUpdate) GetCanBeExecuted() *SetOrKeepBool {
	if x != nil {
		return x.CanBeExecuted
	}
	return nil
}

// Set or Keep Slot
type SetOrKeepSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrKeepSlot_Set
	//	*SetOrKeepSlot_Keep
	Change isSetOrKeepSlot_Change `protobuf_oneof:"change"`
}

func (x *SetOrKeepSlot) Reset() {
	*x = SetOrKeepSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrKeepSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrKeepSlot) ProtoMessage() {}

func (x *SetOrKeepSlot) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrKeepSlot.ProtoReflect.Descriptor instead.
func (*SetOrKeepSlot) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{13}
}

func (m *SetOrKeepSlot) GetChange() isSetOrKeepSlot_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrKeepSlot) GetSet() *Slot {
	if x, ok := x.GetChange().(*SetOrKeepSlot_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrKeepSlot) GetKeep() *Empty {
	if x, ok := x.GetChange().(*SetOrKeepSlot_Keep); ok {
		return x.Keep
	}
	return nil
}

type isSetOrKeepSlot_Change interface {
	isSetOrKeepSlot_Change()
}

type SetOrKeepSlot_Set struct {
	// The value of that entry (Optional)
	Set *Slot `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrKeepSlot_Keep struct {
	// Keep the existing value
	Keep *Empty `protobuf:"bytes,2,opt,name=keep,proto3,oneof"`
}

func (*SetOrKeepSlot_Set) isSetOrKeepSlot_Change() {}

func (*SetOrKeepSlot_Keep) isSetOrKeepSlot_Change() {}

// Set or Keep Uint64
type SetOrKeepUint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrKeepUint64_Set
	//	*SetOrKeepUint64_Keep
	Change isSetOrKeepUint64_Change `protobuf_oneof:"change"`
}

func (x *SetOrKeepUint64) Reset() {
	*x = SetOrKeepUint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrKeepUint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrKeepUint64) ProtoMessage() {}

func (x *SetOrKeepUint64) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrKeepUint64.ProtoReflect.Descriptor instead.
func (*SetOrKeepUint64) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{14}
}

func (m *SetOrKeepUint64) GetChange() isSetOrKeepUint64_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrKeepUint64) GetSet() *wrapperspb.UInt64Value {
	if x, ok := x.GetChange().(*SetOrKeepUint64_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrKeepUint64) GetKeep() *Empty {
	if x, ok := x.GetChange().(*SetOrKeepUint64_Keep); ok {
		return x.Keep
	}
	return nil
}

type isSetOrKeepUint64_Change interface {
	isSetOrKeepUint64_Change()
}

type SetOrKeepUint64_Set struct {
	// The value of that entry (Optional)
	Set *wrapperspb.UInt64Value `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrKeepUint64_Keep struct {
	// Keep the existing value
	Keep *Empty `protobuf:"bytes,2,opt,name=keep,proto3,oneof"`
}

func (*SetOrKeepUint64_Set) isSetOrKeepUint64_Change() {}

func (*SetOrKeepUint64_Keep) isSetOrKeepUint64_Change() {}

// Set or Keep String
type SetOrKeepString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrKeepString_Set
	//	*SetOrKeepString_Keep
	Change isSetOrKeepString_Change `protobuf_oneof:"change"`
}

func (x *SetOrKeepString) Reset() {
	*x = SetOrKeepString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrKeepString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrKeepString) ProtoMessage() {}

func (x *SetOrKeepString) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrKeepString.ProtoReflect.Descriptor instead.
func (*SetOrKeepString) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{15}
}

func (m *SetOrKeepString) GetChange() isSetOrKeepString_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrKeepString) GetSet() *wrapperspb.StringValue {
	if x, ok := x.GetChange().(*SetOrKeepString_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrKeepString) GetKeep() *Empty {
	if x, ok := x.GetChange().(*SetOrKeepString_Keep); ok {
		return x.Keep
	}
	return nil
}

type isSetOrKeepString_Change interface {
	isSetOrKeepString_Change()
}

type SetOrKeepString_Set struct {
	// The value of that entry (Optional)
	Set *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrKeepString_Keep struct {
	// Keep the existing value
	Keep *Empty `protobuf:"bytes,2,opt,name=keep,proto3,oneof"`
}

func (*SetOrKeepString_Set) isSetOrKeepString_Change() {}

func (*SetOrKeepString_Keep) isSetOrKeepString_Change() {}

// Set or Keep Bytes
type SetOrKeepBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrKeepBytes_Set
	//	*SetOrKeepBytes_Keep
	Change isSetOrKeepBytes_Change `protobuf_oneof:"change"`
}

func (x *SetOrKeepBytes) Reset() {
	*x = SetOrKeepBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrKeepBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrKeepBytes) ProtoMessage() {}

func (x *SetOrKeepBytes) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrKeepBytes.ProtoReflect.Descriptor instead.
func (*SetOrKeepBytes) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{16}
}

func (m *SetOrKeepBytes) GetChange() isSetOrKeepBytes_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrKeepBytes) GetSet() *wrapperspb.BytesValue {
	if x, ok := x.GetChange().(*SetOrKeepBytes_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrKeepBytes) GetKeep() *Empty {
	if x, ok := x.GetChange().(*SetOrKeepBytes_Keep); ok {
		return x.Keep
	}
	return nil
}

type isSetOrKeepBytes_Change interface {
	isSetOrKeepBytes_Change()
}

type SetOrKeepBytes_Set struct {
	// The value of that entry (Optional)
	Set *wrapperspb.BytesValue `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrKeepBytes_Keep struct {
	// Keep the existing value
	Keep *Empty `protobuf:"bytes,2,opt,name=keep,proto3,oneof"`
}

func (*SetOrKeepBytes_Set) isSetOrKeepBytes_Change() {}

func (*SetOrKeepBytes_Keep) isSetOrKeepBytes_Change() {}

// Set or Keep Bool
type SetOrKeepBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrKeepBool_Set
	//	*SetOrKeepBool_Keep
	Change isSetOrKeepBool_Change `protobuf_oneof:"change"`
}

func (x *SetOrKeepBool) Reset() {
	*x = SetOrKeepBool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrKeepBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrKeepBool) ProtoMessage() {}

func (x *SetOrKeepBool) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrKeepBool.ProtoReflect.Descriptor instead.
func (*SetOrKeepBool) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{17}
}

func (m *SetOrKeepBool) GetChange() isSetOrKeepBool_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrKeepBool) GetSet() *wrapperspb.BoolValue {
	if x, ok := x.GetChange().(*SetOrKeepBool_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrKeepBool) GetKeep() *Empty {
	if x, ok := x.GetChange().(*SetOrKeepBool_Keep); ok {
		return x.Keep
	}
	return nil
}

type isSetOrKeepBool_Change interface {
	isSetOrKeepBool_Change()
}

type SetOrKeepBool_Set struct {
	// The value of that entry (Optional)
	Set *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrKeepBool_Keep struct {
	// Keep the existing value
	Keep *Empty `protobuf:"bytes,2,opt,name=keep,proto3,oneof"`
}

func (*SetOrKeepBool_Set) isSetOrKeepBool_Change() {}

func (*SetOrKeepBool_Keep) isSetOrKeepBool_Change() {}

// Set or Keep AsyncMessageTrigger
type SetOrKeepAsyncMessageTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrKeepAsyncMessageTrigger_Set
	//	*SetOrKeepAsyncMessageTrigger_Keep
	Change isSetOrKeepAsyncMessageTrigger_Change `protobuf_oneof:"change"`
}

func (x *SetOrKeepAsyncMessageTrigger) Reset() {
	*x = SetOrKeepAsyncMessageTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrKeepAsyncMessageTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrKeepAsyncMessageTrigger) ProtoMessage() {}

func (x *SetOrKeepAsyncMessageTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrKeepAsyncMessageTrigger.ProtoReflect.Descriptor instead.
func (*SetOrKeepAsyncMessageTrigger) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{18}
}

func (m *SetOrKeepAsyncMessageTrigger) GetChange() isSetOrKeepAsyncMessageTrigger_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrKeepAsyncMessageTrigger) GetSet() *AsyncMessageTrigger {
	if x, ok := x.GetChange().(*SetOrKeepAsyncMessageTrigger_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrKeepAsyncMessageTrigger) GetKeep() *Empty {
	if x, ok := x.GetChange().(*SetOrKeepAsyncMessageTrigger_Keep); ok {
		return x.Keep
	}
	return nil
}

type isSetOrKeepAsyncMessageTrigger_Change interface {
	isSetOrKeepAsyncMessageTrigger_Change()
}

type SetOrKeepAsyncMessageTrigger_Set struct {
	// The value of that entry (Optional)
	Set *AsyncMessageTrigger `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrKeepAsyncMessageTrigger_Keep struct {
	// Keep the existing value
	Keep *Empty `protobuf:"bytes,2,opt,name=keep,proto3,oneof"`
}

func (*SetOrKeepAsyncMessageTrigger_Set) isSetOrKeepAsyncMessageTrigger_Change() {}

func (*SetOrKeepAsyncMessageTrigger_Keep) isSetOrKeepAsyncMessageTrigger_Change() {}

// Structure defining a trigger for an asynchronous message
type AsyncMessageTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter on the address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Filter on the datastore key (Optional)
	DatastoreKey *wrapperspb.BytesValue `protobuf:"bytes,2,opt,name=datastore_key,json=datastoreKey,proto3" json:"datastore_key,omitempty"`
}

func (x *AsyncMessageTrigger) Reset() {
	*x = AsyncMessageTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncMessageTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncMessageTrigger) ProtoMessage() {}

func (x *AsyncMessageTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncMessageTrigger.ProtoReflect.Descriptor instead.
func (*AsyncMessageTrigger) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{19}
}

func (x *AsyncMessageTrigger) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AsyncMessageTrigger) GetDatastoreKey() *wrapperspb.BytesValue {
	if x != nil {
		return x.DatastoreKey
	}
	return nil
}

// LedgerChangeEntry
type LedgerChangeEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Ledger message
	Value *LedgerChangeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LedgerChangeEntry) Reset() {
	*x = LedgerChangeEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerChangeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerChangeEntry) ProtoMessage() {}

func (x *LedgerChangeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerChangeEntry.ProtoReflect.Descriptor instead.
func (*LedgerChangeEntry) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{20}
}

func (x *LedgerChangeEntry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LedgerChangeEntry) GetValue() *LedgerChangeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

// LedgerChangeValue
type LedgerChangeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	Type LedgerChangeType `protobuf:"varint,1,opt,name=type,proto3,enum=massa.model.v1.LedgerChangeType" json:"type,omitempty"`
	// LedgerEntry or LedgerEntryUpdate
	//
	// Types that are assignable to Entry:
	//
	//	*LedgerChangeValue_CreatedEntry
	//	*LedgerChangeValue_UpdatedEntry
	Entry isLedgerChangeValue_Entry `protobuf_oneof:"entry"`
}

func (x *LedgerChangeValue) Reset() {
	*x = LedgerChangeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerChangeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerChangeValue) ProtoMessage() {}

func (x *LedgerChangeValue) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerChangeValue.ProtoReflect.Descriptor instead.
func (*LedgerChangeValue) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{21}
}

func (x *LedgerChangeValue) GetType() LedgerChangeType {
	if x != nil {
		return x.Type
	}
	return LedgerChangeType_LEDGER_CHANGE_TYPE_UNSPECIFIED
}

func (m *LedgerChangeValue) GetEntry() isLedgerChangeValue_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (x *LedgerChangeValue) GetCreatedEntry() *LedgerEntry {
	if x, ok := x.GetEntry().(*LedgerChangeValue_CreatedEntry); ok {
		return x.CreatedEntry
	}
	return nil
}

func (x *LedgerChangeValue) GetUpdatedEntry() *LedgerEntryUpdate {
	if x, ok := x.GetEntry().(*LedgerChangeValue_UpdatedEntry); ok {
		return x.UpdatedEntry
	}
	return nil
}

type isLedgerChangeValue_Entry interface {
	isLedgerChangeValue_Entry()
}

type LedgerChangeValue_CreatedEntry struct {
	// Created ledger entry
	CreatedEntry *LedgerEntry `protobuf:"bytes,2,opt,name=created_entry,json=createdEntry,proto3,oneof"`
}

type LedgerChangeValue_UpdatedEntry struct {
	// Update ledger entry
	UpdatedEntry *LedgerEntryUpdate `protobuf:"bytes,3,opt,name=updated_entry,json=updatedEntry,proto3,oneof"`
}

func (*LedgerChangeValue_CreatedEntry) isLedgerChangeValue_Entry() {}

func (*LedgerChangeValue_UpdatedEntry) isLedgerChangeValue_Entry() {}

// An entry associated to an address in the `FinalLedger`
type LedgerEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The balance of that entry
	Balance *NativeAmount `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// Executable bytecode
	Bytecode []byte `protobuf:"bytes,2,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
	// A key-value store associating a hash to arbitrary bytes
	Datastore []*BytesMapFieldEntry `protobuf:"bytes,3,rep,name=datastore,proto3" json:"datastore,omitempty"`
}

func (x *LedgerEntry) Reset() {
	*x = LedgerEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerEntry) ProtoMessage() {}

func (x *LedgerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerEntry.ProtoReflect.Descriptor instead.
func (*LedgerEntry) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{22}
}

func (x *LedgerEntry) GetBalance() *NativeAmount {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *LedgerEntry) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

func (x *LedgerEntry) GetDatastore() []*BytesMapFieldEntry {
	if x != nil {
		return x.Datastore
	}
	return nil
}

// Represents an update to one or more fields of a `LedgerEntry`
type LedgerEntryUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Change the balance
	Balance *SetOrKeepBalance `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// Change the executable bytecode
	Bytecode *SetOrKeepBytes `protobuf:"bytes,2,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
	// Change datastore entries
	Datastore []*SetOrDeleteDatastoreEntry `protobuf:"bytes,3,rep,name=datastore,proto3" json:"datastore,omitempty"`
}

func (x *LedgerEntryUpdate) Reset() {
	*x = LedgerEntryUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerEntryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerEntryUpdate) ProtoMessage() {}

func (x *LedgerEntryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerEntryUpdate.ProtoReflect.Descriptor instead.
func (*LedgerEntryUpdate) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{23}
}

func (x *LedgerEntryUpdate) GetBalance() *SetOrKeepBalance {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *LedgerEntryUpdate) GetBytecode() *SetOrKeepBytes {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

func (x *LedgerEntryUpdate) GetDatastore() []*SetOrDeleteDatastoreEntry {
	if x != nil {
		return x.Datastore
	}
	return nil
}

// Set or Keep Balance
type SetOrKeepBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrKeepBalance_Set
	//	*SetOrKeepBalance_Keep
	Change isSetOrKeepBalance_Change `protobuf_oneof:"change"`
}

func (x *SetOrKeepBalance) Reset() {
	*x = SetOrKeepBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrKeepBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrKeepBalance) ProtoMessage() {}

func (x *SetOrKeepBalance) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrKeepBalance.ProtoReflect.Descriptor instead.
func (*SetOrKeepBalance) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{24}
}

func (m *SetOrKeepBalance) GetChange() isSetOrKeepBalance_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrKeepBalance) GetSet() *NativeAmount {
	if x, ok := x.GetChange().(*SetOrKeepBalance_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrKeepBalance) GetKeep() *Empty {
	if x, ok := x.GetChange().(*SetOrKeepBalance_Keep); ok {
		return x.Keep
	}
	return nil
}

type isSetOrKeepBalance_Change interface {
	isSetOrKeepBalance_Change()
}

type SetOrKeepBalance_Set struct {
	// The value of that entry (Optional)
	Set *NativeAmount `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrKeepBalance_Keep struct {
	// Keep the existing value
	Keep *Empty `protobuf:"bytes,2,opt,name=keep,proto3,oneof"`
}

func (*SetOrKeepBalance_Set) isSetOrKeepBalance_Change() {}

func (*SetOrKeepBalance_Keep) isSetOrKeepBalance_Change() {}

// Set or Delete DatastoreEntry
type SetOrDeleteDatastoreEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The type of the change
	//
	// Types that are assignable to Change:
	//
	//	*SetOrDeleteDatastoreEntry_Set
	//	*SetOrDeleteDatastoreEntry_Delete
	Change isSetOrDeleteDatastoreEntry_Change `protobuf_oneof:"change"`
}

func (x *SetOrDeleteDatastoreEntry) Reset() {
	*x = SetOrDeleteDatastoreEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOrDeleteDatastoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOrDeleteDatastoreEntry) ProtoMessage() {}

func (x *SetOrDeleteDatastoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOrDeleteDatastoreEntry.ProtoReflect.Descriptor instead.
func (*SetOrDeleteDatastoreEntry) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{25}
}

func (m *SetOrDeleteDatastoreEntry) GetChange() isSetOrDeleteDatastoreEntry_Change {
	if m != nil {
		return m.Change
	}
	return nil
}

func (x *SetOrDeleteDatastoreEntry) GetSet() *BytesMapFieldEntry {
	if x, ok := x.GetChange().(*SetOrDeleteDatastoreEntry_Set); ok {
		return x.Set
	}
	return nil
}

func (x *SetOrDeleteDatastoreEntry) GetDelete() *Empty {
	if x, ok := x.GetChange().(*SetOrDeleteDatastoreEntry_Delete); ok {
		return x.Delete
	}
	return nil
}

type isSetOrDeleteDatastoreEntry_Change interface {
	isSetOrDeleteDatastoreEntry_Change()
}

type SetOrDeleteDatastoreEntry_Set struct {
	// Executable bytecode (Optional)
	Set *BytesMapFieldEntry `protobuf:"bytes,1,opt,name=set,proto3,oneof"`
}

type SetOrDeleteDatastoreEntry_Delete struct {
	// Delete the existing bytecode
	Delete *Empty `protobuf:"bytes,2,opt,name=delete,proto3,oneof"`
}

func (*SetOrDeleteDatastoreEntry_Set) isSetOrDeleteDatastoreEntry_Change() {}

func (*SetOrDeleteDatastoreEntry_Delete) isSetOrDeleteDatastoreEntry_Change() {}

// Read-only execution call
type ReadOnlyExecutionCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Maximum gas to spend in the execution.
	MaxGas uint64 `protobuf:"varint,1,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
	// Call stack to simulate, older caller first
	CallStack []*ExecutionStackElement `protobuf:"bytes,2,rep,name=call_stack,json=callStack,proto3" json:"call_stack,omitempty"`
	// Target of the call
	//
	// Types that are assignable to Target:
	//
	//	*ReadOnlyExecutionCall_BytecodeCall
	//	*ReadOnlyExecutionCall_FunctionCall
	Target isReadOnlyExecutionCall_Target `protobuf_oneof:"target"`
	// Caller's address, (Optional) if not set, an auto-generated address will be used
	CallerAddress *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=caller_address,json=callerAddress,proto3" json:"caller_address,omitempty"`
	// fee paid by the caller when the call is processed (optional)
	Fee *NativeAmount `protobuf:"bytes,7,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *ReadOnlyExecutionCall) Reset() {
	*x = ReadOnlyExecutionCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOnlyExecutionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOnlyExecutionCall) ProtoMessage() {}

func (x *ReadOnlyExecutionCall) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOnlyExecutionCall.ProtoReflect.Descriptor instead.
func (*ReadOnlyExecutionCall) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{26}
}

func (x *ReadOnlyExecutionCall) GetMaxGas() uint64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

func (x *ReadOnlyExecutionCall) GetCallStack() []*ExecutionStackElement {
	if x != nil {
		return x.CallStack
	}
	return nil
}

func (m *ReadOnlyExecutionCall) GetTarget() isReadOnlyExecutionCall_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *ReadOnlyExecutionCall) GetBytecodeCall() *BytecodeExecution {
	if x, ok := x.GetTarget().(*ReadOnlyExecutionCall_BytecodeCall); ok {
		return x.BytecodeCall
	}
	return nil
}

func (x *ReadOnlyExecutionCall) GetFunctionCall() *FunctionCall {
	if x, ok := x.GetTarget().(*ReadOnlyExecutionCall_FunctionCall); ok {
		return x.FunctionCall
	}
	return nil
}

func (x *ReadOnlyExecutionCall) GetCallerAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.CallerAddress
	}
	return nil
}

func (x *ReadOnlyExecutionCall) GetFee() *NativeAmount {
	if x != nil {
		return x.Fee
	}
	return nil
}

type isReadOnlyExecutionCall_Target interface {
	isReadOnlyExecutionCall_Target()
}

type ReadOnlyExecutionCall_BytecodeCall struct {
	// Byte code
	BytecodeCall *BytecodeExecution `protobuf:"bytes,3,opt,name=bytecode_call,json=bytecodeCall,proto3,oneof"`
}

type ReadOnlyExecutionCall_FunctionCall struct {
	// Function call
	FunctionCall *FunctionCall `protobuf:"bytes,4,opt,name=function_call,json=functionCall,proto3,oneof"`
}

func (*ReadOnlyExecutionCall_BytecodeCall) isReadOnlyExecutionCall_Target() {}

func (*ReadOnlyExecutionCall_FunctionCall) isReadOnlyExecutionCall_Target() {}

// / Execute a bytecode
type BytecodeExecution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Byte code
	Bytecode []byte `protobuf:"bytes,1,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
	// Serialized datastore (key value store)  for `ExecuteSC` Operation (Optional)
	OperationDatastore []byte `protobuf:"bytes,2,opt,name=operation_datastore,json=operationDatastore,proto3" json:"operation_datastore,omitempty"`
}

func (x *BytecodeExecution) Reset() {
	*x = BytecodeExecution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytecodeExecution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytecodeExecution) ProtoMessage() {}

func (x *BytecodeExecution) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytecodeExecution.ProtoReflect.Descriptor instead.
func (*BytecodeExecution) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{27}
}

func (x *BytecodeExecution) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

func (x *BytecodeExecution) GetOperationDatastore() []byte {
	if x != nil {
		return x.OperationDatastore
	}
	return nil
}

// Execute a function call
type FunctionCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Target address
	TargetAddress string `protobuf:"bytes,1,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	// Target function
	TargetFunction string `protobuf:"bytes,2,opt,name=target_function,json=targetFunction,proto3" json:"target_function,omitempty"`
	// Parameter to pass to the target function
	Parameter []byte `protobuf:"bytes,3,opt,name=parameter,proto3" json:"parameter,omitempty"`
	// Coins transferred to the target address during the call
	Coins *NativeAmount `protobuf:"bytes,4,opt,name=coins,proto3" json:"coins,omitempty"`
}

func (x *FunctionCall) Reset() {
	*x = FunctionCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionCall) ProtoMessage() {}

func (x *FunctionCall) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionCall.ProtoReflect.Descriptor instead.
func (*FunctionCall) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{28}
}

func (x *FunctionCall) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *FunctionCall) GetTargetFunction() string {
	if x != nil {
		return x.TargetFunction
	}
	return ""
}

func (x *FunctionCall) GetParameter() []byte {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *FunctionCall) GetCoins() *NativeAmount {
	if x != nil {
		return x.Coins
	}
	return nil
}

// Structure describing the output of a read only execution
type ReadOnlyExecutionOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Output of a single execution
	Out *ExecutionOutput `protobuf:"bytes,1,opt,name=out,proto3" json:"out,omitempty"`
	// Gas cost for this execution
	UsedGas uint64 `protobuf:"varint,2,opt,name=used_gas,json=usedGas,proto3" json:"used_gas,omitempty"`
	// Returned value from the module call
	CallResult []byte `protobuf:"bytes,3,opt,name=call_result,json=callResult,proto3" json:"call_result,omitempty"`
}

func (x *ReadOnlyExecutionOutput) Reset() {
	*x = ReadOnlyExecutionOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadOnlyExecutionOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOnlyExecutionOutput) ProtoMessage() {}

func (x *ReadOnlyExecutionOutput) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOnlyExecutionOutput.ProtoReflect.Descriptor instead.
func (*ReadOnlyExecutionOutput) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{29}
}

func (x *ReadOnlyExecutionOutput) GetOut() *ExecutionOutput {
	if x != nil {
		return x.Out
	}
	return nil
}

func (x *ReadOnlyExecutionOutput) GetUsedGas() uint64 {
	if x != nil {
		return x.UsedGas
	}
	return 0
}

func (x *ReadOnlyExecutionOutput) GetCallResult() []byte {
	if x != nil {
		return x.CallResult
	}
	return nil
}

// Structure describing an element of the execution stack.
// Every time a function is called from bytecode,
// a new `ExecutionStackElement` is pushed at the top of the execution stack
// to represent the local execution context of the called function,
// instead of the caller's which should lie just below in the stack.
type ExecutionStackElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Called address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Coins transferred to the target address during the call
	Coins *NativeAmount `protobuf:"bytes,2,opt,name=coins,proto3" json:"coins,omitempty"`
	// List of addresses owned by the current call, and on which the current call has write access.
	// This list should contain `ExecutionStackElement::address` in the sense that an address should have write access to itself.
	// This list should also contain all addresses created previously during the call
	// to allow write access on newly created addresses in order to set them up,
	// but only within the scope of the current stack element.
	// That way, only the current scope and neither its caller not the functions it calls gain this write access,
	// which is important for security.
	// Note that we use a vector instead of a pre-hashed set to ensure order determinism,
	// the performance hit of linear search remains minimal because `owned_addresses` will always contain very few elements.
	OwnedAddresses []string `protobuf:"bytes,3,rep,name=owned_addresses,json=ownedAddresses,proto3" json:"owned_addresses,omitempty"`
	// Datastore (key value store) for `ExecuteSC` Operation (Optional)
	OperationDatastore []*BytesMapFieldEntry `protobuf:"bytes,4,rep,name=operation_datastore,json=operationDatastore,proto3" json:"operation_datastore,omitempty"`
}

func (x *ExecutionStackElement) Reset() {
	*x = ExecutionStackElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_model_v1_execution_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionStackElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionStackElement) ProtoMessage() {}

func (x *ExecutionStackElement) ProtoReflect() protoreflect.Message {
	mi := &file_massa_model_v1_execution_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionStackElement.ProtoReflect.Descriptor instead.
func (*ExecutionStackElement) Descriptor() ([]byte, []int) {
	return file_massa_model_v1_execution_proto_rawDescGZIP(), []int{30}
}

func (x *ExecutionStackElement) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ExecutionStackElement) GetCoins() *NativeAmount {
	if x != nil {
		return x.Coins
	}
	return nil
}

func (x *ExecutionStackElement) GetOwnedAddresses() []string {
	if x != nil {
		return x.OwnedAddresses
	}
	return nil
}

func (x *ExecutionStackElement) GetOperationDatastore() []*BytesMapFieldEntry {
	if x != nil {
		return x.OperationDatastore
	}
	return nil
}

var File_massa_model_v1_execution_proto protoreflect.FileDescriptor

var file_massa_model_v1_execution_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6e, 0x75,
	0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x53, 0x6c,
	0x6f, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x4a, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x44, 0x0a, 0x18,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x10, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xf9, 0x02, 0x0a, 0x17, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x35, 0x0a,
	0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x53, 0x6c, 0x6f, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x53, 0x6c, 0x6f,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x12, 0x4c, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x3e, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x59, 0x0a,
	0x17, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcf, 0x03, 0x0a, 0x0c, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0e, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x12, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x6f, 0x6f,
	0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4f,
	0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x67, 0x0a, 0x1e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65,
	0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e, 0x75, 0x6e,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x1c, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x1b, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x18, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x69, 0x6c,
	0x48, 0x61, 0x73, 0x68, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x16, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64,
	0x4f, 0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x4f, 0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x40, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x7c, 0x0a, 0x14,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf2, 0x01, 0x0a, 0x14, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xb2, 0x04, 0x0a, 0x0c, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x0d, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0c, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x12,
	0x2e, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12,
	0x32, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f,
	0x69, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x37, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0b, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a,
	0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x61, 0x6e, 0x5f, 0x62, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x22, 0xc6, 0x06, 0x0a, 0x12, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x65,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x0c, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x12,
	0x46, 0x0a, 0x0e, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65,
	0x65, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0d, 0x65, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65,
	0x65, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x41, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x38,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x52, 0x06, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x12, 0x31, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70,
	0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f,
	0x72, 0x4b, 0x65, 0x65, 0x70, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x05, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x12, 0x44, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f,
	0x72, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0b, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b,
	0x65, 0x65, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x46,
	0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x07, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x62, 0x65,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0d,
	0x63, 0x61, 0x6e, 0x42, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x22, 0x70, 0x0a,
	0x0d, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x28,
	0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x65, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52,
	0x04, 0x6b, 0x65, 0x65, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0x7a, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x55, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x30, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x65, 0x65,
	0x70, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x30,
	0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74,
	0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x42, 0x08, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4f, 0x72,
	0x4b, 0x65, 0x65, 0x70, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x03, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65,
	0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0x76, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x42, 0x6f,
	0x6f, 0x6c, 0x12, 0x2e, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x73,
	0x65, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x42,
	0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x1c, 0x53, 0x65,
	0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x03, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x03,
	0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6b, 0x65, 0x65, 0x70,
	0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x71, 0x0a, 0x13, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x66, 0x0a,
	0x11, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x4c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xd4,
	0x01, 0x0a, 0x11, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65, 0x65, 0x70, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x47, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x7b, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x4b, 0x65,
	0x65, 0x70, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6b,
	0x65, 0x65, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x04, 0x6b, 0x65, 0x65, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x36, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0x84, 0x03, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x61, 0x78, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x48, 0x0a, 0x0d,
	0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x43, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x43, 0x0a, 0x0e, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2e, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x03, 0x66, 0x65, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x60, 0x0a, 0x11, 0x42, 0x79,
	0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xb0, 0x01, 0x0a,
	0x0c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22,
	0x88, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x6f,
	0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x64, 0x47, 0x61, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x15, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x77, 0x6e,
	0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x13, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4d,
	0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2a, 0xba, 0x01, 0x0a, 0x16, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x25, 0x53,
	0x43, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x43, 0x5f, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x53,
	0x43, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4f, 0x4e,
	0x4c, 0x59, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x43, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x41, 0x4e, 0x44, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x2a, 0xaf, 0x01,
	0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x23, 0x45, 0x58, 0x45, 0x43, 0x55,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x25, 0x0a, 0x21, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55,
	0x54, 0x50, 0x55, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x44,
	0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x58, 0x45, 0x43, 0x55,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x58,
	0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x03, 0x2a,
	0x95, 0x01, 0x0a, 0x18, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x26,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x25, 0x0a, 0x21, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58,
	0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xa3, 0x01, 0x0a, 0x13, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x26, 0x0a, 0x22, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x53, 0x59, 0x4e, 0x43,
	0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x53, 0x59, 0x4e, 0x43,
	0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x53,
	0x59, 0x4e, 0x43, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x90, 0x01,
	0x0a, 0x10, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x1e, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x52,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x54,
	0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03,
	0x42, 0x9f, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x61, 0x74, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2d,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xa2, 0x02,
	0x06, 0x4d, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0xaa, 0x02, 0x12, 0x43, 0x6f, 0x6d, 0x2e, 0x4d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0xba, 0x02, 0x06, 0x4d,
	0x4d, 0x4f, 0x44, 0x45, 0x4c, 0xca, 0x02, 0x12, 0x43, 0x6f, 0x6d, 0x5c, 0x4d, 0x61, 0x73, 0x73,
	0x61, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x15, 0x43, 0x6f, 0x6d,
	0x3a, 0x3a, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x3a, 0x3a, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_massa_model_v1_execution_proto_rawDescOnce sync.Once
	file_massa_model_v1_execution_proto_rawDescData = file_massa_model_v1_execution_proto_rawDesc
)

func file_massa_model_v1_execution_proto_rawDescGZIP() []byte {
	file_massa_model_v1_execution_proto_rawDescOnce.Do(func() {
		file_massa_model_v1_execution_proto_rawDescData = protoimpl.X.CompressGZIP(file_massa_model_v1_execution_proto_rawDescData)
	})
	return file_massa_model_v1_execution_proto_rawDescData
}

var file_massa_model_v1_execution_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_massa_model_v1_execution_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_massa_model_v1_execution_proto_goTypes = []interface{}{
	(ScExecutionEventStatus)(0),          // 0: massa.model.v1.ScExecutionEventStatus
	(ExecutionOutputStatus)(0),           // 1: massa.model.v1.ExecutionOutputStatus
	(OperationExecutionStatus)(0),        // 2: massa.model.v1.OperationExecutionStatus
	(AsyncPoolChangeType)(0),             // 3: massa.model.v1.AsyncPoolChangeType
	(LedgerChangeType)(0),                // 4: massa.model.v1.LedgerChangeType
	(*SlotExecutionOutput)(nil),          // 5: massa.model.v1.SlotExecutionOutput
	(*FinalizedExecutionOutput)(nil),     // 6: massa.model.v1.FinalizedExecutionOutput
	(*ExecutionOutput)(nil),              // 7: massa.model.v1.ExecutionOutput
	(*ScExecutionEvent)(nil),             // 8: massa.model.v1.ScExecutionEvent
	(*ScExecutionEventContext)(nil),      // 9: massa.model.v1.ScExecutionEventContext
	(*ScExecutionEventsStatus)(nil),      // 10: massa.model.v1.ScExecutionEventsStatus
	(*StateChanges)(nil),                 // 11: massa.model.v1.StateChanges
	(*ExecutedOpsChangeEntry)(nil),       // 12: massa.model.v1.ExecutedOpsChangeEntry
	(*ExecutedOpsChangeValue)(nil),       // 13: massa.model.v1.ExecutedOpsChangeValue
	(*AsyncPoolChangeEntry)(nil),         // 14: massa.model.v1.AsyncPoolChangeEntry
	(*AsyncPoolChangeValue)(nil),         // 15: massa.model.v1.AsyncPoolChangeValue
	(*AsyncMessage)(nil),                 // 16: massa.model.v1.AsyncMessage
	(*AsyncMessageUpdate)(nil),           // 17: massa.model.v1.AsyncMessageUpdate
	(*SetOrKeepSlot)(nil),                // 18: massa.model.v1.SetOrKeepSlot
	(*SetOrKeepUint64)(nil),              // 19: massa.model.v1.SetOrKeepUint64
	(*SetOrKeepString)(nil),              // 20: massa.model.v1.SetOrKeepString
	(*SetOrKeepBytes)(nil),               // 21: massa.model.v1.SetOrKeepBytes
	(*SetOrKeepBool)(nil),                // 22: massa.model.v1.SetOrKeepBool
	(*SetOrKeepAsyncMessageTrigger)(nil), // 23: massa.model.v1.SetOrKeepAsyncMessageTrigger
	(*AsyncMessageTrigger)(nil),          // 24: massa.model.v1.AsyncMessageTrigger
	(*LedgerChangeEntry)(nil),            // 25: massa.model.v1.LedgerChangeEntry
	(*LedgerChangeValue)(nil),            // 26: massa.model.v1.LedgerChangeValue
	(*LedgerEntry)(nil),                  // 27: massa.model.v1.LedgerEntry
	(*LedgerEntryUpdate)(nil),            // 28: massa.model.v1.LedgerEntryUpdate
	(*SetOrKeepBalance)(nil),             // 29: massa.model.v1.SetOrKeepBalance
	(*SetOrDeleteDatastoreEntry)(nil),    // 30: massa.model.v1.SetOrDeleteDatastoreEntry
	(*ReadOnlyExecutionCall)(nil),        // 31: massa.model.v1.ReadOnlyExecutionCall
	(*BytecodeExecution)(nil),            // 32: massa.model.v1.BytecodeExecution
	(*FunctionCall)(nil),                 // 33: massa.model.v1.FunctionCall
	(*ReadOnlyExecutionOutput)(nil),      // 34: massa.model.v1.ReadOnlyExecutionOutput
	(*ExecutionStackElement)(nil),        // 35: massa.model.v1.ExecutionStackElement
	(*Slot)(nil),                         // 36: massa.model.v1.Slot
	(*wrapperspb.StringValue)(nil),       // 37: google.protobuf.StringValue
	(*DenunciationIndex)(nil),            // 38: massa.model.v1.DenunciationIndex
	(*NativeAmount)(nil),                 // 39: massa.model.v1.NativeAmount
	(*Empty)(nil),                        // 40: massa.model.v1.Empty
	(*wrapperspb.UInt64Value)(nil),       // 41: google.protobuf.UInt64Value
	(*wrapperspb.BytesValue)(nil),        // 42: google.protobuf.BytesValue
	(*wrapperspb.BoolValue)(nil),         // 43: google.protobuf.BoolValue
	(*BytesMapFieldEntry)(nil),           // 44: massa.model.v1.BytesMapFieldEntry
}
var file_massa_model_v1_execution_proto_depIdxs = []int32{
	1,  // 0: massa.model.v1.SlotExecutionOutput.status:type_name -> massa.model.v1.ExecutionOutputStatus
	7,  // 1: massa.model.v1.SlotExecutionOutput.execution_output:type_name -> massa.model.v1.ExecutionOutput
	36, // 2: massa.model.v1.FinalizedExecutionOutput.slot:type_name -> massa.model.v1.Slot
	36, // 3: massa.model.v1.ExecutionOutput.slot:type_name -> massa.model.v1.Slot
	37, // 4: massa.model.v1.ExecutionOutput.block_id:type_name -> google.protobuf.StringValue
	8,  // 5: massa.model.v1.ExecutionOutput.events:type_name -> massa.model.v1.ScExecutionEvent
	11, // 6: massa.model.v1.ExecutionOutput.state_changes:type_name -> massa.model.v1.StateChanges
	9,  // 7: massa.model.v1.ScExecutionEvent.context:type_name -> massa.model.v1.ScExecutionEventContext
	36, // 8: massa.model.v1.ScExecutionEventContext.origin_slot:type_name -> massa.model.v1.Slot
	37, // 9: massa.model.v1.ScExecutionEventContext.block_id:type_name -> google.protobuf.StringValue
	37, // 10: massa.model.v1.ScExecutionEventContext.origin_operation_id:type_name -> google.protobuf.StringValue
	0,  // 11: massa.model.v1.ScExecutionEventContext.status:type_name -> massa.model.v1.ScExecutionEventStatus
	0,  // 12: massa.model.v1.ScExecutionEventsStatus.status:type_name -> massa.model.v1.ScExecutionEventStatus
	25, // 13: massa.model.v1.StateChanges.ledger_changes:type_name -> massa.model.v1.LedgerChangeEntry
	14, // 14: massa.model.v1.StateChanges.async_pool_changes:type_name -> massa.model.v1.AsyncPoolChangeEntry
	12, // 15: massa.model.v1.StateChanges.executed_ops_changes:type_name -> massa.model.v1.ExecutedOpsChangeEntry
	38, // 16: massa.model.v1.StateChanges.executed_denunciations_changes:type_name -> massa.model.v1.DenunciationIndex
	20, // 17: massa.model.v1.StateChanges.execution_trail_hash_change:type_name -> massa.model.v1.SetOrKeepString
	13, // 18: massa.model.v1.ExecutedOpsChangeEntry.value:type_name -> massa.model.v1.ExecutedOpsChangeValue
	2,  // 19: massa.model.v1.ExecutedOpsChangeValue.status:type_name -> massa.model.v1.OperationExecutionStatus
	36, // 20: massa.model.v1.ExecutedOpsChangeValue.slot:type_name -> massa.model.v1.Slot
	15, // 21: massa.model.v1.AsyncPoolChangeEntry.value:type_name -> massa.model.v1.AsyncPoolChangeValue
	3,  // 22: massa.model.v1.AsyncPoolChangeValue.type:type_name -> massa.model.v1.AsyncPoolChangeType
	16, // 23: massa.model.v1.AsyncPoolChangeValue.created_message:type_name -> massa.model.v1.AsyncMessage
	17, // 24: massa.model.v1.AsyncPoolChangeValue.updated_message:type_name -> massa.model.v1.AsyncMessageUpdate
	36, // 25: massa.model.v1.AsyncMessage.emission_slot:type_name -> massa.model.v1.Slot
	39, // 26: massa.model.v1.AsyncMessage.fee:type_name -> massa.model.v1.NativeAmount
	39, // 27: massa.model.v1.AsyncMessage.coins:type_name -> massa.model.v1.NativeAmount
	36, // 28: massa.model.v1.AsyncMessage.validity_start:type_name -> massa.model.v1.Slot
	36, // 29: massa.model.v1.AsyncMessage.validity_end:type_name -> massa.model.v1.Slot
	24, // 30: massa.model.v1.AsyncMessage.trigger:type_name -> massa.model.v1.AsyncMessageTrigger
	18, // 31: massa.model.v1.AsyncMessageUpdate.emission_slot:type_name -> massa.model.v1.SetOrKeepSlot
	19, // 32: massa.model.v1.AsyncMessageUpdate.emission_index:type_name -> massa.model.v1.SetOrKeepUint64
	20, // 33: massa.model.v1.AsyncMessageUpdate.sender:type_name -> massa.model.v1.SetOrKeepString
	20, // 34: massa.model.v1.AsyncMessageUpdate.destination:type_name -> massa.model.v1.SetOrKeepString
	20, // 35: massa.model.v1.AsyncMessageUpdate.handler:type_name -> massa.model.v1.SetOrKeepString
	19, // 36: massa.model.v1.AsyncMessageUpdate.max_gas:type_name -> massa.model.v1.SetOrKeepUint64
	19, // 37: massa.model.v1.AsyncMessageUpdate.fee:type_name -> massa.model.v1.SetOrKeepUint64
	19, // 38: massa.model.v1.AsyncMessageUpdate.coins:type_name -> massa.model.v1.SetOrKeepUint64
	18, // 39: massa.model.v1.AsyncMessageUpdate.validity_start:type_name -> massa.model.v1.SetOrKeepSlot
	18, // 40: massa.model.v1.AsyncMessageUpdate.validity_end:type_name -> massa.model.v1.SetOrKeepSlot
	21, // 41: massa.model.v1.AsyncMessageUpdate.data:type_name -> massa.model.v1.SetOrKeepBytes
	23, // 42: massa.model.v1.AsyncMessageUpdate.trigger:type_name -> massa.model.v1.SetOrKeepAsyncMessageTrigger
	22, // 43: massa.model.v1.AsyncMessageUpdate.can_be_executed:type_name -> massa.model.v1.SetOrKeepBool
	36, // 44: massa.model.v1.SetOrKeepSlot.set:type_name -> massa.model.v1.Slot
	40, // 45: massa.model.v1.SetOrKeepSlot.keep:type_name -> massa.model.v1.Empty
	41, // 46: massa.model.v1.SetOrKeepUint64.set:type_name -> google.protobuf.UInt64Value
	40, // 47: massa.model.v1.SetOrKeepUint64.keep:type_name -> massa.model.v1.Empty
	37, // 48: massa.model.v1.SetOrKeepString.set:type_name -> google.protobuf.StringValue
	40, // 49: massa.model.v1.SetOrKeepString.keep:type_name -> massa.model.v1.Empty
	42, // 50: massa.model.v1.SetOrKeepBytes.set:type_name -> google.protobuf.BytesValue
	40, // 51: massa.model.v1.SetOrKeepBytes.keep:type_name -> massa.model.v1.Empty
	43, // 52: massa.model.v1.SetOrKeepBool.set:type_name -> google.protobuf.BoolValue
	40, // 53: massa.model.v1.SetOrKeepBool.keep:type_name -> massa.model.v1.Empty
	24, // 54: massa.model.v1.SetOrKeepAsyncMessageTrigger.set:type_name -> massa.model.v1.AsyncMessageTrigger
	40, // 55: massa.model.v1.SetOrKeepAsyncMessageTrigger.keep:type_name -> massa.model.v1.Empty
	42, // 56: massa.model.v1.AsyncMessageTrigger.datastore_key:type_name -> google.protobuf.BytesValue
	26, // 57: massa.model.v1.LedgerChangeEntry.value:type_name -> massa.model.v1.LedgerChangeValue
	4,  // 58: massa.model.v1.LedgerChangeValue.type:type_name -> massa.model.v1.LedgerChangeType
	27, // 59: massa.model.v1.LedgerChangeValue.created_entry:type_name -> massa.model.v1.LedgerEntry
	28, // 60: massa.model.v1.LedgerChangeValue.updated_entry:type_name -> massa.model.v1.LedgerEntryUpdate
	39, // 61: massa.model.v1.LedgerEntry.balance:type_name -> massa.model.v1.NativeAmount
	44, // 62: massa.model.v1.LedgerEntry.datastore:type_name -> massa.model.v1.BytesMapFieldEntry
	29, // 63: massa.model.v1.LedgerEntryUpdate.balance:type_name -> massa.model.v1.SetOrKeepBalance
	21, // 64: massa.model.v1.LedgerEntryUpdate.bytecode:type_name -> massa.model.v1.SetOrKeepBytes
	30, // 65: massa.model.v1.LedgerEntryUpdate.datastore:type_name -> massa.model.v1.SetOrDeleteDatastoreEntry
	39, // 66: massa.model.v1.SetOrKeepBalance.set:type_name -> massa.model.v1.NativeAmount
	40, // 67: massa.model.v1.SetOrKeepBalance.keep:type_name -> massa.model.v1.Empty
	44, // 68: massa.model.v1.SetOrDeleteDatastoreEntry.set:type_name -> massa.model.v1.BytesMapFieldEntry
	40, // 69: massa.model.v1.SetOrDeleteDatastoreEntry.delete:type_name -> massa.model.v1.Empty
	35, // 70: massa.model.v1.ReadOnlyExecutionCall.call_stack:type_name -> massa.model.v1.ExecutionStackElement
	32, // 71: massa.model.v1.ReadOnlyExecutionCall.bytecode_call:type_name -> massa.model.v1.BytecodeExecution
	33, // 72: massa.model.v1.ReadOnlyExecutionCall.function_call:type_name -> massa.model.v1.FunctionCall
	37, // 73: massa.model.v1.ReadOnlyExecutionCall.caller_address:type_name -> google.protobuf.StringValue
	39, // 74: massa.model.v1.ReadOnlyExecutionCall.fee:type_name -> massa.model.v1.NativeAmount
	39, // 75: massa.model.v1.FunctionCall.coins:type_name -> massa.model.v1.NativeAmount
	7,  // 76: massa.model.v1.ReadOnlyExecutionOutput.out:type_name -> massa.model.v1.ExecutionOutput
	39, // 77: massa.model.v1.ExecutionStackElement.coins:type_name -> massa.model.v1.NativeAmount
	44, // 78: massa.model.v1.ExecutionStackElement.operation_datastore:type_name -> massa.model.v1.BytesMapFieldEntry
	79, // [79:79] is the sub-list for method output_type
	79, // [79:79] is the sub-list for method input_type
	79, // [79:79] is the sub-list for extension type_name
	79, // [79:79] is the sub-list for extension extendee
	0,  // [0:79] is the sub-list for field type_name
}

func init() { file_massa_model_v1_execution_proto_init() }
func file_massa_model_v1_execution_proto_init() {
	if File_massa_model_v1_execution_proto != nil {
		return
	}
	file_massa_model_v1_amount_proto_init()
	file_massa_model_v1_commons_proto_init()
	file_massa_model_v1_denunciation_proto_init()
	file_massa_model_v1_slot_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_massa_model_v1_execution_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotExecutionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizedExecutionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScExecutionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScExecutionEventContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScExecutionEventsStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutedOpsChangeEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutedOpsChangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncPoolChangeEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncPoolChangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncMessageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrKeepSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrKeepUint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrKeepString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrKeepBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrKeepBool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrKeepAsyncMessageTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncMessageTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerChangeEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerChangeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerEntryUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrKeepBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOrDeleteDatastoreEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOnlyExecutionCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytecodeExecution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadOnlyExecutionOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_model_v1_execution_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionStackElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_massa_model_v1_execution_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*AsyncPoolChangeValue_CreatedMessage)(nil),
		(*AsyncPoolChangeValue_UpdatedMessage)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SetOrKeepSlot_Set)(nil),
		(*SetOrKeepSlot_Keep)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*SetOrKeepUint64_Set)(nil),
		(*SetOrKeepUint64_Keep)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*SetOrKeepString_Set)(nil),
		(*SetOrKeepString_Keep)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*SetOrKeepBytes_Set)(nil),
		(*SetOrKeepBytes_Keep)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*SetOrKeepBool_Set)(nil),
		(*SetOrKeepBool_Keep)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*SetOrKeepAsyncMessageTrigger_Set)(nil),
		(*SetOrKeepAsyncMessageTrigger_Keep)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*LedgerChangeValue_CreatedEntry)(nil),
		(*LedgerChangeValue_UpdatedEntry)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*SetOrKeepBalance_Set)(nil),
		(*SetOrKeepBalance_Keep)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*SetOrDeleteDatastoreEntry_Set)(nil),
		(*SetOrDeleteDatastoreEntry_Delete)(nil),
	}
	file_massa_model_v1_execution_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*ReadOnlyExecutionCall_BytecodeCall)(nil),
		(*ReadOnlyExecutionCall_FunctionCall)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_massa_model_v1_execution_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_massa_model_v1_execution_proto_goTypes,
		DependencyIndexes: file_massa_model_v1_execution_proto_depIdxs,
		EnumInfos:         file_massa_model_v1_execution_proto_enumTypes,
		MessageInfos:      file_massa_model_v1_execution_proto_msgTypes,
	}.Build()
	File_massa_model_v1_execution_proto = out.File
	file_massa_model_v1_execution_proto_rawDesc = nil
	file_massa_model_v1_execution_proto_goTypes = nil
	file_massa_model_v1_execution_proto_depIdxs = nil
}
