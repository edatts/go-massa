// Copyright (c) 2023 MASSA LABS <info@massa.net>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: massa/abi/v1/abi.proto

package v1

import (
	v1 "github.com/edatts/go-massa/protos/massa/model/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Error message used in abi Response
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a string representing the error
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Create SC request
type CreateScRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bytecode is the compiled code of the smart contract
	Bytecode []byte `protobuf:"bytes,1,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
}

func (x *CreateScRequest) Reset() {
	*x = CreateScRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScRequest) ProtoMessage() {}

func (x *CreateScRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScRequest.ProtoReflect.Descriptor instead.
func (*CreateScRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{1}
}

func (x *CreateScRequest) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

// Create SC result
type CreateScResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the just created smart contract
	ScAddress string `protobuf:"bytes,1,opt,name=sc_address,json=scAddress,proto3" json:"sc_address,omitempty"`
}

func (x *CreateScResult) Reset() {
	*x = CreateScResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateScResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScResult) ProtoMessage() {}

func (x *CreateScResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScResult.ProtoReflect.Descriptor instead.
func (*CreateScResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{2}
}

func (x *CreateScResult) GetScAddress() string {
	if x != nil {
		return x.ScAddress
	}
	return ""
}

// Call SC request
type CallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the smart contract to call
	TargetScAddress string `protobuf:"bytes,1,opt,name=target_sc_address,json=targetScAddress,proto3" json:"target_sc_address,omitempty"`
	// Function to call in the targeted smart contract
	TargetFunctionName string `protobuf:"bytes,2,opt,name=target_function_name,json=targetFunctionName,proto3" json:"target_function_name,omitempty"`
	// Argument to the function serialized in a byte array.
	FunctionArg []byte `protobuf:"bytes,3,opt,name=function_arg,json=functionArg,proto3" json:"function_arg,omitempty"`
	// call_coins is the amount of coins to pay for the call
	CallCoins *v1.NativeAmount `protobuf:"bytes,4,opt,name=call_coins,json=callCoins,proto3" json:"call_coins,omitempty"`
}

func (x *CallRequest) Reset() {
	*x = CallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRequest) ProtoMessage() {}

func (x *CallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRequest.ProtoReflect.Descriptor instead.
func (*CallRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{3}
}

func (x *CallRequest) GetTargetScAddress() string {
	if x != nil {
		return x.TargetScAddress
	}
	return ""
}

func (x *CallRequest) GetTargetFunctionName() string {
	if x != nil {
		return x.TargetFunctionName
	}
	return ""
}

func (x *CallRequest) GetFunctionArg() []byte {
	if x != nil {
		return x.FunctionArg
	}
	return nil
}

func (x *CallRequest) GetCallCoins() *v1.NativeAmount {
	if x != nil {
		return x.CallCoins
	}
	return nil
}

// Call SC response
type CallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return_data is the return value of the function
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CallResponse) Reset() {
	*x = CallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallResponse) ProtoMessage() {}

func (x *CallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallResponse.ProtoReflect.Descriptor instead.
func (*CallResponse) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{4}
}

func (x *CallResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Local execution request
type LocalExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bytecode is the compiled code of the smart contract
	Bytecode []byte `protobuf:"bytes,1,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
	// Function to call in the targeted smart contract
	TargetFunctionName string `protobuf:"bytes,2,opt,name=target_function_name,json=targetFunctionName,proto3" json:"target_function_name,omitempty"`
	// Argument to the function serialized in a byte array.
	FunctionArg []byte `protobuf:"bytes,3,opt,name=function_arg,json=functionArg,proto3" json:"function_arg,omitempty"`
}

func (x *LocalExecutionRequest) Reset() {
	*x = LocalExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalExecutionRequest) ProtoMessage() {}

func (x *LocalExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalExecutionRequest.ProtoReflect.Descriptor instead.
func (*LocalExecutionRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{5}
}

func (x *LocalExecutionRequest) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

func (x *LocalExecutionRequest) GetTargetFunctionName() string {
	if x != nil {
		return x.TargetFunctionName
	}
	return ""
}

func (x *LocalExecutionRequest) GetFunctionArg() []byte {
	if x != nil {
		return x.FunctionArg
	}
	return nil
}

// Local call response
type LocalExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return_data is the return value of the function
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *LocalExecutionResponse) Reset() {
	*x = LocalExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalExecutionResponse) ProtoMessage() {}

func (x *LocalExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalExecutionResponse.ProtoReflect.Descriptor instead.
func (*LocalExecutionResponse) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{6}
}

func (x *LocalExecutionResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Generate event request
type GenerateEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event
	Event []byte `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *GenerateEventRequest) Reset() {
	*x = GenerateEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateEventRequest) ProtoMessage() {}

func (x *GenerateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateEventRequest.ProtoReflect.Descriptor instead.
func (*GenerateEventRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{7}
}

func (x *GenerateEventRequest) GetEvent() []byte {
	if x != nil {
		return x.Event
	}
	return nil
}

// Generate event resulst
type GenerateEventResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenerateEventResult) Reset() {
	*x = GenerateEventResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateEventResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateEventResult) ProtoMessage() {}

func (x *GenerateEventResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateEventResult.ProtoReflect.Descriptor instead.
func (*GenerateEventResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{8}
}

// Transfer coins request
type TransferCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The address of the recipient
	TargetAddress string `protobuf:"bytes,1,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	// The amount of coins to transfer
	AmountToTransfer *v1.NativeAmount `protobuf:"bytes,2,opt,name=amount_to_transfer,json=amountToTransfer,proto3" json:"amount_to_transfer,omitempty"`
	// The address of the sender, if none, use current address
	SenderAddress *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=sender_address,json=senderAddress,proto3,oneof" json:"sender_address,omitempty"`
}

func (x *TransferCoinsRequest) Reset() {
	*x = TransferCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCoinsRequest) ProtoMessage() {}

func (x *TransferCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCoinsRequest.ProtoReflect.Descriptor instead.
func (*TransferCoinsRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{9}
}

func (x *TransferCoinsRequest) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *TransferCoinsRequest) GetAmountToTransfer() *v1.NativeAmount {
	if x != nil {
		return x.AmountToTransfer
	}
	return nil
}

func (x *TransferCoinsRequest) GetSenderAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.SenderAddress
	}
	return nil
}

// Transfer coin result
type TransferCoinsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransferCoinsResult) Reset() {
	*x = TransferCoinsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCoinsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCoinsResult) ProtoMessage() {}

func (x *TransferCoinsResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCoinsResult.ProtoReflect.Descriptor instead.
func (*TransferCoinsResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{10}
}

// Function exists request
type FunctionExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the smart contract to call
	TargetScAddress string `protobuf:"bytes,1,opt,name=target_sc_address,json=targetScAddress,proto3" json:"target_sc_address,omitempty"`
	// The name of the function to check the existance of
	FunctionName string `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
}

func (x *FunctionExistsRequest) Reset() {
	*x = FunctionExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionExistsRequest) ProtoMessage() {}

func (x *FunctionExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionExistsRequest.ProtoReflect.Descriptor instead.
func (*FunctionExistsRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{11}
}

func (x *FunctionExistsRequest) GetTargetScAddress() string {
	if x != nil {
		return x.TargetScAddress
	}
	return ""
}

func (x *FunctionExistsRequest) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

// Function exists result
type FunctionExistsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Exists is true if the function exists
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *FunctionExistsResult) Reset() {
	*x = FunctionExistsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FunctionExistsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionExistsResult) ProtoMessage() {}

func (x *FunctionExistsResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionExistsResult.ProtoReflect.Descriptor instead.
func (*FunctionExistsResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{12}
}

func (x *FunctionExistsResult) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// Tips to check for completeness exec:
// `rg message | rg "\{" | rg "Result" | wc -l`
// the given count should be equal to the number of messages in RespResult + 1
// the +1 comes from ResResult itself which is counted above
type RespResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Res:
	//
	//	*RespResult_AddNativeAmountResult
	//	*RespResult_AddressFromPubKeyResult
	//	*RespResult_AppendDsValueResult
	//	*RespResult_Base58CheckToBytesResult
	//	*RespResult_BytesToBase58CheckResult
	//	*RespResult_CallerHasWriteAccessResult
	//	*RespResult_CheckAddressResult
	//	*RespResult_CheckNativeAmountResult
	//	*RespResult_CheckPubKeyResult
	//	*RespResult_CheckSigResult
	//	*RespResult_CheckedAddNativeTimeResult
	//	*RespResult_CheckedDivRemNativeTimeResult
	//	*RespResult_CheckedScalarDivRemNativeTimeResult
	//	*RespResult_CheckedScalarMulNativeTimeResult
	//	*RespResult_CheckedSubNativeTimeResult
	//	*RespResult_CompareAddressResult
	//	*RespResult_CompareNativeAmountResult
	//	*RespResult_CompareNativeTimeResult
	//	*RespResult_ComparePubKeyResult
	//	*RespResult_CreateScResult
	//	*RespResult_DeleteDsEntryResult
	//	*RespResult_DivRemNativeAmountResult
	//	*RespResult_DsEntryExistsResult
	//	*RespResult_FunctionExistsResult
	//	*RespResult_GenerateEventResult
	//	*RespResult_GetAddressCategoryResult
	//	*RespResult_GetAddressVersionResult
	//	*RespResult_GetBalanceResult
	//	*RespResult_GetBytecodeResult
	//	*RespResult_GetCallCoinsResult
	//	*RespResult_GetCallStackResult
	//	*RespResult_GetCurrentSlotResult
	//	*RespResult_GetDsKeysResult
	//	*RespResult_GetDsValueResult
	//	*RespResult_GetNativeTimeResult
	//	*RespResult_GetOpDataResult
	//	*RespResult_GetOpKeysResult
	//	*RespResult_GetOriginOperationIdResult
	//	*RespResult_GetOwnedAddressesResult
	//	*RespResult_GetPubKeyVersionResult
	//	*RespResult_GetRemainingGasResult
	//	*RespResult_GetSignatureVersionResult
	//	*RespResult_HashBlake3Result
	//	*RespResult_HashSha256Result
	//	*RespResult_OpEntryExistsResult
	//	*RespResult_Keccak256Result
	//	*RespResult_LocalExecutionResponse
	//	*RespResult_NativeAmountFromStringResult
	//	*RespResult_NativeAmountToStringResult
	//	*RespResult_ScalarDivRemNativeAmountResult
	//	*RespResult_ScalarMulNativeAmountResult
	//	*RespResult_SendAsyncMessageResult
	//	*RespResult_SetBytecodeResult
	//	*RespResult_SetDsValueResult
	//	*RespResult_SubNativeAmountResult
	//	*RespResult_TransferCoinsResult
	//	*RespResult_UnsafeRandomResult
	//	*RespResult_EvmVerifySigResult
	//	*RespResult_VerifySigResult
	//	*RespResult_EvmGetAddressFromPubkeyResult
	//	*RespResult_EvmGetPubkeyFromSignatureResult
	//	*RespResult_IsAddressEoaResult
	//	*RespResult_ChainIdResult
	Res isRespResult_Res `protobuf_oneof:"res"`
}

func (x *RespResult) Reset() {
	*x = RespResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespResult) ProtoMessage() {}

func (x *RespResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespResult.ProtoReflect.Descriptor instead.
func (*RespResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{13}
}

func (m *RespResult) GetRes() isRespResult_Res {
	if m != nil {
		return m.Res
	}
	return nil
}

func (x *RespResult) GetAddNativeAmountResult() *AddNativeAmountResult {
	if x, ok := x.GetRes().(*RespResult_AddNativeAmountResult); ok {
		return x.AddNativeAmountResult
	}
	return nil
}

func (x *RespResult) GetAddressFromPubKeyResult() *AddressFromPubKeyResult {
	if x, ok := x.GetRes().(*RespResult_AddressFromPubKeyResult); ok {
		return x.AddressFromPubKeyResult
	}
	return nil
}

func (x *RespResult) GetAppendDsValueResult() *AppendDsValueResult {
	if x, ok := x.GetRes().(*RespResult_AppendDsValueResult); ok {
		return x.AppendDsValueResult
	}
	return nil
}

func (x *RespResult) GetBase58CheckToBytesResult() *Base58CheckToBytesResult {
	if x, ok := x.GetRes().(*RespResult_Base58CheckToBytesResult); ok {
		return x.Base58CheckToBytesResult
	}
	return nil
}

func (x *RespResult) GetBytesToBase58CheckResult() *BytesToBase58CheckResult {
	if x, ok := x.GetRes().(*RespResult_BytesToBase58CheckResult); ok {
		return x.BytesToBase58CheckResult
	}
	return nil
}

func (x *RespResult) GetCallerHasWriteAccessResult() *CallerHasWriteAccessResult {
	if x, ok := x.GetRes().(*RespResult_CallerHasWriteAccessResult); ok {
		return x.CallerHasWriteAccessResult
	}
	return nil
}

func (x *RespResult) GetCheckAddressResult() *CheckAddressResult {
	if x, ok := x.GetRes().(*RespResult_CheckAddressResult); ok {
		return x.CheckAddressResult
	}
	return nil
}

func (x *RespResult) GetCheckNativeAmountResult() *CheckNativeAmountResult {
	if x, ok := x.GetRes().(*RespResult_CheckNativeAmountResult); ok {
		return x.CheckNativeAmountResult
	}
	return nil
}

func (x *RespResult) GetCheckPubKeyResult() *CheckPubKeyResult {
	if x, ok := x.GetRes().(*RespResult_CheckPubKeyResult); ok {
		return x.CheckPubKeyResult
	}
	return nil
}

func (x *RespResult) GetCheckSigResult() *CheckSigResult {
	if x, ok := x.GetRes().(*RespResult_CheckSigResult); ok {
		return x.CheckSigResult
	}
	return nil
}

func (x *RespResult) GetCheckedAddNativeTimeResult() *CheckedAddNativeTimeResult {
	if x, ok := x.GetRes().(*RespResult_CheckedAddNativeTimeResult); ok {
		return x.CheckedAddNativeTimeResult
	}
	return nil
}

func (x *RespResult) GetCheckedDivRemNativeTimeResult() *CheckedDivRemNativeTimeResult {
	if x, ok := x.GetRes().(*RespResult_CheckedDivRemNativeTimeResult); ok {
		return x.CheckedDivRemNativeTimeResult
	}
	return nil
}

func (x *RespResult) GetCheckedScalarDivRemNativeTimeResult() *CheckedScalarDivRemNativeTimeResult {
	if x, ok := x.GetRes().(*RespResult_CheckedScalarDivRemNativeTimeResult); ok {
		return x.CheckedScalarDivRemNativeTimeResult
	}
	return nil
}

func (x *RespResult) GetCheckedScalarMulNativeTimeResult() *CheckedScalarMulNativeTimeResult {
	if x, ok := x.GetRes().(*RespResult_CheckedScalarMulNativeTimeResult); ok {
		return x.CheckedScalarMulNativeTimeResult
	}
	return nil
}

func (x *RespResult) GetCheckedSubNativeTimeResult() *CheckedSubNativeTimeResult {
	if x, ok := x.GetRes().(*RespResult_CheckedSubNativeTimeResult); ok {
		return x.CheckedSubNativeTimeResult
	}
	return nil
}

func (x *RespResult) GetCompareAddressResult() *CompareAddressResult {
	if x, ok := x.GetRes().(*RespResult_CompareAddressResult); ok {
		return x.CompareAddressResult
	}
	return nil
}

func (x *RespResult) GetCompareNativeAmountResult() *CompareNativeAmountResult {
	if x, ok := x.GetRes().(*RespResult_CompareNativeAmountResult); ok {
		return x.CompareNativeAmountResult
	}
	return nil
}

func (x *RespResult) GetCompareNativeTimeResult() *CompareNativeTimeResult {
	if x, ok := x.GetRes().(*RespResult_CompareNativeTimeResult); ok {
		return x.CompareNativeTimeResult
	}
	return nil
}

func (x *RespResult) GetComparePubKeyResult() *ComparePubKeyResult {
	if x, ok := x.GetRes().(*RespResult_ComparePubKeyResult); ok {
		return x.ComparePubKeyResult
	}
	return nil
}

func (x *RespResult) GetCreateScResult() *CreateScResult {
	if x, ok := x.GetRes().(*RespResult_CreateScResult); ok {
		return x.CreateScResult
	}
	return nil
}

func (x *RespResult) GetDeleteDsEntryResult() *DeleteDsEntryResult {
	if x, ok := x.GetRes().(*RespResult_DeleteDsEntryResult); ok {
		return x.DeleteDsEntryResult
	}
	return nil
}

func (x *RespResult) GetDivRemNativeAmountResult() *DivRemNativeAmountResult {
	if x, ok := x.GetRes().(*RespResult_DivRemNativeAmountResult); ok {
		return x.DivRemNativeAmountResult
	}
	return nil
}

func (x *RespResult) GetDsEntryExistsResult() *DsEntryExistsResult {
	if x, ok := x.GetRes().(*RespResult_DsEntryExistsResult); ok {
		return x.DsEntryExistsResult
	}
	return nil
}

func (x *RespResult) GetFunctionExistsResult() *FunctionExistsResult {
	if x, ok := x.GetRes().(*RespResult_FunctionExistsResult); ok {
		return x.FunctionExistsResult
	}
	return nil
}

func (x *RespResult) GetGenerateEventResult() *GenerateEventResult {
	if x, ok := x.GetRes().(*RespResult_GenerateEventResult); ok {
		return x.GenerateEventResult
	}
	return nil
}

func (x *RespResult) GetGetAddressCategoryResult() *GetAddressCategoryResult {
	if x, ok := x.GetRes().(*RespResult_GetAddressCategoryResult); ok {
		return x.GetAddressCategoryResult
	}
	return nil
}

func (x *RespResult) GetGetAddressVersionResult() *GetAddressVersionResult {
	if x, ok := x.GetRes().(*RespResult_GetAddressVersionResult); ok {
		return x.GetAddressVersionResult
	}
	return nil
}

func (x *RespResult) GetGetBalanceResult() *GetBalanceResult {
	if x, ok := x.GetRes().(*RespResult_GetBalanceResult); ok {
		return x.GetBalanceResult
	}
	return nil
}

func (x *RespResult) GetGetBytecodeResult() *GetBytecodeResult {
	if x, ok := x.GetRes().(*RespResult_GetBytecodeResult); ok {
		return x.GetBytecodeResult
	}
	return nil
}

func (x *RespResult) GetGetCallCoinsResult() *GetCallCoinsResult {
	if x, ok := x.GetRes().(*RespResult_GetCallCoinsResult); ok {
		return x.GetCallCoinsResult
	}
	return nil
}

func (x *RespResult) GetGetCallStackResult() *GetCallStackResult {
	if x, ok := x.GetRes().(*RespResult_GetCallStackResult); ok {
		return x.GetCallStackResult
	}
	return nil
}

func (x *RespResult) GetGetCurrentSlotResult() *GetCurrentSlotResult {
	if x, ok := x.GetRes().(*RespResult_GetCurrentSlotResult); ok {
		return x.GetCurrentSlotResult
	}
	return nil
}

func (x *RespResult) GetGetDsKeysResult() *GetDsKeysResult {
	if x, ok := x.GetRes().(*RespResult_GetDsKeysResult); ok {
		return x.GetDsKeysResult
	}
	return nil
}

func (x *RespResult) GetGetDsValueResult() *GetDsValueResult {
	if x, ok := x.GetRes().(*RespResult_GetDsValueResult); ok {
		return x.GetDsValueResult
	}
	return nil
}

func (x *RespResult) GetGetNativeTimeResult() *GetNativeTimeResult {
	if x, ok := x.GetRes().(*RespResult_GetNativeTimeResult); ok {
		return x.GetNativeTimeResult
	}
	return nil
}

func (x *RespResult) GetGetOpDataResult() *GetOpDataResult {
	if x, ok := x.GetRes().(*RespResult_GetOpDataResult); ok {
		return x.GetOpDataResult
	}
	return nil
}

func (x *RespResult) GetGetOpKeysResult() *GetOpKeysResult {
	if x, ok := x.GetRes().(*RespResult_GetOpKeysResult); ok {
		return x.GetOpKeysResult
	}
	return nil
}

func (x *RespResult) GetGetOriginOperationIdResult() *GetOriginOperationIdResult {
	if x, ok := x.GetRes().(*RespResult_GetOriginOperationIdResult); ok {
		return x.GetOriginOperationIdResult
	}
	return nil
}

func (x *RespResult) GetGetOwnedAddressesResult() *GetOwnedAddressesResult {
	if x, ok := x.GetRes().(*RespResult_GetOwnedAddressesResult); ok {
		return x.GetOwnedAddressesResult
	}
	return nil
}

func (x *RespResult) GetGetPubKeyVersionResult() *GetPubKeyVersionResult {
	if x, ok := x.GetRes().(*RespResult_GetPubKeyVersionResult); ok {
		return x.GetPubKeyVersionResult
	}
	return nil
}

func (x *RespResult) GetGetRemainingGasResult() *GetRemainingGasResult {
	if x, ok := x.GetRes().(*RespResult_GetRemainingGasResult); ok {
		return x.GetRemainingGasResult
	}
	return nil
}

func (x *RespResult) GetGetSignatureVersionResult() *GetSignatureVersionResult {
	if x, ok := x.GetRes().(*RespResult_GetSignatureVersionResult); ok {
		return x.GetSignatureVersionResult
	}
	return nil
}

func (x *RespResult) GetHashBlake3Result() *HashBlake3Result {
	if x, ok := x.GetRes().(*RespResult_HashBlake3Result); ok {
		return x.HashBlake3Result
	}
	return nil
}

func (x *RespResult) GetHashSha256Result() *HashSha256Result {
	if x, ok := x.GetRes().(*RespResult_HashSha256Result); ok {
		return x.HashSha256Result
	}
	return nil
}

func (x *RespResult) GetOpEntryExistsResult() *OpEntryExistsResult {
	if x, ok := x.GetRes().(*RespResult_OpEntryExistsResult); ok {
		return x.OpEntryExistsResult
	}
	return nil
}

func (x *RespResult) GetKeccak256Result() *Keccak256Result {
	if x, ok := x.GetRes().(*RespResult_Keccak256Result); ok {
		return x.Keccak256Result
	}
	return nil
}

func (x *RespResult) GetLocalExecutionResponse() *LocalExecutionResponse {
	if x, ok := x.GetRes().(*RespResult_LocalExecutionResponse); ok {
		return x.LocalExecutionResponse
	}
	return nil
}

func (x *RespResult) GetNativeAmountFromStringResult() *NativeAmountFromStringResult {
	if x, ok := x.GetRes().(*RespResult_NativeAmountFromStringResult); ok {
		return x.NativeAmountFromStringResult
	}
	return nil
}

func (x *RespResult) GetNativeAmountToStringResult() *NativeAmountToStringResult {
	if x, ok := x.GetRes().(*RespResult_NativeAmountToStringResult); ok {
		return x.NativeAmountToStringResult
	}
	return nil
}

func (x *RespResult) GetScalarDivRemNativeAmountResult() *ScalarDivRemNativeAmountResult {
	if x, ok := x.GetRes().(*RespResult_ScalarDivRemNativeAmountResult); ok {
		return x.ScalarDivRemNativeAmountResult
	}
	return nil
}

func (x *RespResult) GetScalarMulNativeAmountResult() *ScalarMulNativeAmountResult {
	if x, ok := x.GetRes().(*RespResult_ScalarMulNativeAmountResult); ok {
		return x.ScalarMulNativeAmountResult
	}
	return nil
}

func (x *RespResult) GetSendAsyncMessageResult() *SendAsyncMessageResult {
	if x, ok := x.GetRes().(*RespResult_SendAsyncMessageResult); ok {
		return x.SendAsyncMessageResult
	}
	return nil
}

func (x *RespResult) GetSetBytecodeResult() *SetBytecodeResult {
	if x, ok := x.GetRes().(*RespResult_SetBytecodeResult); ok {
		return x.SetBytecodeResult
	}
	return nil
}

func (x *RespResult) GetSetDsValueResult() *SetDsValueResult {
	if x, ok := x.GetRes().(*RespResult_SetDsValueResult); ok {
		return x.SetDsValueResult
	}
	return nil
}

func (x *RespResult) GetSubNativeAmountResult() *SubNativeAmountResult {
	if x, ok := x.GetRes().(*RespResult_SubNativeAmountResult); ok {
		return x.SubNativeAmountResult
	}
	return nil
}

func (x *RespResult) GetTransferCoinsResult() *TransferCoinsResult {
	if x, ok := x.GetRes().(*RespResult_TransferCoinsResult); ok {
		return x.TransferCoinsResult
	}
	return nil
}

func (x *RespResult) GetUnsafeRandomResult() *UnsafeRandomResult {
	if x, ok := x.GetRes().(*RespResult_UnsafeRandomResult); ok {
		return x.UnsafeRandomResult
	}
	return nil
}

func (x *RespResult) GetEvmVerifySigResult() *EvmVerifySigResult {
	if x, ok := x.GetRes().(*RespResult_EvmVerifySigResult); ok {
		return x.EvmVerifySigResult
	}
	return nil
}

func (x *RespResult) GetVerifySigResult() *VerifySigResult {
	if x, ok := x.GetRes().(*RespResult_VerifySigResult); ok {
		return x.VerifySigResult
	}
	return nil
}

func (x *RespResult) GetEvmGetAddressFromPubkeyResult() *EvmGetAddressFromPubkeyResult {
	if x, ok := x.GetRes().(*RespResult_EvmGetAddressFromPubkeyResult); ok {
		return x.EvmGetAddressFromPubkeyResult
	}
	return nil
}

func (x *RespResult) GetEvmGetPubkeyFromSignatureResult() *EvmGetPubkeyFromSignatureResult {
	if x, ok := x.GetRes().(*RespResult_EvmGetPubkeyFromSignatureResult); ok {
		return x.EvmGetPubkeyFromSignatureResult
	}
	return nil
}

func (x *RespResult) GetIsAddressEoaResult() *IsAddressEoaResult {
	if x, ok := x.GetRes().(*RespResult_IsAddressEoaResult); ok {
		return x.IsAddressEoaResult
	}
	return nil
}

func (x *RespResult) GetChainIdResult() *ChainIdResult {
	if x, ok := x.GetRes().(*RespResult_ChainIdResult); ok {
		return x.ChainIdResult
	}
	return nil
}

type isRespResult_Res interface {
	isRespResult_Res()
}

type RespResult_AddNativeAmountResult struct {
	AddNativeAmountResult *AddNativeAmountResult `protobuf:"bytes,1,opt,name=add_native_amount_result,json=addNativeAmountResult,proto3,oneof"`
}

type RespResult_AddressFromPubKeyResult struct {
	AddressFromPubKeyResult *AddressFromPubKeyResult `protobuf:"bytes,2,opt,name=address_from_pub_key_result,json=addressFromPubKeyResult,proto3,oneof"`
}

type RespResult_AppendDsValueResult struct {
	AppendDsValueResult *AppendDsValueResult `protobuf:"bytes,3,opt,name=append_ds_value_result,json=appendDsValueResult,proto3,oneof"`
}

type RespResult_Base58CheckToBytesResult struct {
	Base58CheckToBytesResult *Base58CheckToBytesResult `protobuf:"bytes,4,opt,name=base58_check_to_bytes_result,json=base58CheckToBytesResult,proto3,oneof"`
}

type RespResult_BytesToBase58CheckResult struct {
	BytesToBase58CheckResult *BytesToBase58CheckResult `protobuf:"bytes,5,opt,name=bytes_to_base58_check_result,json=bytesToBase58CheckResult,proto3,oneof"`
}

type RespResult_CallerHasWriteAccessResult struct {
	CallerHasWriteAccessResult *CallerHasWriteAccessResult `protobuf:"bytes,6,opt,name=caller_has_write_access_result,json=callerHasWriteAccessResult,proto3,oneof"`
}

type RespResult_CheckAddressResult struct {
	CheckAddressResult *CheckAddressResult `protobuf:"bytes,7,opt,name=check_address_result,json=checkAddressResult,proto3,oneof"`
}

type RespResult_CheckNativeAmountResult struct {
	CheckNativeAmountResult *CheckNativeAmountResult `protobuf:"bytes,8,opt,name=check_native_amount_result,json=checkNativeAmountResult,proto3,oneof"`
}

type RespResult_CheckPubKeyResult struct {
	CheckPubKeyResult *CheckPubKeyResult `protobuf:"bytes,9,opt,name=check_pub_key_result,json=checkPubKeyResult,proto3,oneof"`
}

type RespResult_CheckSigResult struct {
	CheckSigResult *CheckSigResult `protobuf:"bytes,10,opt,name=check_sig_result,json=checkSigResult,proto3,oneof"`
}

type RespResult_CheckedAddNativeTimeResult struct {
	CheckedAddNativeTimeResult *CheckedAddNativeTimeResult `protobuf:"bytes,11,opt,name=checked_add_native_time_result,json=checkedAddNativeTimeResult,proto3,oneof"`
}

type RespResult_CheckedDivRemNativeTimeResult struct {
	CheckedDivRemNativeTimeResult *CheckedDivRemNativeTimeResult `protobuf:"bytes,12,opt,name=checked_div_rem_native_time_result,json=checkedDivRemNativeTimeResult,proto3,oneof"`
}

type RespResult_CheckedScalarDivRemNativeTimeResult struct {
	CheckedScalarDivRemNativeTimeResult *CheckedScalarDivRemNativeTimeResult `protobuf:"bytes,13,opt,name=checked_scalar_div_rem_native_time_result,json=checkedScalarDivRemNativeTimeResult,proto3,oneof"`
}

type RespResult_CheckedScalarMulNativeTimeResult struct {
	CheckedScalarMulNativeTimeResult *CheckedScalarMulNativeTimeResult `protobuf:"bytes,14,opt,name=checked_scalar_mul_native_time_result,json=checkedScalarMulNativeTimeResult,proto3,oneof"`
}

type RespResult_CheckedSubNativeTimeResult struct {
	CheckedSubNativeTimeResult *CheckedSubNativeTimeResult `protobuf:"bytes,15,opt,name=checked_sub_native_time_result,json=checkedSubNativeTimeResult,proto3,oneof"`
}

type RespResult_CompareAddressResult struct {
	CompareAddressResult *CompareAddressResult `protobuf:"bytes,16,opt,name=compare_address_result,json=compareAddressResult,proto3,oneof"`
}

type RespResult_CompareNativeAmountResult struct {
	CompareNativeAmountResult *CompareNativeAmountResult `protobuf:"bytes,17,opt,name=compare_native_amount_result,json=compareNativeAmountResult,proto3,oneof"`
}

type RespResult_CompareNativeTimeResult struct {
	CompareNativeTimeResult *CompareNativeTimeResult `protobuf:"bytes,18,opt,name=compare_native_time_result,json=compareNativeTimeResult,proto3,oneof"`
}

type RespResult_ComparePubKeyResult struct {
	ComparePubKeyResult *ComparePubKeyResult `protobuf:"bytes,19,opt,name=compare_pub_key_result,json=comparePubKeyResult,proto3,oneof"`
}

type RespResult_CreateScResult struct {
	CreateScResult *CreateScResult `protobuf:"bytes,20,opt,name=create_sc_result,json=createScResult,proto3,oneof"`
}

type RespResult_DeleteDsEntryResult struct {
	DeleteDsEntryResult *DeleteDsEntryResult `protobuf:"bytes,21,opt,name=delete_ds_entry_result,json=deleteDsEntryResult,proto3,oneof"`
}

type RespResult_DivRemNativeAmountResult struct {
	DivRemNativeAmountResult *DivRemNativeAmountResult `protobuf:"bytes,22,opt,name=div_rem_native_amount_result,json=divRemNativeAmountResult,proto3,oneof"`
}

type RespResult_DsEntryExistsResult struct {
	DsEntryExistsResult *DsEntryExistsResult `protobuf:"bytes,23,opt,name=ds_entry_exists_result,json=dsEntryExistsResult,proto3,oneof"`
}

type RespResult_FunctionExistsResult struct {
	FunctionExistsResult *FunctionExistsResult `protobuf:"bytes,24,opt,name=function_exists_result,json=functionExistsResult,proto3,oneof"`
}

type RespResult_GenerateEventResult struct {
	GenerateEventResult *GenerateEventResult `protobuf:"bytes,25,opt,name=generate_event_result,json=generateEventResult,proto3,oneof"`
}

type RespResult_GetAddressCategoryResult struct {
	GetAddressCategoryResult *GetAddressCategoryResult `protobuf:"bytes,26,opt,name=get_address_category_result,json=getAddressCategoryResult,proto3,oneof"`
}

type RespResult_GetAddressVersionResult struct {
	GetAddressVersionResult *GetAddressVersionResult `protobuf:"bytes,27,opt,name=get_address_version_result,json=getAddressVersionResult,proto3,oneof"`
}

type RespResult_GetBalanceResult struct {
	GetBalanceResult *GetBalanceResult `protobuf:"bytes,28,opt,name=get_balance_result,json=getBalanceResult,proto3,oneof"`
}

type RespResult_GetBytecodeResult struct {
	GetBytecodeResult *GetBytecodeResult `protobuf:"bytes,29,opt,name=get_bytecode_result,json=getBytecodeResult,proto3,oneof"`
}

type RespResult_GetCallCoinsResult struct {
	GetCallCoinsResult *GetCallCoinsResult `protobuf:"bytes,30,opt,name=get_call_coins_result,json=getCallCoinsResult,proto3,oneof"`
}

type RespResult_GetCallStackResult struct {
	GetCallStackResult *GetCallStackResult `protobuf:"bytes,31,opt,name=get_call_stack_result,json=getCallStackResult,proto3,oneof"`
}

type RespResult_GetCurrentSlotResult struct {
	GetCurrentSlotResult *GetCurrentSlotResult `protobuf:"bytes,32,opt,name=get_current_slot_result,json=getCurrentSlotResult,proto3,oneof"`
}

type RespResult_GetDsKeysResult struct {
	GetDsKeysResult *GetDsKeysResult `protobuf:"bytes,33,opt,name=get_ds_keys_result,json=getDsKeysResult,proto3,oneof"`
}

type RespResult_GetDsValueResult struct {
	GetDsValueResult *GetDsValueResult `protobuf:"bytes,34,opt,name=get_ds_value_result,json=getDsValueResult,proto3,oneof"`
}

type RespResult_GetNativeTimeResult struct {
	GetNativeTimeResult *GetNativeTimeResult `protobuf:"bytes,35,opt,name=get_native_time_result,json=getNativeTimeResult,proto3,oneof"`
}

type RespResult_GetOpDataResult struct {
	GetOpDataResult *GetOpDataResult `protobuf:"bytes,36,opt,name=get_op_data_result,json=getOpDataResult,proto3,oneof"`
}

type RespResult_GetOpKeysResult struct {
	GetOpKeysResult *GetOpKeysResult `protobuf:"bytes,37,opt,name=get_op_keys_result,json=getOpKeysResult,proto3,oneof"`
}

type RespResult_GetOriginOperationIdResult struct {
	GetOriginOperationIdResult *GetOriginOperationIdResult `protobuf:"bytes,38,opt,name=get_origin_operation_id_result,json=getOriginOperationIdResult,proto3,oneof"`
}

type RespResult_GetOwnedAddressesResult struct {
	GetOwnedAddressesResult *GetOwnedAddressesResult `protobuf:"bytes,39,opt,name=get_owned_addresses_result,json=getOwnedAddressesResult,proto3,oneof"`
}

type RespResult_GetPubKeyVersionResult struct {
	GetPubKeyVersionResult *GetPubKeyVersionResult `protobuf:"bytes,40,opt,name=get_pub_key_version_result,json=getPubKeyVersionResult,proto3,oneof"`
}

type RespResult_GetRemainingGasResult struct {
	GetRemainingGasResult *GetRemainingGasResult `protobuf:"bytes,41,opt,name=get_remaining_gas_result,json=getRemainingGasResult,proto3,oneof"`
}

type RespResult_GetSignatureVersionResult struct {
	GetSignatureVersionResult *GetSignatureVersionResult `protobuf:"bytes,42,opt,name=get_signature_version_result,json=getSignatureVersionResult,proto3,oneof"`
}

type RespResult_HashBlake3Result struct {
	HashBlake3Result *HashBlake3Result `protobuf:"bytes,43,opt,name=hash_blake3_result,json=hashBlake3Result,proto3,oneof"`
}

type RespResult_HashSha256Result struct {
	HashSha256Result *HashSha256Result `protobuf:"bytes,44,opt,name=hash_sha256_result,json=hashSha256Result,proto3,oneof"`
}

type RespResult_OpEntryExistsResult struct {
	OpEntryExistsResult *OpEntryExistsResult `protobuf:"bytes,45,opt,name=op_entry_exists_result,json=opEntryExistsResult,proto3,oneof"`
}

type RespResult_Keccak256Result struct {
	Keccak256Result *Keccak256Result `protobuf:"bytes,46,opt,name=keccak256_result,json=keccak256Result,proto3,oneof"`
}

type RespResult_LocalExecutionResponse struct {
	LocalExecutionResponse *LocalExecutionResponse `protobuf:"bytes,47,opt,name=local_execution_response,json=localExecutionResponse,proto3,oneof"`
}

type RespResult_NativeAmountFromStringResult struct {
	NativeAmountFromStringResult *NativeAmountFromStringResult `protobuf:"bytes,48,opt,name=native_amount_from_string_result,json=nativeAmountFromStringResult,proto3,oneof"`
}

type RespResult_NativeAmountToStringResult struct {
	NativeAmountToStringResult *NativeAmountToStringResult `protobuf:"bytes,49,opt,name=native_amount_to_string_result,json=nativeAmountToStringResult,proto3,oneof"`
}

type RespResult_ScalarDivRemNativeAmountResult struct {
	ScalarDivRemNativeAmountResult *ScalarDivRemNativeAmountResult `protobuf:"bytes,50,opt,name=scalar_div_rem_native_amount_result,json=scalarDivRemNativeAmountResult,proto3,oneof"`
}

type RespResult_ScalarMulNativeAmountResult struct {
	ScalarMulNativeAmountResult *ScalarMulNativeAmountResult `protobuf:"bytes,51,opt,name=scalar_mul_native_amount_result,json=scalarMulNativeAmountResult,proto3,oneof"`
}

type RespResult_SendAsyncMessageResult struct {
	SendAsyncMessageResult *SendAsyncMessageResult `protobuf:"bytes,52,opt,name=send_async_message_result,json=sendAsyncMessageResult,proto3,oneof"`
}

type RespResult_SetBytecodeResult struct {
	SetBytecodeResult *SetBytecodeResult `protobuf:"bytes,53,opt,name=set_bytecode_result,json=setBytecodeResult,proto3,oneof"`
}

type RespResult_SetDsValueResult struct {
	SetDsValueResult *SetDsValueResult `protobuf:"bytes,54,opt,name=set_ds_value_result,json=setDsValueResult,proto3,oneof"`
}

type RespResult_SubNativeAmountResult struct {
	SubNativeAmountResult *SubNativeAmountResult `protobuf:"bytes,55,opt,name=sub_native_amount_result,json=subNativeAmountResult,proto3,oneof"`
}

type RespResult_TransferCoinsResult struct {
	TransferCoinsResult *TransferCoinsResult `protobuf:"bytes,56,opt,name=transfer_coins_result,json=transferCoinsResult,proto3,oneof"`
}

type RespResult_UnsafeRandomResult struct {
	UnsafeRandomResult *UnsafeRandomResult `protobuf:"bytes,57,opt,name=unsafe_random_result,json=unsafeRandomResult,proto3,oneof"`
}

type RespResult_EvmVerifySigResult struct {
	EvmVerifySigResult *EvmVerifySigResult `protobuf:"bytes,58,opt,name=evm_verify_sig_result,json=evmVerifySigResult,proto3,oneof"`
}

type RespResult_VerifySigResult struct {
	VerifySigResult *VerifySigResult `protobuf:"bytes,59,opt,name=verify_sig_result,json=verifySigResult,proto3,oneof"`
}

type RespResult_EvmGetAddressFromPubkeyResult struct {
	EvmGetAddressFromPubkeyResult *EvmGetAddressFromPubkeyResult `protobuf:"bytes,60,opt,name=evm_get_address_from_pubkey_result,json=evmGetAddressFromPubkeyResult,proto3,oneof"`
}

type RespResult_EvmGetPubkeyFromSignatureResult struct {
	EvmGetPubkeyFromSignatureResult *EvmGetPubkeyFromSignatureResult `protobuf:"bytes,61,opt,name=evm_get_pubkey_from_signature_result,json=evmGetPubkeyFromSignatureResult,proto3,oneof"`
}

type RespResult_IsAddressEoaResult struct {
	IsAddressEoaResult *IsAddressEoaResult `protobuf:"bytes,62,opt,name=is_address_eoa_result,json=isAddressEoaResult,proto3,oneof"`
}

type RespResult_ChainIdResult struct {
	ChainIdResult *ChainIdResult `protobuf:"bytes,63,opt,name=chain_id_result,json=chainIdResult,proto3,oneof"`
}

func (*RespResult_AddNativeAmountResult) isRespResult_Res() {}

func (*RespResult_AddressFromPubKeyResult) isRespResult_Res() {}

func (*RespResult_AppendDsValueResult) isRespResult_Res() {}

func (*RespResult_Base58CheckToBytesResult) isRespResult_Res() {}

func (*RespResult_BytesToBase58CheckResult) isRespResult_Res() {}

func (*RespResult_CallerHasWriteAccessResult) isRespResult_Res() {}

func (*RespResult_CheckAddressResult) isRespResult_Res() {}

func (*RespResult_CheckNativeAmountResult) isRespResult_Res() {}

func (*RespResult_CheckPubKeyResult) isRespResult_Res() {}

func (*RespResult_CheckSigResult) isRespResult_Res() {}

func (*RespResult_CheckedAddNativeTimeResult) isRespResult_Res() {}

func (*RespResult_CheckedDivRemNativeTimeResult) isRespResult_Res() {}

func (*RespResult_CheckedScalarDivRemNativeTimeResult) isRespResult_Res() {}

func (*RespResult_CheckedScalarMulNativeTimeResult) isRespResult_Res() {}

func (*RespResult_CheckedSubNativeTimeResult) isRespResult_Res() {}

func (*RespResult_CompareAddressResult) isRespResult_Res() {}

func (*RespResult_CompareNativeAmountResult) isRespResult_Res() {}

func (*RespResult_CompareNativeTimeResult) isRespResult_Res() {}

func (*RespResult_ComparePubKeyResult) isRespResult_Res() {}

func (*RespResult_CreateScResult) isRespResult_Res() {}

func (*RespResult_DeleteDsEntryResult) isRespResult_Res() {}

func (*RespResult_DivRemNativeAmountResult) isRespResult_Res() {}

func (*RespResult_DsEntryExistsResult) isRespResult_Res() {}

func (*RespResult_FunctionExistsResult) isRespResult_Res() {}

func (*RespResult_GenerateEventResult) isRespResult_Res() {}

func (*RespResult_GetAddressCategoryResult) isRespResult_Res() {}

func (*RespResult_GetAddressVersionResult) isRespResult_Res() {}

func (*RespResult_GetBalanceResult) isRespResult_Res() {}

func (*RespResult_GetBytecodeResult) isRespResult_Res() {}

func (*RespResult_GetCallCoinsResult) isRespResult_Res() {}

func (*RespResult_GetCallStackResult) isRespResult_Res() {}

func (*RespResult_GetCurrentSlotResult) isRespResult_Res() {}

func (*RespResult_GetDsKeysResult) isRespResult_Res() {}

func (*RespResult_GetDsValueResult) isRespResult_Res() {}

func (*RespResult_GetNativeTimeResult) isRespResult_Res() {}

func (*RespResult_GetOpDataResult) isRespResult_Res() {}

func (*RespResult_GetOpKeysResult) isRespResult_Res() {}

func (*RespResult_GetOriginOperationIdResult) isRespResult_Res() {}

func (*RespResult_GetOwnedAddressesResult) isRespResult_Res() {}

func (*RespResult_GetPubKeyVersionResult) isRespResult_Res() {}

func (*RespResult_GetRemainingGasResult) isRespResult_Res() {}

func (*RespResult_GetSignatureVersionResult) isRespResult_Res() {}

func (*RespResult_HashBlake3Result) isRespResult_Res() {}

func (*RespResult_HashSha256Result) isRespResult_Res() {}

func (*RespResult_OpEntryExistsResult) isRespResult_Res() {}

func (*RespResult_Keccak256Result) isRespResult_Res() {}

func (*RespResult_LocalExecutionResponse) isRespResult_Res() {}

func (*RespResult_NativeAmountFromStringResult) isRespResult_Res() {}

func (*RespResult_NativeAmountToStringResult) isRespResult_Res() {}

func (*RespResult_ScalarDivRemNativeAmountResult) isRespResult_Res() {}

func (*RespResult_ScalarMulNativeAmountResult) isRespResult_Res() {}

func (*RespResult_SendAsyncMessageResult) isRespResult_Res() {}

func (*RespResult_SetBytecodeResult) isRespResult_Res() {}

func (*RespResult_SetDsValueResult) isRespResult_Res() {}

func (*RespResult_SubNativeAmountResult) isRespResult_Res() {}

func (*RespResult_TransferCoinsResult) isRespResult_Res() {}

func (*RespResult_UnsafeRandomResult) isRespResult_Res() {}

func (*RespResult_EvmVerifySigResult) isRespResult_Res() {}

func (*RespResult_VerifySigResult) isRespResult_Res() {}

func (*RespResult_EvmGetAddressFromPubkeyResult) isRespResult_Res() {}

func (*RespResult_EvmGetPubkeyFromSignatureResult) isRespResult_Res() {}

func (*RespResult_IsAddressEoaResult) isRespResult_Res() {}

func (*RespResult_ChainIdResult) isRespResult_Res() {}

// Generic message that encapsulate response from ABI calls.
type AbiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Resp:
	//
	//	*AbiResponse_Res
	//	*AbiResponse_Error
	Resp isAbiResponse_Resp `protobuf_oneof:"resp"`
}

func (x *AbiResponse) Reset() {
	*x = AbiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbiResponse) ProtoMessage() {}

func (x *AbiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbiResponse.ProtoReflect.Descriptor instead.
func (*AbiResponse) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{14}
}

func (m *AbiResponse) GetResp() isAbiResponse_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (x *AbiResponse) GetRes() *RespResult {
	if x, ok := x.GetResp().(*AbiResponse_Res); ok {
		return x.Res
	}
	return nil
}

func (x *AbiResponse) GetError() *Error {
	if x, ok := x.GetResp().(*AbiResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isAbiResponse_Resp interface {
	isAbiResponse_Resp()
}

type AbiResponse_Res struct {
	// variant for success
	Res *RespResult `protobuf:"bytes,1,opt,name=res,proto3,oneof"`
}

type AbiResponse_Error struct {
	// variant for error
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*AbiResponse_Res) isAbiResponse_Resp() {}

func (*AbiResponse_Error) isAbiResponse_Resp() {}

// Amount to string request
type NativeAmountToStringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount to convert to string
	ToConvert *v1.NativeAmount `protobuf:"bytes,1,opt,name=to_convert,json=toConvert,proto3" json:"to_convert,omitempty"`
}

func (x *NativeAmountToStringRequest) Reset() {
	*x = NativeAmountToStringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeAmountToStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeAmountToStringRequest) ProtoMessage() {}

func (x *NativeAmountToStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeAmountToStringRequest.ProtoReflect.Descriptor instead.
func (*NativeAmountToStringRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{15}
}

func (x *NativeAmountToStringRequest) GetToConvert() *v1.NativeAmount {
	if x != nil {
		return x.ToConvert
	}
	return nil
}

// Amount to string result
type NativeAmountToStringResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Converted Amount
	ConvertedAmount string `protobuf:"bytes,1,opt,name=converted_amount,json=convertedAmount,proto3" json:"converted_amount,omitempty"`
}

func (x *NativeAmountToStringResult) Reset() {
	*x = NativeAmountToStringResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeAmountToStringResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeAmountToStringResult) ProtoMessage() {}

func (x *NativeAmountToStringResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeAmountToStringResult.ProtoReflect.Descriptor instead.
func (*NativeAmountToStringResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{16}
}

func (x *NativeAmountToStringResult) GetConvertedAmount() string {
	if x != nil {
		return x.ConvertedAmount
	}
	return ""
}

// Amount from string request
type NativeAmountFromStringRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String to convert to Amount
	ToConvert string `protobuf:"bytes,1,opt,name=to_convert,json=toConvert,proto3" json:"to_convert,omitempty"`
}

func (x *NativeAmountFromStringRequest) Reset() {
	*x = NativeAmountFromStringRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeAmountFromStringRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeAmountFromStringRequest) ProtoMessage() {}

func (x *NativeAmountFromStringRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeAmountFromStringRequest.ProtoReflect.Descriptor instead.
func (*NativeAmountFromStringRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{17}
}

func (x *NativeAmountFromStringRequest) GetToConvert() string {
	if x != nil {
		return x.ToConvert
	}
	return ""
}

// Amount from string result
type NativeAmountFromStringResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Converted Amount
	ConvertedAmount *v1.NativeAmount `protobuf:"bytes,1,opt,name=converted_amount,json=convertedAmount,proto3" json:"converted_amount,omitempty"`
}

func (x *NativeAmountFromStringResult) Reset() {
	*x = NativeAmountFromStringResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeAmountFromStringResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeAmountFromStringResult) ProtoMessage() {}

func (x *NativeAmountFromStringResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeAmountFromStringResult.ProtoReflect.Descriptor instead.
func (*NativeAmountFromStringResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{18}
}

func (x *NativeAmountFromStringResult) GetConvertedAmount() *v1.NativeAmount {
	if x != nil {
		return x.ConvertedAmount
	}
	return nil
}

// Check address request
type CheckAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to check
	ToCheck string `protobuf:"bytes,1,opt,name=to_check,json=toCheck,proto3" json:"to_check,omitempty"`
}

func (x *CheckAddressRequest) Reset() {
	*x = CheckAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAddressRequest) ProtoMessage() {}

func (x *CheckAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAddressRequest.ProtoReflect.Descriptor instead.
func (*CheckAddressRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{19}
}

func (x *CheckAddressRequest) GetToCheck() string {
	if x != nil {
		return x.ToCheck
	}
	return ""
}

// Check address result
type CheckAddressResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is address valid
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *CheckAddressResult) Reset() {
	*x = CheckAddressResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAddressResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAddressResult) ProtoMessage() {}

func (x *CheckAddressResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAddressResult.ProtoReflect.Descriptor instead.
func (*CheckAddressResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{20}
}

func (x *CheckAddressResult) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// Check PubKey request
type CheckPubKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PubKey to check
	ToCheck string `protobuf:"bytes,1,opt,name=to_check,json=toCheck,proto3" json:"to_check,omitempty"`
}

func (x *CheckPubKeyRequest) Reset() {
	*x = CheckPubKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPubKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPubKeyRequest) ProtoMessage() {}

func (x *CheckPubKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPubKeyRequest.ProtoReflect.Descriptor instead.
func (*CheckPubKeyRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{21}
}

func (x *CheckPubKeyRequest) GetToCheck() string {
	if x != nil {
		return x.ToCheck
	}
	return ""
}

// Check PubKey result
type CheckPubKeyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is PubKey valid
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *CheckPubKeyResult) Reset() {
	*x = CheckPubKeyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPubKeyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPubKeyResult) ProtoMessage() {}

func (x *CheckPubKeyResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPubKeyResult.ProtoReflect.Descriptor instead.
func (*CheckPubKeyResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{22}
}

func (x *CheckPubKeyResult) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// Check Sig request
type CheckSigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sig to check
	ToCheck string `protobuf:"bytes,1,opt,name=to_check,json=toCheck,proto3" json:"to_check,omitempty"`
}

func (x *CheckSigRequest) Reset() {
	*x = CheckSigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSigRequest) ProtoMessage() {}

func (x *CheckSigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSigRequest.ProtoReflect.Descriptor instead.
func (*CheckSigRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{23}
}

func (x *CheckSigRequest) GetToCheck() string {
	if x != nil {
		return x.ToCheck
	}
	return ""
}

// Check Sig result
type CheckSigResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is Sig valid
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *CheckSigResult) Reset() {
	*x = CheckSigResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSigResult) ProtoMessage() {}

func (x *CheckSigResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSigResult.ProtoReflect.Descriptor instead.
func (*CheckSigResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{24}
}

func (x *CheckSigResult) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// Check Amount request
type CheckNativeAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount to check
	ToCheck *v1.NativeAmount `protobuf:"bytes,1,opt,name=to_check,json=toCheck,proto3" json:"to_check,omitempty"`
}

func (x *CheckNativeAmountRequest) Reset() {
	*x = CheckNativeAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckNativeAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNativeAmountRequest) ProtoMessage() {}

func (x *CheckNativeAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNativeAmountRequest.ProtoReflect.Descriptor instead.
func (*CheckNativeAmountRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{25}
}

func (x *CheckNativeAmountRequest) GetToCheck() *v1.NativeAmount {
	if x != nil {
		return x.ToCheck
	}
	return nil
}

// Check Amount result
type CheckNativeAmountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is Amount valid
	IsValid bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
}

func (x *CheckNativeAmountResult) Reset() {
	*x = CheckNativeAmountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckNativeAmountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNativeAmountResult) ProtoMessage() {}

func (x *CheckNativeAmountResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNativeAmountResult.ProtoReflect.Descriptor instead.
func (*CheckNativeAmountResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{26}
}

func (x *CheckNativeAmountResult) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

// Amount addition request
type AddNativeAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First amount to add
	Amount1 *v1.NativeAmount `protobuf:"bytes,1,opt,name=amount1,proto3" json:"amount1,omitempty"`
	// Second amount to add
	Amount2 *v1.NativeAmount `protobuf:"bytes,2,opt,name=amount2,proto3" json:"amount2,omitempty"`
}

func (x *AddNativeAmountRequest) Reset() {
	*x = AddNativeAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNativeAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNativeAmountRequest) ProtoMessage() {}

func (x *AddNativeAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNativeAmountRequest.ProtoReflect.Descriptor instead.
func (*AddNativeAmountRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{27}
}

func (x *AddNativeAmountRequest) GetAmount1() *v1.NativeAmount {
	if x != nil {
		return x.Amount1
	}
	return nil
}

func (x *AddNativeAmountRequest) GetAmount2() *v1.NativeAmount {
	if x != nil {
		return x.Amount2
	}
	return nil
}

// Amount addition result
type AddNativeAmountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sum of amounts
	Sum *v1.NativeAmount `protobuf:"bytes,1,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *AddNativeAmountResult) Reset() {
	*x = AddNativeAmountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNativeAmountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNativeAmountResult) ProtoMessage() {}

func (x *AddNativeAmountResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNativeAmountResult.ProtoReflect.Descriptor instead.
func (*AddNativeAmountResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{28}
}

func (x *AddNativeAmountResult) GetSum() *v1.NativeAmount {
	if x != nil {
		return x.Sum
	}
	return nil
}

// Amount subtraction request
// try to compute difference = left - right
// fails if right > left
type SubNativeAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First amount to subtract from
	Left *v1.NativeAmount `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// Second amount to subtract
	Right *v1.NativeAmount `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *SubNativeAmountRequest) Reset() {
	*x = SubNativeAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubNativeAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubNativeAmountRequest) ProtoMessage() {}

func (x *SubNativeAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubNativeAmountRequest.ProtoReflect.Descriptor instead.
func (*SubNativeAmountRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{29}
}

func (x *SubNativeAmountRequest) GetLeft() *v1.NativeAmount {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *SubNativeAmountRequest) GetRight() *v1.NativeAmount {
	if x != nil {
		return x.Right
	}
	return nil
}

// Amount subtraction result
type SubNativeAmountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Difference of amounts (left - right)
	Difference *v1.NativeAmount `protobuf:"bytes,1,opt,name=difference,proto3" json:"difference,omitempty"`
}

func (x *SubNativeAmountResult) Reset() {
	*x = SubNativeAmountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubNativeAmountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubNativeAmountResult) ProtoMessage() {}

func (x *SubNativeAmountResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubNativeAmountResult.ProtoReflect.Descriptor instead.
func (*SubNativeAmountResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{30}
}

func (x *SubNativeAmountResult) GetDifference() *v1.NativeAmount {
	if x != nil {
		return x.Difference
	}
	return nil
}

// Amount multiplication request
// Try to compute product = amount * coefficient (fail if overflow)
type ScalarMulNativeAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount to multiply
	Amount *v1.NativeAmount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// Coefficient to multiply by
	Coefficient uint64 `protobuf:"varint,2,opt,name=coefficient,proto3" json:"coefficient,omitempty"`
}

func (x *ScalarMulNativeAmountRequest) Reset() {
	*x = ScalarMulNativeAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarMulNativeAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarMulNativeAmountRequest) ProtoMessage() {}

func (x *ScalarMulNativeAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarMulNativeAmountRequest.ProtoReflect.Descriptor instead.
func (*ScalarMulNativeAmountRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{31}
}

func (x *ScalarMulNativeAmountRequest) GetAmount() *v1.NativeAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *ScalarMulNativeAmountRequest) GetCoefficient() uint64 {
	if x != nil {
		return x.Coefficient
	}
	return 0
}

// Amount multiplication result
type ScalarMulNativeAmountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Product of amount and coefficient
	Product *v1.NativeAmount `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *ScalarMulNativeAmountResult) Reset() {
	*x = ScalarMulNativeAmountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarMulNativeAmountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarMulNativeAmountResult) ProtoMessage() {}

func (x *ScalarMulNativeAmountResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarMulNativeAmountResult.ProtoReflect.Descriptor instead.
func (*ScalarMulNativeAmountResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{32}
}

func (x *ScalarMulNativeAmountResult) GetProduct() *v1.NativeAmount {
	if x != nil {
		return x.Product
	}
	return nil
}

// Amount division by scalar request
// Try to compute quotient = dividend / divisor
// Fails if divisor == 0
// Fails if underflow
type ScalarDivRemNativeAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount to divide
	Dividend *v1.NativeAmount `protobuf:"bytes,1,opt,name=dividend,proto3" json:"dividend,omitempty"`
	// Divisor to divide by
	Divisor uint64 `protobuf:"varint,2,opt,name=divisor,proto3" json:"divisor,omitempty"`
}

func (x *ScalarDivRemNativeAmountRequest) Reset() {
	*x = ScalarDivRemNativeAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarDivRemNativeAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarDivRemNativeAmountRequest) ProtoMessage() {}

func (x *ScalarDivRemNativeAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarDivRemNativeAmountRequest.ProtoReflect.Descriptor instead.
func (*ScalarDivRemNativeAmountRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{33}
}

func (x *ScalarDivRemNativeAmountRequest) GetDividend() *v1.NativeAmount {
	if x != nil {
		return x.Dividend
	}
	return nil
}

func (x *ScalarDivRemNativeAmountRequest) GetDivisor() uint64 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

// Amount division by scalar result
type ScalarDivRemNativeAmountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Quotient of amount and divisor
	Quotient *v1.NativeAmount `protobuf:"bytes,1,opt,name=quotient,proto3" json:"quotient,omitempty"`
	// Remainder of amount and divisor
	Remainder *v1.NativeAmount `protobuf:"bytes,2,opt,name=remainder,proto3" json:"remainder,omitempty"`
}

func (x *ScalarDivRemNativeAmountResult) Reset() {
	*x = ScalarDivRemNativeAmountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalarDivRemNativeAmountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalarDivRemNativeAmountResult) ProtoMessage() {}

func (x *ScalarDivRemNativeAmountResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalarDivRemNativeAmountResult.ProtoReflect.Descriptor instead.
func (*ScalarDivRemNativeAmountResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{34}
}

func (x *ScalarDivRemNativeAmountResult) GetQuotient() *v1.NativeAmount {
	if x != nil {
		return x.Quotient
	}
	return nil
}

func (x *ScalarDivRemNativeAmountResult) GetRemainder() *v1.NativeAmount {
	if x != nil {
		return x.Remainder
	}
	return nil
}

// Amount division request
type DivRemNativeAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Amount to divide
	Dividend *v1.NativeAmount `protobuf:"bytes,1,opt,name=dividend,proto3" json:"dividend,omitempty"`
	// Divisor to divide by
	Divisor *v1.NativeAmount `protobuf:"bytes,2,opt,name=divisor,proto3" json:"divisor,omitempty"`
}

func (x *DivRemNativeAmountRequest) Reset() {
	*x = DivRemNativeAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivRemNativeAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivRemNativeAmountRequest) ProtoMessage() {}

func (x *DivRemNativeAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivRemNativeAmountRequest.ProtoReflect.Descriptor instead.
func (*DivRemNativeAmountRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{35}
}

func (x *DivRemNativeAmountRequest) GetDividend() *v1.NativeAmount {
	if x != nil {
		return x.Dividend
	}
	return nil
}

func (x *DivRemNativeAmountRequest) GetDivisor() *v1.NativeAmount {
	if x != nil {
		return x.Divisor
	}
	return nil
}

// Amount division result
type DivRemNativeAmountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Quotient of amount and divisor
	Quotient uint64 `protobuf:"varint,1,opt,name=quotient,proto3" json:"quotient,omitempty"`
	// Remainder of amount and divisor
	Remainder *v1.NativeAmount `protobuf:"bytes,2,opt,name=remainder,proto3" json:"remainder,omitempty"`
}

func (x *DivRemNativeAmountResult) Reset() {
	*x = DivRemNativeAmountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DivRemNativeAmountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DivRemNativeAmountResult) ProtoMessage() {}

func (x *DivRemNativeAmountResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DivRemNativeAmountResult.ProtoReflect.Descriptor instead.
func (*DivRemNativeAmountResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{36}
}

func (x *DivRemNativeAmountResult) GetQuotient() uint64 {
	if x != nil {
		return x.Quotient
	}
	return 0
}

func (x *DivRemNativeAmountResult) GetRemainder() *v1.NativeAmount {
	if x != nil {
		return x.Remainder
	}
	return nil
}

// Time addition checked request
type CheckedAddNativeTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First time to add
	Left *v1.NativeTime `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// Second time to add
	Right *v1.NativeTime `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *CheckedAddNativeTimeRequest) Reset() {
	*x = CheckedAddNativeTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedAddNativeTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedAddNativeTimeRequest) ProtoMessage() {}

func (x *CheckedAddNativeTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedAddNativeTimeRequest.ProtoReflect.Descriptor instead.
func (*CheckedAddNativeTimeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{37}
}

func (x *CheckedAddNativeTimeRequest) GetLeft() *v1.NativeTime {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *CheckedAddNativeTimeRequest) GetRight() *v1.NativeTime {
	if x != nil {
		return x.Right
	}
	return nil
}

// Time addition checked result
type CheckedAddNativeTimeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sum of times
	Sum *v1.NativeTime `protobuf:"bytes,1,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *CheckedAddNativeTimeResult) Reset() {
	*x = CheckedAddNativeTimeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedAddNativeTimeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedAddNativeTimeResult) ProtoMessage() {}

func (x *CheckedAddNativeTimeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedAddNativeTimeResult.ProtoReflect.Descriptor instead.
func (*CheckedAddNativeTimeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{38}
}

func (x *CheckedAddNativeTimeResult) GetSum() *v1.NativeTime {
	if x != nil {
		return x.Sum
	}
	return nil
}

// Time subtraction checked request
type CheckedSubNativeTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First time to subtract from
	Left *v1.NativeTime `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// Second time to subtract
	Right *v1.NativeTime `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *CheckedSubNativeTimeRequest) Reset() {
	*x = CheckedSubNativeTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedSubNativeTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedSubNativeTimeRequest) ProtoMessage() {}

func (x *CheckedSubNativeTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedSubNativeTimeRequest.ProtoReflect.Descriptor instead.
func (*CheckedSubNativeTimeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{39}
}

func (x *CheckedSubNativeTimeRequest) GetLeft() *v1.NativeTime {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *CheckedSubNativeTimeRequest) GetRight() *v1.NativeTime {
	if x != nil {
		return x.Right
	}
	return nil
}

// Time subtraction checked result
type CheckedSubNativeTimeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Difference of times (left - right)
	Difference *v1.NativeTime `protobuf:"bytes,1,opt,name=difference,proto3" json:"difference,omitempty"`
}

func (x *CheckedSubNativeTimeResult) Reset() {
	*x = CheckedSubNativeTimeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedSubNativeTimeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedSubNativeTimeResult) ProtoMessage() {}

func (x *CheckedSubNativeTimeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedSubNativeTimeResult.ProtoReflect.Descriptor instead.
func (*CheckedSubNativeTimeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{40}
}

func (x *CheckedSubNativeTimeResult) GetDifference() *v1.NativeTime {
	if x != nil {
		return x.Difference
	}
	return nil
}

// Time scalar mult checked request
type CheckedScalarMulNativeTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time to multiply
	Time *v1.NativeTime `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	// Coefficient to multiply by
	Coefficient uint64 `protobuf:"varint,2,opt,name=coefficient,proto3" json:"coefficient,omitempty"`
}

func (x *CheckedScalarMulNativeTimeRequest) Reset() {
	*x = CheckedScalarMulNativeTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedScalarMulNativeTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedScalarMulNativeTimeRequest) ProtoMessage() {}

func (x *CheckedScalarMulNativeTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedScalarMulNativeTimeRequest.ProtoReflect.Descriptor instead.
func (*CheckedScalarMulNativeTimeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{41}
}

func (x *CheckedScalarMulNativeTimeRequest) GetTime() *v1.NativeTime {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CheckedScalarMulNativeTimeRequest) GetCoefficient() uint64 {
	if x != nil {
		return x.Coefficient
	}
	return 0
}

// Time scalar mult checked result
type CheckedScalarMulNativeTimeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Product of time and coefficient
	Product *v1.NativeTime `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *CheckedScalarMulNativeTimeResult) Reset() {
	*x = CheckedScalarMulNativeTimeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedScalarMulNativeTimeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedScalarMulNativeTimeResult) ProtoMessage() {}

func (x *CheckedScalarMulNativeTimeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedScalarMulNativeTimeResult.ProtoReflect.Descriptor instead.
func (*CheckedScalarMulNativeTimeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{42}
}

func (x *CheckedScalarMulNativeTimeResult) GetProduct() *v1.NativeTime {
	if x != nil {
		return x.Product
	}
	return nil
}

// Time scalar divrem checked request
type CheckedScalarDivRemNativeTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time to divide
	Dividend *v1.NativeTime `protobuf:"bytes,1,opt,name=dividend,proto3" json:"dividend,omitempty"`
	// Divisor to divide by
	Divisor uint64 `protobuf:"varint,2,opt,name=divisor,proto3" json:"divisor,omitempty"`
}

func (x *CheckedScalarDivRemNativeTimeRequest) Reset() {
	*x = CheckedScalarDivRemNativeTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedScalarDivRemNativeTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedScalarDivRemNativeTimeRequest) ProtoMessage() {}

func (x *CheckedScalarDivRemNativeTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedScalarDivRemNativeTimeRequest.ProtoReflect.Descriptor instead.
func (*CheckedScalarDivRemNativeTimeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{43}
}

func (x *CheckedScalarDivRemNativeTimeRequest) GetDividend() *v1.NativeTime {
	if x != nil {
		return x.Dividend
	}
	return nil
}

func (x *CheckedScalarDivRemNativeTimeRequest) GetDivisor() uint64 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

// Time scalar divrem checked result
type CheckedScalarDivRemNativeTimeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Quotient of time and divisor
	Quotient *v1.NativeTime `protobuf:"bytes,1,opt,name=quotient,proto3" json:"quotient,omitempty"`
	// Remainder of time and divisor
	Remainder *v1.NativeTime `protobuf:"bytes,2,opt,name=remainder,proto3" json:"remainder,omitempty"`
}

func (x *CheckedScalarDivRemNativeTimeResult) Reset() {
	*x = CheckedScalarDivRemNativeTimeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedScalarDivRemNativeTimeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedScalarDivRemNativeTimeResult) ProtoMessage() {}

func (x *CheckedScalarDivRemNativeTimeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedScalarDivRemNativeTimeResult.ProtoReflect.Descriptor instead.
func (*CheckedScalarDivRemNativeTimeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{44}
}

func (x *CheckedScalarDivRemNativeTimeResult) GetQuotient() *v1.NativeTime {
	if x != nil {
		return x.Quotient
	}
	return nil
}

func (x *CheckedScalarDivRemNativeTimeResult) GetRemainder() *v1.NativeTime {
	if x != nil {
		return x.Remainder
	}
	return nil
}

// Time division checked request
type CheckedDivRemNativeTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time to divide
	Dividend *v1.NativeTime `protobuf:"bytes,1,opt,name=dividend,proto3" json:"dividend,omitempty"`
	// Divisor to divide by
	Divisor *v1.NativeTime `protobuf:"bytes,2,opt,name=divisor,proto3" json:"divisor,omitempty"`
}

func (x *CheckedDivRemNativeTimeRequest) Reset() {
	*x = CheckedDivRemNativeTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedDivRemNativeTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedDivRemNativeTimeRequest) ProtoMessage() {}

func (x *CheckedDivRemNativeTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedDivRemNativeTimeRequest.ProtoReflect.Descriptor instead.
func (*CheckedDivRemNativeTimeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{45}
}

func (x *CheckedDivRemNativeTimeRequest) GetDividend() *v1.NativeTime {
	if x != nil {
		return x.Dividend
	}
	return nil
}

func (x *CheckedDivRemNativeTimeRequest) GetDivisor() *v1.NativeTime {
	if x != nil {
		return x.Divisor
	}
	return nil
}

// Time division checked result
type CheckedDivRemNativeTimeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Quotient of time and divisor
	Quotient uint64 `protobuf:"varint,1,opt,name=quotient,proto3" json:"quotient,omitempty"`
	// Remainder of time and divisor
	Remainder *v1.NativeTime `protobuf:"bytes,2,opt,name=remainder,proto3" json:"remainder,omitempty"`
}

func (x *CheckedDivRemNativeTimeResult) Reset() {
	*x = CheckedDivRemNativeTimeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckedDivRemNativeTimeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckedDivRemNativeTimeResult) ProtoMessage() {}

func (x *CheckedDivRemNativeTimeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckedDivRemNativeTimeResult.ProtoReflect.Descriptor instead.
func (*CheckedDivRemNativeTimeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{46}
}

func (x *CheckedDivRemNativeTimeResult) GetQuotient() uint64 {
	if x != nil {
		return x.Quotient
	}
	return 0
}

func (x *CheckedDivRemNativeTimeResult) GetRemainder() *v1.NativeTime {
	if x != nil {
		return x.Remainder
	}
	return nil
}

// Time comparison request
type CompareNativeTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First time to compare
	Left *v1.NativeTime `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// Second time to compare
	Right *v1.NativeTime `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *CompareNativeTimeRequest) Reset() {
	*x = CompareNativeTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareNativeTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareNativeTimeRequest) ProtoMessage() {}

func (x *CompareNativeTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareNativeTimeRequest.ProtoReflect.Descriptor instead.
func (*CompareNativeTimeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{47}
}

func (x *CompareNativeTimeRequest) GetLeft() *v1.NativeTime {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *CompareNativeTimeRequest) GetRight() *v1.NativeTime {
	if x != nil {
		return x.Right
	}
	return nil
}

// Time comparison result
type CompareNativeTimeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Comparison result
	Result v1.ComparisonResult `protobuf:"varint,1,opt,name=result,proto3,enum=massa.model.v1.ComparisonResult" json:"result,omitempty"`
}

func (x *CompareNativeTimeResult) Reset() {
	*x = CompareNativeTimeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareNativeTimeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareNativeTimeResult) ProtoMessage() {}

func (x *CompareNativeTimeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareNativeTimeResult.ProtoReflect.Descriptor instead.
func (*CompareNativeTimeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{48}
}

func (x *CompareNativeTimeResult) GetResult() v1.ComparisonResult {
	if x != nil {
		return x.Result
	}
	return v1.ComparisonResult(0)
}

// Compare Address request
type CompareAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First address to compare
	Left string `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// Second address to compare
	Right string `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *CompareAddressRequest) Reset() {
	*x = CompareAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareAddressRequest) ProtoMessage() {}

func (x *CompareAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareAddressRequest.ProtoReflect.Descriptor instead.
func (*CompareAddressRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{49}
}

func (x *CompareAddressRequest) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *CompareAddressRequest) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

// Compare Address result
type CompareAddressResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Comparison result
	Result v1.ComparisonResult `protobuf:"varint,1,opt,name=result,proto3,enum=massa.model.v1.ComparisonResult" json:"result,omitempty"`
}

func (x *CompareAddressResult) Reset() {
	*x = CompareAddressResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareAddressResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareAddressResult) ProtoMessage() {}

func (x *CompareAddressResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareAddressResult.ProtoReflect.Descriptor instead.
func (*CompareAddressResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{50}
}

func (x *CompareAddressResult) GetResult() v1.ComparisonResult {
	if x != nil {
		return x.Result
	}
	return v1.ComparisonResult(0)
}

// Compare PubKey request
type ComparePubKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First public key to compare
	Left string `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// Second public key to compare
	Right string `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *ComparePubKeyRequest) Reset() {
	*x = ComparePubKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparePubKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparePubKeyRequest) ProtoMessage() {}

func (x *ComparePubKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparePubKeyRequest.ProtoReflect.Descriptor instead.
func (*ComparePubKeyRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{51}
}

func (x *ComparePubKeyRequest) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *ComparePubKeyRequest) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

// Compare PubKey result
type ComparePubKeyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Comparison result
	Result v1.ComparisonResult `protobuf:"varint,1,opt,name=result,proto3,enum=massa.model.v1.ComparisonResult" json:"result,omitempty"`
}

func (x *ComparePubKeyResult) Reset() {
	*x = ComparePubKeyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparePubKeyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparePubKeyResult) ProtoMessage() {}

func (x *ComparePubKeyResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparePubKeyResult.ProtoReflect.Descriptor instead.
func (*ComparePubKeyResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{52}
}

func (x *ComparePubKeyResult) GetResult() v1.ComparisonResult {
	if x != nil {
		return x.Result
	}
	return v1.ComparisonResult(0)
}

// Verify Sig request
type VerifySigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signature to verify
	Sig string `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	// Message to verify
	Message []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Public key to verify with
	PubKey string `protobuf:"bytes,3,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *VerifySigRequest) Reset() {
	*x = VerifySigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySigRequest) ProtoMessage() {}

func (x *VerifySigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySigRequest.ProtoReflect.Descriptor instead.
func (*VerifySigRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{53}
}

func (x *VerifySigRequest) GetSig() string {
	if x != nil {
		return x.Sig
	}
	return ""
}

func (x *VerifySigRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *VerifySigRequest) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

// Verify Sig result
type VerifySigResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Verification result
	IsVerified bool `protobuf:"varint,1,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
}

func (x *VerifySigResult) Reset() {
	*x = VerifySigResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySigResult) ProtoMessage() {}

func (x *VerifySigResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySigResult.ProtoReflect.Descriptor instead.
func (*VerifySigResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{54}
}

func (x *VerifySigResult) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

// Compare NativeAmount request
type CompareNativeAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// First amount to compare
	Left *v1.NativeAmount `protobuf:"bytes,1,opt,name=left,proto3" json:"left,omitempty"`
	// Second amount to compare
	Right *v1.NativeAmount `protobuf:"bytes,2,opt,name=right,proto3" json:"right,omitempty"`
}

func (x *CompareNativeAmountRequest) Reset() {
	*x = CompareNativeAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareNativeAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareNativeAmountRequest) ProtoMessage() {}

func (x *CompareNativeAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareNativeAmountRequest.ProtoReflect.Descriptor instead.
func (*CompareNativeAmountRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{55}
}

func (x *CompareNativeAmountRequest) GetLeft() *v1.NativeAmount {
	if x != nil {
		return x.Left
	}
	return nil
}

func (x *CompareNativeAmountRequest) GetRight() *v1.NativeAmount {
	if x != nil {
		return x.Right
	}
	return nil
}

// Compare NativeAmount result
type CompareNativeAmountResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Comparison result
	Result v1.ComparisonResult `protobuf:"varint,1,opt,name=result,proto3,enum=massa.model.v1.ComparisonResult" json:"result,omitempty"`
}

func (x *CompareNativeAmountResult) Reset() {
	*x = CompareNativeAmountResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompareNativeAmountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareNativeAmountResult) ProtoMessage() {}

func (x *CompareNativeAmountResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareNativeAmountResult.ProtoReflect.Descriptor instead.
func (*CompareNativeAmountResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{56}
}

func (x *CompareNativeAmountResult) GetResult() v1.ComparisonResult {
	if x != nil {
		return x.Result
	}
	return v1.ComparisonResult(0)
}

// Keccak256 hash request
type Keccak256Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to hash
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Keccak256Request) Reset() {
	*x = Keccak256Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keccak256Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keccak256Request) ProtoMessage() {}

func (x *Keccak256Request) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keccak256Request.ProtoReflect.Descriptor instead.
func (*Keccak256Request) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{57}
}

func (x *Keccak256Request) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Keccak256 hash result
type Keccak256Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash of data
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Keccak256Result) Reset() {
	*x = Keccak256Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keccak256Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keccak256Result) ProtoMessage() {}

func (x *Keccak256Result) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keccak256Result.ProtoReflect.Descriptor instead.
func (*Keccak256Result) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{58}
}

func (x *Keccak256Result) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// EVM signature verification request
type EvmVerifySigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signature to verify
	Sig []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	// Message to verify
	Message []byte `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Public key to verify with
	PubKey []byte `protobuf:"bytes,3,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *EvmVerifySigRequest) Reset() {
	*x = EvmVerifySigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmVerifySigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmVerifySigRequest) ProtoMessage() {}

func (x *EvmVerifySigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmVerifySigRequest.ProtoReflect.Descriptor instead.
func (*EvmVerifySigRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{59}
}

func (x *EvmVerifySigRequest) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *EvmVerifySigRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *EvmVerifySigRequest) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

// EVM signature verification result
type EvmVerifySigResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Verification result
	IsVerified bool `protobuf:"varint,1,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
}

func (x *EvmVerifySigResult) Reset() {
	*x = EvmVerifySigResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmVerifySigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmVerifySigResult) ProtoMessage() {}

func (x *EvmVerifySigResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmVerifySigResult.ProtoReflect.Descriptor instead.
func (*EvmVerifySigResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{60}
}

func (x *EvmVerifySigResult) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

// EVM get address from public key request
type EvmGetAddressFromPubkeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public key to get address from
	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *EvmGetAddressFromPubkeyRequest) Reset() {
	*x = EvmGetAddressFromPubkeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmGetAddressFromPubkeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmGetAddressFromPubkeyRequest) ProtoMessage() {}

func (x *EvmGetAddressFromPubkeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmGetAddressFromPubkeyRequest.ProtoReflect.Descriptor instead.
func (*EvmGetAddressFromPubkeyRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{61}
}

func (x *EvmGetAddressFromPubkeyRequest) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

// EVM get address from public key result
type EvmGetAddressFromPubkeyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *EvmGetAddressFromPubkeyResult) Reset() {
	*x = EvmGetAddressFromPubkeyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmGetAddressFromPubkeyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmGetAddressFromPubkeyResult) ProtoMessage() {}

func (x *EvmGetAddressFromPubkeyResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmGetAddressFromPubkeyResult.ProtoReflect.Descriptor instead.
func (*EvmGetAddressFromPubkeyResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{62}
}

func (x *EvmGetAddressFromPubkeyResult) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

// EVM get public key from signature request
type EvmGetPubkeyFromSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed hash to verify
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Signature to verify
	Sig []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
}

func (x *EvmGetPubkeyFromSignatureRequest) Reset() {
	*x = EvmGetPubkeyFromSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmGetPubkeyFromSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmGetPubkeyFromSignatureRequest) ProtoMessage() {}

func (x *EvmGetPubkeyFromSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmGetPubkeyFromSignatureRequest.ProtoReflect.Descriptor instead.
func (*EvmGetPubkeyFromSignatureRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{63}
}

func (x *EvmGetPubkeyFromSignatureRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *EvmGetPubkeyFromSignatureRequest) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// EVM get public key from signature result
type EvmGetPubkeyFromSignatureResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public key
	PubKey []byte `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *EvmGetPubkeyFromSignatureResult) Reset() {
	*x = EvmGetPubkeyFromSignatureResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmGetPubkeyFromSignatureResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmGetPubkeyFromSignatureResult) ProtoMessage() {}

func (x *EvmGetPubkeyFromSignatureResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmGetPubkeyFromSignatureResult.ProtoReflect.Descriptor instead.
func (*EvmGetPubkeyFromSignatureResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{64}
}

func (x *EvmGetPubkeyFromSignatureResult) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

// Is address EOA request
type IsAddressEoaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to check
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IsAddressEoaRequest) Reset() {
	*x = IsAddressEoaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAddressEoaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAddressEoaRequest) ProtoMessage() {}

func (x *IsAddressEoaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAddressEoaRequest.ProtoReflect.Descriptor instead.
func (*IsAddressEoaRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{65}
}

func (x *IsAddressEoaRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Is address EOA result
type IsAddressEoaResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is address EOA
	IsEoa bool `protobuf:"varint,1,opt,name=is_eoa,json=isEoa,proto3" json:"is_eoa,omitempty"`
}

func (x *IsAddressEoaResult) Reset() {
	*x = IsAddressEoaResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAddressEoaResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAddressEoaResult) ProtoMessage() {}

func (x *IsAddressEoaResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAddressEoaResult.ProtoReflect.Descriptor instead.
func (*IsAddressEoaResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{66}
}

func (x *IsAddressEoaResult) GetIsEoa() bool {
	if x != nil {
		return x.IsEoa
	}
	return false
}

// Blake3 hash request
type HashBlake3Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data to hash
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HashBlake3Request) Reset() {
	*x = HashBlake3Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashBlake3Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashBlake3Request) ProtoMessage() {}

func (x *HashBlake3Request) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashBlake3Request.ProtoReflect.Descriptor instead.
func (*HashBlake3Request) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{67}
}

func (x *HashBlake3Request) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Blake3 hash result
type HashBlake3Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hash of data
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *HashBlake3Result) Reset() {
	*x = HashBlake3Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashBlake3Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashBlake3Result) ProtoMessage() {}

func (x *HashBlake3Result) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashBlake3Result.ProtoReflect.Descriptor instead.
func (*HashBlake3Result) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{68}
}

func (x *HashBlake3Result) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// Get keys request
type GetDsKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// keys prefix
	Prefix []byte `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Address to get keys for
	Address *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *GetDsKeysRequest) Reset() {
	*x = GetDsKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDsKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDsKeysRequest) ProtoMessage() {}

func (x *GetDsKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDsKeysRequest.ProtoReflect.Descriptor instead.
func (*GetDsKeysRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{69}
}

func (x *GetDsKeysRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *GetDsKeysRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Get keys result
type GetDsKeysResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// keys
	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetDsKeysResult) Reset() {
	*x = GetDsKeysResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDsKeysResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDsKeysResult) ProtoMessage() {}

func (x *GetDsKeysResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDsKeysResult.ProtoReflect.Descriptor instead.
func (*GetDsKeysResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{70}
}

func (x *GetDsKeysResult) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

// Set data store value request
type SetDsValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// value
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Address to set data for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *SetDsValueRequest) Reset() {
	*x = SetDsValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDsValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDsValueRequest) ProtoMessage() {}

func (x *SetDsValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDsValueRequest.ProtoReflect.Descriptor instead.
func (*SetDsValueRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{71}
}

func (x *SetDsValueRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SetDsValueRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetDsValueRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Set data store value result
type SetDsValueResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDsValueResult) Reset() {
	*x = SetDsValueResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDsValueResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDsValueResult) ProtoMessage() {}

func (x *SetDsValueResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDsValueResult.ProtoReflect.Descriptor instead.
func (*SetDsValueResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{72}
}

// Append data request
type AppendDsValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// value
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Address to append data for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *AppendDsValueRequest) Reset() {
	*x = AppendDsValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendDsValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendDsValueRequest) ProtoMessage() {}

func (x *AppendDsValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendDsValueRequest.ProtoReflect.Descriptor instead.
func (*AppendDsValueRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{73}
}

func (x *AppendDsValueRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *AppendDsValueRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *AppendDsValueRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Append data result
type AppendDsValueResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppendDsValueResult) Reset() {
	*x = AppendDsValueResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppendDsValueResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendDsValueResult) ProtoMessage() {}

func (x *AppendDsValueResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendDsValueResult.ProtoReflect.Descriptor instead.
func (*AppendDsValueResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{74}
}

// Get data request
type GetDsValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Address to get data for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *GetDsValueRequest) Reset() {
	*x = GetDsValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDsValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDsValueRequest) ProtoMessage() {}

func (x *GetDsValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDsValueRequest.ProtoReflect.Descriptor instead.
func (*GetDsValueRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{75}
}

func (x *GetDsValueRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetDsValueRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Get data result
type GetDsValueResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetDsValueResult) Reset() {
	*x = GetDsValueResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDsValueResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDsValueResult) ProtoMessage() {}

func (x *GetDsValueResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDsValueResult.ProtoReflect.Descriptor instead.
func (*GetDsValueResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{76}
}

func (x *GetDsValueResult) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Delete data store entry request
type DeleteDsEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Address to delete data for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *DeleteDsEntryRequest) Reset() {
	*x = DeleteDsEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDsEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDsEntryRequest) ProtoMessage() {}

func (x *DeleteDsEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDsEntryRequest.ProtoReflect.Descriptor instead.
func (*DeleteDsEntryRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{77}
}

func (x *DeleteDsEntryRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteDsEntryRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Delete data store entry result
type DeleteDsEntryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteDsEntryResult) Reset() {
	*x = DeleteDsEntryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDsEntryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDsEntryResult) ProtoMessage() {}

func (x *DeleteDsEntryResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDsEntryResult.ProtoReflect.Descriptor instead.
func (*DeleteDsEntryResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{78}
}

// Data store entry exists request
type DsEntryExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Address to check data for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *DsEntryExistsRequest) Reset() {
	*x = DsEntryExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DsEntryExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DsEntryExistsRequest) ProtoMessage() {}

func (x *DsEntryExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DsEntryExistsRequest.ProtoReflect.Descriptor instead.
func (*DsEntryExistsRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{79}
}

func (x *DsEntryExistsRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DsEntryExistsRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Data store entry exists result
type DsEntryExistsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// has data
	HasData bool `protobuf:"varint,1,opt,name=has_data,json=hasData,proto3" json:"has_data,omitempty"`
}

func (x *DsEntryExistsResult) Reset() {
	*x = DsEntryExistsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DsEntryExistsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DsEntryExistsResult) ProtoMessage() {}

func (x *DsEntryExistsResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DsEntryExistsResult.ProtoReflect.Descriptor instead.
func (*DsEntryExistsResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{80}
}

func (x *DsEntryExistsResult) GetHasData() bool {
	if x != nil {
		return x.HasData
	}
	return false
}

// Get owned addresses request
type GetOwnedAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOwnedAddressesRequest) Reset() {
	*x = GetOwnedAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnedAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnedAddressesRequest) ProtoMessage() {}

func (x *GetOwnedAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnedAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetOwnedAddressesRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{81}
}

// Get owned addresses result
type GetOwnedAddressesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// owned addresses
	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *GetOwnedAddressesResult) Reset() {
	*x = GetOwnedAddressesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOwnedAddressesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOwnedAddressesResult) ProtoMessage() {}

func (x *GetOwnedAddressesResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOwnedAddressesResult.ProtoReflect.Descriptor instead.
func (*GetOwnedAddressesResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{82}
}

func (x *GetOwnedAddressesResult) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// Get call stack request
type GetCallStackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCallStackRequest) Reset() {
	*x = GetCallStackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallStackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallStackRequest) ProtoMessage() {}

func (x *GetCallStackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallStackRequest.ProtoReflect.Descriptor instead.
func (*GetCallStackRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{83}
}

// Get call stack result
type GetCallStackResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// call stack
	Calls []string `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (x *GetCallStackResult) Reset() {
	*x = GetCallStackResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallStackResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallStackResult) ProtoMessage() {}

func (x *GetCallStackResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallStackResult.ProtoReflect.Descriptor instead.
func (*GetCallStackResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{84}
}

func (x *GetCallStackResult) GetCalls() []string {
	if x != nil {
		return x.Calls
	}
	return nil
}

// Address from public key request
type AddressFromPubKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Native public key
	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *AddressFromPubKeyRequest) Reset() {
	*x = AddressFromPubKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressFromPubKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressFromPubKeyRequest) ProtoMessage() {}

func (x *AddressFromPubKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressFromPubKeyRequest.ProtoReflect.Descriptor instead.
func (*AddressFromPubKeyRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{85}
}

func (x *AddressFromPubKeyRequest) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

// Address from public key result
type AddressFromPubKeyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressFromPubKeyResult) Reset() {
	*x = AddressFromPubKeyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressFromPubKeyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressFromPubKeyResult) ProtoMessage() {}

func (x *AddressFromPubKeyResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressFromPubKeyResult.ProtoReflect.Descriptor instead.
func (*AddressFromPubKeyResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{86}
}

func (x *AddressFromPubKeyResult) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Unsafe random request
type UnsafeRandomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumBytes uint32 `protobuf:"varint,2,opt,name=num_bytes,json=numBytes,proto3" json:"num_bytes,omitempty"`
}

func (x *UnsafeRandomRequest) Reset() {
	*x = UnsafeRandomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsafeRandomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsafeRandomRequest) ProtoMessage() {}

func (x *UnsafeRandomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsafeRandomRequest.ProtoReflect.Descriptor instead.
func (*UnsafeRandomRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{87}
}

func (x *UnsafeRandomRequest) GetNumBytes() uint32 {
	if x != nil {
		return x.NumBytes
	}
	return 0
}

// Unsafe random result
type UnsafeRandomResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Random bytes generated
	RandomBytes []byte `protobuf:"bytes,1,opt,name=random_bytes,json=randomBytes,proto3" json:"random_bytes,omitempty"`
}

func (x *UnsafeRandomResult) Reset() {
	*x = UnsafeRandomResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsafeRandomResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsafeRandomResult) ProtoMessage() {}

func (x *UnsafeRandomResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsafeRandomResult.ProtoReflect.Descriptor instead.
func (*UnsafeRandomResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{88}
}

func (x *UnsafeRandomResult) GetRandomBytes() []byte {
	if x != nil {
		return x.RandomBytes
	}
	return nil
}

// Send async message request filter
type SendAsyncMessageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Target address
	TargetAddress string `protobuf:"bytes,1,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	// Target key
	TargetKey *wrapperspb.BytesValue `protobuf:"bytes,2,opt,name=target_key,json=targetKey,proto3" json:"target_key,omitempty"`
}

func (x *SendAsyncMessageFilter) Reset() {
	*x = SendAsyncMessageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAsyncMessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAsyncMessageFilter) ProtoMessage() {}

func (x *SendAsyncMessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAsyncMessageFilter.ProtoReflect.Descriptor instead.
func (*SendAsyncMessageFilter) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{89}
}

func (x *SendAsyncMessageFilter) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *SendAsyncMessageFilter) GetTargetKey() *wrapperspb.BytesValue {
	if x != nil {
		return x.TargetKey
	}
	return nil
}

// Send async message request
type SendAsyncMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Target address
	TargetAddress string `protobuf:"bytes,1,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	// Target handler (function name)
	TargetHandler string `protobuf:"bytes,2,opt,name=target_handler,json=targetHandler,proto3" json:"target_handler,omitempty"`
	// Start slot for the message execution
	ValidityStart *v1.Slot `protobuf:"bytes,3,opt,name=validity_start,json=validityStart,proto3" json:"validity_start,omitempty"`
	// End slot for the message execution
	ValidityEnd *v1.Slot `protobuf:"bytes,4,opt,name=validity_end,json=validityEnd,proto3" json:"validity_end,omitempty"`
	// Gas given for the execution
	ExecutionGas uint64 `protobuf:"varint,5,opt,name=execution_gas,json=executionGas,proto3" json:"execution_gas,omitempty"`
	// Message fee
	RawFee uint64 `protobuf:"varint,6,opt,name=raw_fee,json=rawFee,proto3" json:"raw_fee,omitempty"`
	// Coins sent to the execution context
	RawCoins uint64 `protobuf:"varint,7,opt,name=raw_coins,json=rawCoins,proto3" json:"raw_coins,omitempty"`
	// Message data
	Data []byte `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	// Filter for the message
	Filter *SendAsyncMessageFilter `protobuf:"bytes,9,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SendAsyncMessageRequest) Reset() {
	*x = SendAsyncMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAsyncMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAsyncMessageRequest) ProtoMessage() {}

func (x *SendAsyncMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAsyncMessageRequest.ProtoReflect.Descriptor instead.
func (*SendAsyncMessageRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{90}
}

func (x *SendAsyncMessageRequest) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *SendAsyncMessageRequest) GetTargetHandler() string {
	if x != nil {
		return x.TargetHandler
	}
	return ""
}

func (x *SendAsyncMessageRequest) GetValidityStart() *v1.Slot {
	if x != nil {
		return x.ValidityStart
	}
	return nil
}

func (x *SendAsyncMessageRequest) GetValidityEnd() *v1.Slot {
	if x != nil {
		return x.ValidityEnd
	}
	return nil
}

func (x *SendAsyncMessageRequest) GetExecutionGas() uint64 {
	if x != nil {
		return x.ExecutionGas
	}
	return 0
}

func (x *SendAsyncMessageRequest) GetRawFee() uint64 {
	if x != nil {
		return x.RawFee
	}
	return 0
}

func (x *SendAsyncMessageRequest) GetRawCoins() uint64 {
	if x != nil {
		return x.RawCoins
	}
	return 0
}

func (x *SendAsyncMessageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendAsyncMessageRequest) GetFilter() *SendAsyncMessageFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// Send async message result
type SendAsyncMessageResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendAsyncMessageResult) Reset() {
	*x = SendAsyncMessageResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendAsyncMessageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAsyncMessageResult) ProtoMessage() {}

func (x *SendAsyncMessageResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAsyncMessageResult.ProtoReflect.Descriptor instead.
func (*SendAsyncMessageResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{91}
}

// Get origin operation id request
type GetOriginOperationIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOriginOperationIdRequest) Reset() {
	*x = GetOriginOperationIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOriginOperationIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginOperationIdRequest) ProtoMessage() {}

func (x *GetOriginOperationIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginOperationIdRequest.ProtoReflect.Descriptor instead.
func (*GetOriginOperationIdRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{92}
}

// Get origin operation id result
type GetOriginOperationIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3,oneof" json:"operation_id,omitempty"`
}

func (x *GetOriginOperationIdResult) Reset() {
	*x = GetOriginOperationIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOriginOperationIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginOperationIdResult) ProtoMessage() {}

func (x *GetOriginOperationIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginOperationIdResult.ProtoReflect.Descriptor instead.
func (*GetOriginOperationIdResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{93}
}

func (x *GetOriginOperationIdResult) GetOperationId() *wrapperspb.StringValue {
	if x != nil {
		return x.OperationId
	}
	return nil
}

// Get native time request
type GetNativeTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNativeTimeRequest) Reset() {
	*x = GetNativeTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNativeTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNativeTimeRequest) ProtoMessage() {}

func (x *GetNativeTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNativeTimeRequest.ProtoReflect.Descriptor instead.
func (*GetNativeTimeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{94}
}

// Get native time result
type GetNativeTimeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Native time
	Time *v1.NativeTime `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *GetNativeTimeResult) Reset() {
	*x = GetNativeTimeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNativeTimeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNativeTimeResult) ProtoMessage() {}

func (x *GetNativeTimeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNativeTimeResult.ProtoReflect.Descriptor instead.
func (*GetNativeTimeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{95}
}

func (x *GetNativeTimeResult) GetTime() *v1.NativeTime {
	if x != nil {
		return x.Time
	}
	return nil
}

// Get current slot request
type GetCurrentSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCurrentSlotRequest) Reset() {
	*x = GetCurrentSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSlotRequest) ProtoMessage() {}

func (x *GetCurrentSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSlotRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentSlotRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{96}
}

// Get current slot result
type GetCurrentSlotResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Current slot
	Slot *v1.Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *GetCurrentSlotResult) Reset() {
	*x = GetCurrentSlotResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentSlotResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSlotResult) ProtoMessage() {}

func (x *GetCurrentSlotResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSlotResult.ProtoReflect.Descriptor instead.
func (*GetCurrentSlotResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{97}
}

func (x *GetCurrentSlotResult) GetSlot() *v1.Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

// Set bytecode request
type SetBytecodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bytecode
	Bytecode []byte `protobuf:"bytes,1,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
	// Address to set bytecode for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *SetBytecodeRequest) Reset() {
	*x = SetBytecodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBytecodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBytecodeRequest) ProtoMessage() {}

func (x *SetBytecodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBytecodeRequest.ProtoReflect.Descriptor instead.
func (*SetBytecodeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{98}
}

func (x *SetBytecodeRequest) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

func (x *SetBytecodeRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Set bytecode result
type SetBytecodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetBytecodeResult) Reset() {
	*x = SetBytecodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBytecodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBytecodeResult) ProtoMessage() {}

func (x *SetBytecodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBytecodeResult.ProtoReflect.Descriptor instead.
func (*SetBytecodeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{99}
}

// Get bytecode request
type GetBytecodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to get bytecode for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *GetBytecodeRequest) Reset() {
	*x = GetBytecodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBytecodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBytecodeRequest) ProtoMessage() {}

func (x *GetBytecodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBytecodeRequest.ProtoReflect.Descriptor instead.
func (*GetBytecodeRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{100}
}

func (x *GetBytecodeRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Get bytecode result
type GetBytecodeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bytecode
	Bytecode []byte `protobuf:"bytes,1,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
}

func (x *GetBytecodeResult) Reset() {
	*x = GetBytecodeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBytecodeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBytecodeResult) ProtoMessage() {}

func (x *GetBytecodeResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBytecodeResult.ProtoReflect.Descriptor instead.
func (*GetBytecodeResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{101}
}

func (x *GetBytecodeResult) GetBytecode() []byte {
	if x != nil {
		return x.Bytecode
	}
	return nil
}

// Caller has write access request
type CallerHasWriteAccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CallerHasWriteAccessRequest) Reset() {
	*x = CallerHasWriteAccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallerHasWriteAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallerHasWriteAccessRequest) ProtoMessage() {}

func (x *CallerHasWriteAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallerHasWriteAccessRequest.ProtoReflect.Descriptor instead.
func (*CallerHasWriteAccessRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{102}
}

// Caller has write access result
type CallerHasWriteAccessResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Caller has write access
	HasWriteAccess bool `protobuf:"varint,1,opt,name=has_write_access,json=hasWriteAccess,proto3" json:"has_write_access,omitempty"`
}

func (x *CallerHasWriteAccessResult) Reset() {
	*x = CallerHasWriteAccessResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallerHasWriteAccessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallerHasWriteAccessResult) ProtoMessage() {}

func (x *CallerHasWriteAccessResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallerHasWriteAccessResult.ProtoReflect.Descriptor instead.
func (*CallerHasWriteAccessResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{103}
}

func (x *CallerHasWriteAccessResult) GetHasWriteAccess() bool {
	if x != nil {
		return x.HasWriteAccess
	}
	return false
}

// Hash sha256 request
type HashSha256Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// data
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *HashSha256Request) Reset() {
	*x = HashSha256Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashSha256Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashSha256Request) ProtoMessage() {}

func (x *HashSha256Request) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashSha256Request.ProtoReflect.Descriptor instead.
func (*HashSha256Request) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{104}
}

func (x *HashSha256Request) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Hash sha256 result
type HashSha256Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hash
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *HashSha256Result) Reset() {
	*x = HashSha256Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashSha256Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashSha256Result) ProtoMessage() {}

func (x *HashSha256Result) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashSha256Result.ProtoReflect.Descriptor instead.
func (*HashSha256Result) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{105}
}

func (x *HashSha256Result) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// Get op data request
type GetOpDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetOpDataRequest) Reset() {
	*x = GetOpDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpDataRequest) ProtoMessage() {}

func (x *GetOpDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpDataRequest.ProtoReflect.Descriptor instead.
func (*GetOpDataRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{106}
}

func (x *GetOpDataRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// Get op data result
type GetOpDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetOpDataResult) Reset() {
	*x = GetOpDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpDataResult) ProtoMessage() {}

func (x *GetOpDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpDataResult.ProtoReflect.Descriptor instead.
func (*GetOpDataResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{107}
}

func (x *GetOpDataResult) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Op entry exists request
type OpEntryExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// key
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *OpEntryExistsRequest) Reset() {
	*x = OpEntryExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpEntryExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpEntryExistsRequest) ProtoMessage() {}

func (x *OpEntryExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpEntryExistsRequest.ProtoReflect.Descriptor instead.
func (*OpEntryExistsRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{108}
}

func (x *OpEntryExistsRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// Op entry exists result
type OpEntryExistsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// has key
	HasKey bool `protobuf:"varint,1,opt,name=has_key,json=hasKey,proto3" json:"has_key,omitempty"`
}

func (x *OpEntryExistsResult) Reset() {
	*x = OpEntryExistsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpEntryExistsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpEntryExistsResult) ProtoMessage() {}

func (x *OpEntryExistsResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpEntryExistsResult.ProtoReflect.Descriptor instead.
func (*OpEntryExistsResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{109}
}

func (x *OpEntryExistsResult) GetHasKey() bool {
	if x != nil {
		return x.HasKey
	}
	return false
}

// Get op keys request
type GetOpKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// keys prefix
	Prefix []byte `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *GetOpKeysRequest) Reset() {
	*x = GetOpKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpKeysRequest) ProtoMessage() {}

func (x *GetOpKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpKeysRequest.ProtoReflect.Descriptor instead.
func (*GetOpKeysRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{110}
}

func (x *GetOpKeysRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

// Get op keys result
type GetOpKeysResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// keys
	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetOpKeysResult) Reset() {
	*x = GetOpKeysResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpKeysResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpKeysResult) ProtoMessage() {}

func (x *GetOpKeysResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpKeysResult.ProtoReflect.Descriptor instead.
func (*GetOpKeysResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{111}
}

func (x *GetOpKeysResult) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

// Get remaining gas request
type GetRemainingGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRemainingGasRequest) Reset() {
	*x = GetRemainingGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemainingGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemainingGasRequest) ProtoMessage() {}

func (x *GetRemainingGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemainingGasRequest.ProtoReflect.Descriptor instead.
func (*GetRemainingGasRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{112}
}

// Get remaining gas result
type GetRemainingGasResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// remaining gas
	RemainingGas uint64 `protobuf:"varint,1,opt,name=remaining_gas,json=remainingGas,proto3" json:"remaining_gas,omitempty"`
}

func (x *GetRemainingGasResult) Reset() {
	*x = GetRemainingGasResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRemainingGasResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemainingGasResult) ProtoMessage() {}

func (x *GetRemainingGasResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemainingGasResult.ProtoReflect.Descriptor instead.
func (*GetRemainingGasResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{113}
}

func (x *GetRemainingGasResult) GetRemainingGas() uint64 {
	if x != nil {
		return x.RemainingGas
	}
	return 0
}

// Get balance request
type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to get balance for, if none, use current address
	Address *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{114}
}

func (x *GetBalanceRequest) GetAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.Address
	}
	return nil
}

// Get balance result
type GetBalanceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// balance
	Balance *v1.NativeAmount `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetBalanceResult) Reset() {
	*x = GetBalanceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResult) ProtoMessage() {}

func (x *GetBalanceResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResult.ProtoReflect.Descriptor instead.
func (*GetBalanceResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{115}
}

func (x *GetBalanceResult) GetBalance() *v1.NativeAmount {
	if x != nil {
		return x.Balance
	}
	return nil
}

// Get call coins request
type GetCallCoinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCallCoinsRequest) Reset() {
	*x = GetCallCoinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallCoinsRequest) ProtoMessage() {}

func (x *GetCallCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallCoinsRequest.ProtoReflect.Descriptor instead.
func (*GetCallCoinsRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{116}
}

// Get call coins result
type GetCallCoinsResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// coins
	Coins *v1.NativeAmount `protobuf:"bytes,1,opt,name=coins,proto3" json:"coins,omitempty"`
}

func (x *GetCallCoinsResult) Reset() {
	*x = GetCallCoinsResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallCoinsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallCoinsResult) ProtoMessage() {}

func (x *GetCallCoinsResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallCoinsResult.ProtoReflect.Descriptor instead.
func (*GetCallCoinsResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{117}
}

func (x *GetCallCoinsResult) GetCoins() *v1.NativeAmount {
	if x != nil {
		return x.Coins
	}
	return nil
}

// Get the version of the address request
type GetAddressVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressVersionRequest) Reset() {
	*x = GetAddressVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressVersionRequest) ProtoMessage() {}

func (x *GetAddressVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressVersionRequest.ProtoReflect.Descriptor instead.
func (*GetAddressVersionRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{118}
}

func (x *GetAddressVersionRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Get the version of the address result
type GetAddressVersionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetAddressVersionResult) Reset() {
	*x = GetAddressVersionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressVersionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressVersionResult) ProtoMessage() {}

func (x *GetAddressVersionResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressVersionResult.ProtoReflect.Descriptor instead.
func (*GetAddressVersionResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{119}
}

func (x *GetAddressVersionResult) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// Get the category of the address request
type GetAddressCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressCategoryRequest) Reset() {
	*x = GetAddressCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressCategoryRequest) ProtoMessage() {}

func (x *GetAddressCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetAddressCategoryRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{120}
}

func (x *GetAddressCategoryRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Get the category of the address result
type GetAddressCategoryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category v1.AddressCategory `protobuf:"varint,1,opt,name=category,proto3,enum=massa.model.v1.AddressCategory" json:"category,omitempty"`
}

func (x *GetAddressCategoryResult) Reset() {
	*x = GetAddressCategoryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressCategoryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressCategoryResult) ProtoMessage() {}

func (x *GetAddressCategoryResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressCategoryResult.ProtoReflect.Descriptor instead.
func (*GetAddressCategoryResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{121}
}

func (x *GetAddressCategoryResult) GetCategory() v1.AddressCategory {
	if x != nil {
		return x.Category
	}
	return v1.AddressCategory(0)
}

// Get the version of the public key request
type GetPubKeyVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *GetPubKeyVersionRequest) Reset() {
	*x = GetPubKeyVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPubKeyVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubKeyVersionRequest) ProtoMessage() {}

func (x *GetPubKeyVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubKeyVersionRequest.ProtoReflect.Descriptor instead.
func (*GetPubKeyVersionRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{122}
}

func (x *GetPubKeyVersionRequest) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

// Get the version of the public key result
type GetPubKeyVersionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetPubKeyVersionResult) Reset() {
	*x = GetPubKeyVersionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPubKeyVersionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPubKeyVersionResult) ProtoMessage() {}

func (x *GetPubKeyVersionResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPubKeyVersionResult.ProtoReflect.Descriptor instead.
func (*GetPubKeyVersionResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{123}
}

func (x *GetPubKeyVersionResult) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// Get the version of the signature request
type GetSignatureVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GetSignatureVersionRequest) Reset() {
	*x = GetSignatureVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignatureVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignatureVersionRequest) ProtoMessage() {}

func (x *GetSignatureVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignatureVersionRequest.ProtoReflect.Descriptor instead.
func (*GetSignatureVersionRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{124}
}

func (x *GetSignatureVersionRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// Get the version of the signature result
type GetSignatureVersionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version uint64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetSignatureVersionResult) Reset() {
	*x = GetSignatureVersionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignatureVersionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignatureVersionResult) ProtoMessage() {}

func (x *GetSignatureVersionResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignatureVersionResult.ProtoReflect.Descriptor instead.
func (*GetSignatureVersionResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{125}
}

func (x *GetSignatureVersionResult) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// bytes to base58 request
type BytesToBase58CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *BytesToBase58CheckRequest) Reset() {
	*x = BytesToBase58CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesToBase58CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesToBase58CheckRequest) ProtoMessage() {}

func (x *BytesToBase58CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesToBase58CheckRequest.ProtoReflect.Descriptor instead.
func (*BytesToBase58CheckRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{126}
}

func (x *BytesToBase58CheckRequest) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// bytes to base58 result
type BytesToBase58CheckResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base58Check string `protobuf:"bytes,1,opt,name=base58_check,json=base58Check,proto3" json:"base58_check,omitempty"`
}

func (x *BytesToBase58CheckResult) Reset() {
	*x = BytesToBase58CheckResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BytesToBase58CheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BytesToBase58CheckResult) ProtoMessage() {}

func (x *BytesToBase58CheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BytesToBase58CheckResult.ProtoReflect.Descriptor instead.
func (*BytesToBase58CheckResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{127}
}

func (x *BytesToBase58CheckResult) GetBase58Check() string {
	if x != nil {
		return x.Base58Check
	}
	return ""
}

// base58 to bytes request
type Base58CheckToBytesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base58Check string `protobuf:"bytes,1,opt,name=base58_check,json=base58Check,proto3" json:"base58_check,omitempty"`
}

func (x *Base58CheckToBytesRequest) Reset() {
	*x = Base58CheckToBytesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base58CheckToBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base58CheckToBytesRequest) ProtoMessage() {}

func (x *Base58CheckToBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base58CheckToBytesRequest.ProtoReflect.Descriptor instead.
func (*Base58CheckToBytesRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{128}
}

func (x *Base58CheckToBytesRequest) GetBase58Check() string {
	if x != nil {
		return x.Base58Check
	}
	return ""
}

// base58 to bytes result
type Base58CheckToBytesResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *Base58CheckToBytesResult) Reset() {
	*x = Base58CheckToBytesResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base58CheckToBytesResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base58CheckToBytesResult) ProtoMessage() {}

func (x *Base58CheckToBytesResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base58CheckToBytesResult.ProtoReflect.Descriptor instead.
func (*Base58CheckToBytesResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{129}
}

func (x *Base58CheckToBytesResult) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// Chain id request
type ChainIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChainIdRequest) Reset() {
	*x = ChainIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainIdRequest) ProtoMessage() {}

func (x *ChainIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainIdRequest.ProtoReflect.Descriptor instead.
func (*ChainIdRequest) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{130}
}

// Chain id result
type ChainIdResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ChainIdResult) Reset() {
	*x = ChainIdResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_abi_v1_abi_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainIdResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainIdResult) ProtoMessage() {}

func (x *ChainIdResult) ProtoReflect() protoreflect.Message {
	mi := &file_massa_abi_v1_abi_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainIdResult.ProtoReflect.Descriptor instead.
func (*ChainIdResult) Descriptor() ([]byte, []int) {
	return file_massa_abi_v1_abi_proto_rawDescGZIP(), []int{131}
}

func (x *ChainIdResult) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_massa_abi_v1_abi_proto protoreflect.FileDescriptor

var file_massa_abi_v1_abi_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x61, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x62, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62,
	0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x73, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x12, 0x3b, 0x0a, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x72, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x72, 0x67, 0x22, 0x2c, 0x0a, 0x16, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x15, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x53, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x22, 0xcb, 0x2f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x5e, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x15, 0x61, 0x64, 0x64, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x65, 0x0a, 0x1b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52,
	0x17, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x68, 0x0a, 0x1c, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x54, 0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x18, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x6f, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x68, 0x0a, 0x1c,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x18, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x54, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6e, 0x0a, 0x1e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x68, 0x61, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x48, 0x61, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x48, 0x61, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x54, 0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x64, 0x0a, 0x1a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x73, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x6e, 0x0a, 0x1e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x5f,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41,
	0x64, 0x64, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x64, 0x64,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x78, 0x0a, 0x22, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x76, 0x5f,
	0x72, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x29, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x64, 0x69,
	0x76, 0x5f, 0x72, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x69, 0x76, 0x52, 0x65,
	0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x23, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x25, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x6d, 0x75, 0x6c, 0x5f,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x53,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x4d, 0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x20, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x4d, 0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6e, 0x0a, 0x1e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x75, 0x62, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x1a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x75, 0x62, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5a, 0x0a, 0x16,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6a, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x64, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f,
	0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x16, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52,
	0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73,
	0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58,
	0x0a, 0x16, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x64, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x68, 0x0a, 0x1c, 0x64, 0x69, 0x76, 0x5f,
	0x72, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x18, 0x64, 0x69, 0x76, 0x52, 0x65, 0x6d,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x58, 0x0a, 0x16, 0x64, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5a, 0x0a, 0x16,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x57, 0x0a, 0x15, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x67, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x18, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x64, 0x0a, 0x1a, 0x67, 0x65,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x4e, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10,
	0x67, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x51, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x11, 0x67, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x12, 0x67,
	0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x5b, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x14, 0x67, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c,
	0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x73, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74,
	0x44, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f, 0x0a, 0x13,
	0x67, 0x65, 0x74, 0x5f, 0x64, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74,
	0x44, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a,
	0x16, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x6f,
	0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x70, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x4f, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x6e, 0x0a, 0x1e, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x64, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x17, 0x67, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x62, 0x0a, 0x1a, 0x67, 0x65, 0x74,
	0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x16, 0x67, 0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5e, 0x0a,
	0x18, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6a, 0x0a,
	0x1c, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x19,
	0x67, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x68, 0x61, 0x73,
	0x68, 0x5f, 0x62, 0x6c, 0x61, 0x6b, 0x65, 0x33, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x6c, 0x61, 0x6b, 0x65, 0x33, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10, 0x68, 0x61, 0x73, 0x68, 0x42, 0x6c, 0x61,
	0x6b, 0x65, 0x33, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x68, 0x61, 0x73,
	0x68, 0x5f, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10, 0x68, 0x61, 0x73, 0x68, 0x53, 0x68, 0x61,
	0x32, 0x35, 0x36, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x58, 0x0a, 0x16, 0x6f, 0x70, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13,
	0x6f, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6b, 0x65, 0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x63,
	0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0f,
	0x6b, 0x65, 0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x60, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x74, 0x0a, 0x20, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6e, 0x0a, 0x1e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x7b, 0x0a, 0x23, 0x73, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x5f, 0x64, 0x69, 0x76, 0x5f, 0x72, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x1e, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x69, 0x76, 0x52,
	0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x71, 0x0a, 0x1f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x6d,
	0x75, 0x6c, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x61,
	0x6c, 0x61, 0x72, 0x4d, 0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x4d, 0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x61, 0x0a, 0x19, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x73, 0x65,
	0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x74, 0x42,
	0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f, 0x0a,
	0x13, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65,
	0x74, 0x44, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5e,
	0x0a, 0x18, 0x73, 0x75, 0x62, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x15, 0x73, 0x75, 0x62, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x57,
	0x0a, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x54, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x61, 0x66,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x12, 0x75, 0x6e, 0x73, 0x61, 0x66,
	0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a,
	0x15, 0x65, 0x76, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x69, 0x67, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x6d, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x65, 0x76, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73,
	0x69, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x78, 0x0a, 0x22, 0x65, 0x76, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x6d,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x65, 0x76,
	0x6d, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x7e, 0x0a, 0x24, 0x65,
	0x76, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x6d, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x65, 0x76, 0x6d, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x15, 0x69,
	0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x6f, 0x61, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x45, 0x6f, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x69, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6f, 0x61, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x73,
	0x22, 0x70, 0x0a, 0x0b, 0x41, 0x62, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x73, 0x12, 0x2b, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x72, 0x65,
	0x73, 0x70, 0x22, 0x5a, 0x0a, 0x1b, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x09, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x22, 0x47,
	0x0a, 0x1a, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x1d, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x22, 0x67, 0x0a, 0x1c, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x30, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x22, 0x2f, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x22, 0x2e, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x22, 0x2b, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22,
	0x53, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x74,
	0x6f, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x22, 0x34, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x16, 0x41,
	0x64, 0x64, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x31, 0x12, 0x36, 0x0a,
	0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x32, 0x22, 0x47, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e,
	0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x7e,
	0x0a, 0x16, 0x53, 0x75, 0x62, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x55,
	0x0a, 0x15, 0x53, 0x75, 0x62, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x76, 0x0a, 0x1c, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x4d,
	0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x55, 0x0a,
	0x1b, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x4d, 0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x22, 0x75, 0x0a, 0x1f, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x69,
	0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x22, 0x96, 0x01, 0x0a, 0x1e,
	0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38,
	0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08,
	0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x19, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x07,
	0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x64, 0x69, 0x76,
	0x69, 0x73, 0x6f, 0x72, 0x22, 0x72, 0x0a, 0x18, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x09,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x7f, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4a, 0x0a, 0x1a, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x7f, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x53, 0x75, 0x62, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04,
	0x6c, 0x65, 0x66, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x58, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x53, 0x75, 0x62, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x75, 0x0a, 0x21, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x4d, 0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x65, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x58, 0x0a, 0x20, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x4d, 0x75, 0x6c, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x22, 0x78, 0x0a, 0x24, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x23,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x44, 0x69, 0x76,
	0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64,
	0x12, 0x34, 0x0a, 0x07, 0x64, 0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64,
	0x69, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x22, 0x75, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x44, 0x69, 0x76, 0x52, 0x65, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x7c, 0x0a,
	0x18, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x65, 0x66,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x53, 0x0a, 0x17, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x41, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65,
	0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x66,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x57, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x53, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x22, 0x32, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x55, 0x0a, 0x19, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x65, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x26, 0x0a, 0x10, 0x4b, 0x65, 0x63, 0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x0f, 0x4b, 0x65, 0x63,
	0x63, 0x61, 0x6b, 0x32, 0x35, 0x36, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x22, 0x5a, 0x0a, 0x13, 0x45, 0x76, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x12,
	0x45, 0x76, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x22, 0x39, 0x0a, 0x1e, 0x45, 0x76, 0x6d, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x39,
	0x0a, 0x1d, 0x45, 0x76, 0x6d, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x48, 0x0a, 0x20, 0x45, 0x76, 0x6d,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x73, 0x69, 0x67, 0x22, 0x3a, 0x0a, 0x1f, 0x45, 0x76, 0x6d, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22,
	0x2f, 0x0a, 0x13, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6f, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x2b, 0x0a, 0x12, 0x49, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6f, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x65, 0x6f, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6f, 0x61, 0x22, 0x27, 0x0a,
	0x11, 0x48, 0x61, 0x73, 0x68, 0x42, 0x6c, 0x61, 0x6b, 0x65, 0x33, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x26, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x68, 0x42, 0x6c,
	0x61, 0x6b, 0x65, 0x33, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x73,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x73, 0x4b, 0x65, 0x79, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x44, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x44, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64,
	0x44, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x15, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x71, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x71, 0x0a, 0x14, 0x44, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a,
	0x13, 0x44, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x22, 0x33, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x33, 0x0a, 0x17,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x32, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x75, 0x6d,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x61, 0x66, 0x65, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x7b,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x8a, 0x03, 0x0a, 0x17,
	0x53, 0x65, 0x6e, 0x64, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0b,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x77, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x61, 0x77, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x77,
	0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x61,
	0x77, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x73,
	0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x73, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x44, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x45,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x22, 0x79, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x2f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x48, 0x61, 0x73, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x46, 0x0a, 0x1a, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x48, 0x61, 0x73, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x68, 0x61, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x68, 0x53,
	0x68, 0x61, 0x32, 0x35, 0x36, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x26, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x68, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x24, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x27,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x4f, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x2e, 0x0a, 0x13, 0x4f, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x73, 0x4b, 0x65,
	0x79, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x25, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x73, 0x22, 0x5c, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36,
	0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x33, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x57, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a,
	0x19, 0x42, 0x79, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x3d, 0x0a, 0x18, 0x42, 0x79, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x35,
	0x38, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22,
	0x3e, 0x0a, 0x19, 0x42, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22,
	0x30, 0x0a, 0x18, 0x42, 0x61, 0x73, 0x65, 0x35, 0x38, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1f, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x42, 0x91, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x62, 0x69, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x61, 0x74, 0x74, 0x73, 0x2f, 0x67,
	0x6f, 0x2d, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2f, 0x61, 0x62, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xa2, 0x02,
	0x04, 0x4d, 0x41, 0x42, 0x49, 0xaa, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x2e, 0x4d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x41, 0x62, 0x69, 0x2e, 0x56, 0x31, 0xba, 0x02, 0x04, 0x4d, 0x41, 0x42, 0x49, 0xca,
	0x02, 0x10, 0x43, 0x6f, 0x6d, 0x5c, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x5c, 0x41, 0x62, 0x69, 0x5c,
	0x56, 0x31, 0xea, 0x02, 0x13, 0x43, 0x6f, 0x6d, 0x3a, 0x3a, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x3a,
	0x3a, 0x41, 0x62, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_massa_abi_v1_abi_proto_rawDescOnce sync.Once
	file_massa_abi_v1_abi_proto_rawDescData = file_massa_abi_v1_abi_proto_rawDesc
)

func file_massa_abi_v1_abi_proto_rawDescGZIP() []byte {
	file_massa_abi_v1_abi_proto_rawDescOnce.Do(func() {
		file_massa_abi_v1_abi_proto_rawDescData = protoimpl.X.CompressGZIP(file_massa_abi_v1_abi_proto_rawDescData)
	})
	return file_massa_abi_v1_abi_proto_rawDescData
}

var file_massa_abi_v1_abi_proto_msgTypes = make([]protoimpl.MessageInfo, 132)
var file_massa_abi_v1_abi_proto_goTypes = []interface{}{
	(*Error)(nil),                                // 0: massa.abi.v1.Error
	(*CreateScRequest)(nil),                      // 1: massa.abi.v1.CreateScRequest
	(*CreateScResult)(nil),                       // 2: massa.abi.v1.CreateScResult
	(*CallRequest)(nil),                          // 3: massa.abi.v1.CallRequest
	(*CallResponse)(nil),                         // 4: massa.abi.v1.CallResponse
	(*LocalExecutionRequest)(nil),                // 5: massa.abi.v1.LocalExecutionRequest
	(*LocalExecutionResponse)(nil),               // 6: massa.abi.v1.LocalExecutionResponse
	(*GenerateEventRequest)(nil),                 // 7: massa.abi.v1.GenerateEventRequest
	(*GenerateEventResult)(nil),                  // 8: massa.abi.v1.GenerateEventResult
	(*TransferCoinsRequest)(nil),                 // 9: massa.abi.v1.TransferCoinsRequest
	(*TransferCoinsResult)(nil),                  // 10: massa.abi.v1.TransferCoinsResult
	(*FunctionExistsRequest)(nil),                // 11: massa.abi.v1.FunctionExistsRequest
	(*FunctionExistsResult)(nil),                 // 12: massa.abi.v1.FunctionExistsResult
	(*RespResult)(nil),                           // 13: massa.abi.v1.RespResult
	(*AbiResponse)(nil),                          // 14: massa.abi.v1.AbiResponse
	(*NativeAmountToStringRequest)(nil),          // 15: massa.abi.v1.NativeAmountToStringRequest
	(*NativeAmountToStringResult)(nil),           // 16: massa.abi.v1.NativeAmountToStringResult
	(*NativeAmountFromStringRequest)(nil),        // 17: massa.abi.v1.NativeAmountFromStringRequest
	(*NativeAmountFromStringResult)(nil),         // 18: massa.abi.v1.NativeAmountFromStringResult
	(*CheckAddressRequest)(nil),                  // 19: massa.abi.v1.CheckAddressRequest
	(*CheckAddressResult)(nil),                   // 20: massa.abi.v1.CheckAddressResult
	(*CheckPubKeyRequest)(nil),                   // 21: massa.abi.v1.CheckPubKeyRequest
	(*CheckPubKeyResult)(nil),                    // 22: massa.abi.v1.CheckPubKeyResult
	(*CheckSigRequest)(nil),                      // 23: massa.abi.v1.CheckSigRequest
	(*CheckSigResult)(nil),                       // 24: massa.abi.v1.CheckSigResult
	(*CheckNativeAmountRequest)(nil),             // 25: massa.abi.v1.CheckNativeAmountRequest
	(*CheckNativeAmountResult)(nil),              // 26: massa.abi.v1.CheckNativeAmountResult
	(*AddNativeAmountRequest)(nil),               // 27: massa.abi.v1.AddNativeAmountRequest
	(*AddNativeAmountResult)(nil),                // 28: massa.abi.v1.AddNativeAmountResult
	(*SubNativeAmountRequest)(nil),               // 29: massa.abi.v1.SubNativeAmountRequest
	(*SubNativeAmountResult)(nil),                // 30: massa.abi.v1.SubNativeAmountResult
	(*ScalarMulNativeAmountRequest)(nil),         // 31: massa.abi.v1.ScalarMulNativeAmountRequest
	(*ScalarMulNativeAmountResult)(nil),          // 32: massa.abi.v1.ScalarMulNativeAmountResult
	(*ScalarDivRemNativeAmountRequest)(nil),      // 33: massa.abi.v1.ScalarDivRemNativeAmountRequest
	(*ScalarDivRemNativeAmountResult)(nil),       // 34: massa.abi.v1.ScalarDivRemNativeAmountResult
	(*DivRemNativeAmountRequest)(nil),            // 35: massa.abi.v1.DivRemNativeAmountRequest
	(*DivRemNativeAmountResult)(nil),             // 36: massa.abi.v1.DivRemNativeAmountResult
	(*CheckedAddNativeTimeRequest)(nil),          // 37: massa.abi.v1.CheckedAddNativeTimeRequest
	(*CheckedAddNativeTimeResult)(nil),           // 38: massa.abi.v1.CheckedAddNativeTimeResult
	(*CheckedSubNativeTimeRequest)(nil),          // 39: massa.abi.v1.CheckedSubNativeTimeRequest
	(*CheckedSubNativeTimeResult)(nil),           // 40: massa.abi.v1.CheckedSubNativeTimeResult
	(*CheckedScalarMulNativeTimeRequest)(nil),    // 41: massa.abi.v1.CheckedScalarMulNativeTimeRequest
	(*CheckedScalarMulNativeTimeResult)(nil),     // 42: massa.abi.v1.CheckedScalarMulNativeTimeResult
	(*CheckedScalarDivRemNativeTimeRequest)(nil), // 43: massa.abi.v1.CheckedScalarDivRemNativeTimeRequest
	(*CheckedScalarDivRemNativeTimeResult)(nil),  // 44: massa.abi.v1.CheckedScalarDivRemNativeTimeResult
	(*CheckedDivRemNativeTimeRequest)(nil),       // 45: massa.abi.v1.CheckedDivRemNativeTimeRequest
	(*CheckedDivRemNativeTimeResult)(nil),        // 46: massa.abi.v1.CheckedDivRemNativeTimeResult
	(*CompareNativeTimeRequest)(nil),             // 47: massa.abi.v1.CompareNativeTimeRequest
	(*CompareNativeTimeResult)(nil),              // 48: massa.abi.v1.CompareNativeTimeResult
	(*CompareAddressRequest)(nil),                // 49: massa.abi.v1.CompareAddressRequest
	(*CompareAddressResult)(nil),                 // 50: massa.abi.v1.CompareAddressResult
	(*ComparePubKeyRequest)(nil),                 // 51: massa.abi.v1.ComparePubKeyRequest
	(*ComparePubKeyResult)(nil),                  // 52: massa.abi.v1.ComparePubKeyResult
	(*VerifySigRequest)(nil),                     // 53: massa.abi.v1.VerifySigRequest
	(*VerifySigResult)(nil),                      // 54: massa.abi.v1.VerifySigResult
	(*CompareNativeAmountRequest)(nil),           // 55: massa.abi.v1.CompareNativeAmountRequest
	(*CompareNativeAmountResult)(nil),            // 56: massa.abi.v1.CompareNativeAmountResult
	(*Keccak256Request)(nil),                     // 57: massa.abi.v1.Keccak256Request
	(*Keccak256Result)(nil),                      // 58: massa.abi.v1.Keccak256Result
	(*EvmVerifySigRequest)(nil),                  // 59: massa.abi.v1.EvmVerifySigRequest
	(*EvmVerifySigResult)(nil),                   // 60: massa.abi.v1.EvmVerifySigResult
	(*EvmGetAddressFromPubkeyRequest)(nil),       // 61: massa.abi.v1.EvmGetAddressFromPubkeyRequest
	(*EvmGetAddressFromPubkeyResult)(nil),        // 62: massa.abi.v1.EvmGetAddressFromPubkeyResult
	(*EvmGetPubkeyFromSignatureRequest)(nil),     // 63: massa.abi.v1.EvmGetPubkeyFromSignatureRequest
	(*EvmGetPubkeyFromSignatureResult)(nil),      // 64: massa.abi.v1.EvmGetPubkeyFromSignatureResult
	(*IsAddressEoaRequest)(nil),                  // 65: massa.abi.v1.IsAddressEoaRequest
	(*IsAddressEoaResult)(nil),                   // 66: massa.abi.v1.IsAddressEoaResult
	(*HashBlake3Request)(nil),                    // 67: massa.abi.v1.HashBlake3Request
	(*HashBlake3Result)(nil),                     // 68: massa.abi.v1.HashBlake3Result
	(*GetDsKeysRequest)(nil),                     // 69: massa.abi.v1.GetDsKeysRequest
	(*GetDsKeysResult)(nil),                      // 70: massa.abi.v1.GetDsKeysResult
	(*SetDsValueRequest)(nil),                    // 71: massa.abi.v1.SetDsValueRequest
	(*SetDsValueResult)(nil),                     // 72: massa.abi.v1.SetDsValueResult
	(*AppendDsValueRequest)(nil),                 // 73: massa.abi.v1.AppendDsValueRequest
	(*AppendDsValueResult)(nil),                  // 74: massa.abi.v1.AppendDsValueResult
	(*GetDsValueRequest)(nil),                    // 75: massa.abi.v1.GetDsValueRequest
	(*GetDsValueResult)(nil),                     // 76: massa.abi.v1.GetDsValueResult
	(*DeleteDsEntryRequest)(nil),                 // 77: massa.abi.v1.DeleteDsEntryRequest
	(*DeleteDsEntryResult)(nil),                  // 78: massa.abi.v1.DeleteDsEntryResult
	(*DsEntryExistsRequest)(nil),                 // 79: massa.abi.v1.DsEntryExistsRequest
	(*DsEntryExistsResult)(nil),                  // 80: massa.abi.v1.DsEntryExistsResult
	(*GetOwnedAddressesRequest)(nil),             // 81: massa.abi.v1.GetOwnedAddressesRequest
	(*GetOwnedAddressesResult)(nil),              // 82: massa.abi.v1.GetOwnedAddressesResult
	(*GetCallStackRequest)(nil),                  // 83: massa.abi.v1.GetCallStackRequest
	(*GetCallStackResult)(nil),                   // 84: massa.abi.v1.GetCallStackResult
	(*AddressFromPubKeyRequest)(nil),             // 85: massa.abi.v1.AddressFromPubKeyRequest
	(*AddressFromPubKeyResult)(nil),              // 86: massa.abi.v1.AddressFromPubKeyResult
	(*UnsafeRandomRequest)(nil),                  // 87: massa.abi.v1.UnsafeRandomRequest
	(*UnsafeRandomResult)(nil),                   // 88: massa.abi.v1.UnsafeRandomResult
	(*SendAsyncMessageFilter)(nil),               // 89: massa.abi.v1.SendAsyncMessageFilter
	(*SendAsyncMessageRequest)(nil),              // 90: massa.abi.v1.SendAsyncMessageRequest
	(*SendAsyncMessageResult)(nil),               // 91: massa.abi.v1.SendAsyncMessageResult
	(*GetOriginOperationIdRequest)(nil),          // 92: massa.abi.v1.GetOriginOperationIdRequest
	(*GetOriginOperationIdResult)(nil),           // 93: massa.abi.v1.GetOriginOperationIdResult
	(*GetNativeTimeRequest)(nil),                 // 94: massa.abi.v1.GetNativeTimeRequest
	(*GetNativeTimeResult)(nil),                  // 95: massa.abi.v1.GetNativeTimeResult
	(*GetCurrentSlotRequest)(nil),                // 96: massa.abi.v1.GetCurrentSlotRequest
	(*GetCurrentSlotResult)(nil),                 // 97: massa.abi.v1.GetCurrentSlotResult
	(*SetBytecodeRequest)(nil),                   // 98: massa.abi.v1.SetBytecodeRequest
	(*SetBytecodeResult)(nil),                    // 99: massa.abi.v1.SetBytecodeResult
	(*GetBytecodeRequest)(nil),                   // 100: massa.abi.v1.GetBytecodeRequest
	(*GetBytecodeResult)(nil),                    // 101: massa.abi.v1.GetBytecodeResult
	(*CallerHasWriteAccessRequest)(nil),          // 102: massa.abi.v1.CallerHasWriteAccessRequest
	(*CallerHasWriteAccessResult)(nil),           // 103: massa.abi.v1.CallerHasWriteAccessResult
	(*HashSha256Request)(nil),                    // 104: massa.abi.v1.HashSha256Request
	(*HashSha256Result)(nil),                     // 105: massa.abi.v1.HashSha256Result
	(*GetOpDataRequest)(nil),                     // 106: massa.abi.v1.GetOpDataRequest
	(*GetOpDataResult)(nil),                      // 107: massa.abi.v1.GetOpDataResult
	(*OpEntryExistsRequest)(nil),                 // 108: massa.abi.v1.OpEntryExistsRequest
	(*OpEntryExistsResult)(nil),                  // 109: massa.abi.v1.OpEntryExistsResult
	(*GetOpKeysRequest)(nil),                     // 110: massa.abi.v1.GetOpKeysRequest
	(*GetOpKeysResult)(nil),                      // 111: massa.abi.v1.GetOpKeysResult
	(*GetRemainingGasRequest)(nil),               // 112: massa.abi.v1.GetRemainingGasRequest
	(*GetRemainingGasResult)(nil),                // 113: massa.abi.v1.GetRemainingGasResult
	(*GetBalanceRequest)(nil),                    // 114: massa.abi.v1.GetBalanceRequest
	(*GetBalanceResult)(nil),                     // 115: massa.abi.v1.GetBalanceResult
	(*GetCallCoinsRequest)(nil),                  // 116: massa.abi.v1.GetCallCoinsRequest
	(*GetCallCoinsResult)(nil),                   // 117: massa.abi.v1.GetCallCoinsResult
	(*GetAddressVersionRequest)(nil),             // 118: massa.abi.v1.GetAddressVersionRequest
	(*GetAddressVersionResult)(nil),              // 119: massa.abi.v1.GetAddressVersionResult
	(*GetAddressCategoryRequest)(nil),            // 120: massa.abi.v1.GetAddressCategoryRequest
	(*GetAddressCategoryResult)(nil),             // 121: massa.abi.v1.GetAddressCategoryResult
	(*GetPubKeyVersionRequest)(nil),              // 122: massa.abi.v1.GetPubKeyVersionRequest
	(*GetPubKeyVersionResult)(nil),               // 123: massa.abi.v1.GetPubKeyVersionResult
	(*GetSignatureVersionRequest)(nil),           // 124: massa.abi.v1.GetSignatureVersionRequest
	(*GetSignatureVersionResult)(nil),            // 125: massa.abi.v1.GetSignatureVersionResult
	(*BytesToBase58CheckRequest)(nil),            // 126: massa.abi.v1.BytesToBase58CheckRequest
	(*BytesToBase58CheckResult)(nil),             // 127: massa.abi.v1.BytesToBase58CheckResult
	(*Base58CheckToBytesRequest)(nil),            // 128: massa.abi.v1.Base58CheckToBytesRequest
	(*Base58CheckToBytesResult)(nil),             // 129: massa.abi.v1.Base58CheckToBytesResult
	(*ChainIdRequest)(nil),                       // 130: massa.abi.v1.ChainIdRequest
	(*ChainIdResult)(nil),                        // 131: massa.abi.v1.ChainIdResult
	(*v1.NativeAmount)(nil),                      // 132: massa.model.v1.NativeAmount
	(*wrapperspb.StringValue)(nil),               // 133: google.protobuf.StringValue
	(*v1.NativeTime)(nil),                        // 134: massa.model.v1.NativeTime
	(v1.ComparisonResult)(0),                     // 135: massa.model.v1.ComparisonResult
	(*wrapperspb.BytesValue)(nil),                // 136: google.protobuf.BytesValue
	(*v1.Slot)(nil),                              // 137: massa.model.v1.Slot
	(v1.AddressCategory)(0),                      // 138: massa.model.v1.AddressCategory
}
var file_massa_abi_v1_abi_proto_depIdxs = []int32{
	132, // 0: massa.abi.v1.CallRequest.call_coins:type_name -> massa.model.v1.NativeAmount
	132, // 1: massa.abi.v1.TransferCoinsRequest.amount_to_transfer:type_name -> massa.model.v1.NativeAmount
	133, // 2: massa.abi.v1.TransferCoinsRequest.sender_address:type_name -> google.protobuf.StringValue
	28,  // 3: massa.abi.v1.RespResult.add_native_amount_result:type_name -> massa.abi.v1.AddNativeAmountResult
	86,  // 4: massa.abi.v1.RespResult.address_from_pub_key_result:type_name -> massa.abi.v1.AddressFromPubKeyResult
	74,  // 5: massa.abi.v1.RespResult.append_ds_value_result:type_name -> massa.abi.v1.AppendDsValueResult
	129, // 6: massa.abi.v1.RespResult.base58_check_to_bytes_result:type_name -> massa.abi.v1.Base58CheckToBytesResult
	127, // 7: massa.abi.v1.RespResult.bytes_to_base58_check_result:type_name -> massa.abi.v1.BytesToBase58CheckResult
	103, // 8: massa.abi.v1.RespResult.caller_has_write_access_result:type_name -> massa.abi.v1.CallerHasWriteAccessResult
	20,  // 9: massa.abi.v1.RespResult.check_address_result:type_name -> massa.abi.v1.CheckAddressResult
	26,  // 10: massa.abi.v1.RespResult.check_native_amount_result:type_name -> massa.abi.v1.CheckNativeAmountResult
	22,  // 11: massa.abi.v1.RespResult.check_pub_key_result:type_name -> massa.abi.v1.CheckPubKeyResult
	24,  // 12: massa.abi.v1.RespResult.check_sig_result:type_name -> massa.abi.v1.CheckSigResult
	38,  // 13: massa.abi.v1.RespResult.checked_add_native_time_result:type_name -> massa.abi.v1.CheckedAddNativeTimeResult
	46,  // 14: massa.abi.v1.RespResult.checked_div_rem_native_time_result:type_name -> massa.abi.v1.CheckedDivRemNativeTimeResult
	44,  // 15: massa.abi.v1.RespResult.checked_scalar_div_rem_native_time_result:type_name -> massa.abi.v1.CheckedScalarDivRemNativeTimeResult
	42,  // 16: massa.abi.v1.RespResult.checked_scalar_mul_native_time_result:type_name -> massa.abi.v1.CheckedScalarMulNativeTimeResult
	40,  // 17: massa.abi.v1.RespResult.checked_sub_native_time_result:type_name -> massa.abi.v1.CheckedSubNativeTimeResult
	50,  // 18: massa.abi.v1.RespResult.compare_address_result:type_name -> massa.abi.v1.CompareAddressResult
	56,  // 19: massa.abi.v1.RespResult.compare_native_amount_result:type_name -> massa.abi.v1.CompareNativeAmountResult
	48,  // 20: massa.abi.v1.RespResult.compare_native_time_result:type_name -> massa.abi.v1.CompareNativeTimeResult
	52,  // 21: massa.abi.v1.RespResult.compare_pub_key_result:type_name -> massa.abi.v1.ComparePubKeyResult
	2,   // 22: massa.abi.v1.RespResult.create_sc_result:type_name -> massa.abi.v1.CreateScResult
	78,  // 23: massa.abi.v1.RespResult.delete_ds_entry_result:type_name -> massa.abi.v1.DeleteDsEntryResult
	36,  // 24: massa.abi.v1.RespResult.div_rem_native_amount_result:type_name -> massa.abi.v1.DivRemNativeAmountResult
	80,  // 25: massa.abi.v1.RespResult.ds_entry_exists_result:type_name -> massa.abi.v1.DsEntryExistsResult
	12,  // 26: massa.abi.v1.RespResult.function_exists_result:type_name -> massa.abi.v1.FunctionExistsResult
	8,   // 27: massa.abi.v1.RespResult.generate_event_result:type_name -> massa.abi.v1.GenerateEventResult
	121, // 28: massa.abi.v1.RespResult.get_address_category_result:type_name -> massa.abi.v1.GetAddressCategoryResult
	119, // 29: massa.abi.v1.RespResult.get_address_version_result:type_name -> massa.abi.v1.GetAddressVersionResult
	115, // 30: massa.abi.v1.RespResult.get_balance_result:type_name -> massa.abi.v1.GetBalanceResult
	101, // 31: massa.abi.v1.RespResult.get_bytecode_result:type_name -> massa.abi.v1.GetBytecodeResult
	117, // 32: massa.abi.v1.RespResult.get_call_coins_result:type_name -> massa.abi.v1.GetCallCoinsResult
	84,  // 33: massa.abi.v1.RespResult.get_call_stack_result:type_name -> massa.abi.v1.GetCallStackResult
	97,  // 34: massa.abi.v1.RespResult.get_current_slot_result:type_name -> massa.abi.v1.GetCurrentSlotResult
	70,  // 35: massa.abi.v1.RespResult.get_ds_keys_result:type_name -> massa.abi.v1.GetDsKeysResult
	76,  // 36: massa.abi.v1.RespResult.get_ds_value_result:type_name -> massa.abi.v1.GetDsValueResult
	95,  // 37: massa.abi.v1.RespResult.get_native_time_result:type_name -> massa.abi.v1.GetNativeTimeResult
	107, // 38: massa.abi.v1.RespResult.get_op_data_result:type_name -> massa.abi.v1.GetOpDataResult
	111, // 39: massa.abi.v1.RespResult.get_op_keys_result:type_name -> massa.abi.v1.GetOpKeysResult
	93,  // 40: massa.abi.v1.RespResult.get_origin_operation_id_result:type_name -> massa.abi.v1.GetOriginOperationIdResult
	82,  // 41: massa.abi.v1.RespResult.get_owned_addresses_result:type_name -> massa.abi.v1.GetOwnedAddressesResult
	123, // 42: massa.abi.v1.RespResult.get_pub_key_version_result:type_name -> massa.abi.v1.GetPubKeyVersionResult
	113, // 43: massa.abi.v1.RespResult.get_remaining_gas_result:type_name -> massa.abi.v1.GetRemainingGasResult
	125, // 44: massa.abi.v1.RespResult.get_signature_version_result:type_name -> massa.abi.v1.GetSignatureVersionResult
	68,  // 45: massa.abi.v1.RespResult.hash_blake3_result:type_name -> massa.abi.v1.HashBlake3Result
	105, // 46: massa.abi.v1.RespResult.hash_sha256_result:type_name -> massa.abi.v1.HashSha256Result
	109, // 47: massa.abi.v1.RespResult.op_entry_exists_result:type_name -> massa.abi.v1.OpEntryExistsResult
	58,  // 48: massa.abi.v1.RespResult.keccak256_result:type_name -> massa.abi.v1.Keccak256Result
	6,   // 49: massa.abi.v1.RespResult.local_execution_response:type_name -> massa.abi.v1.LocalExecutionResponse
	18,  // 50: massa.abi.v1.RespResult.native_amount_from_string_result:type_name -> massa.abi.v1.NativeAmountFromStringResult
	16,  // 51: massa.abi.v1.RespResult.native_amount_to_string_result:type_name -> massa.abi.v1.NativeAmountToStringResult
	34,  // 52: massa.abi.v1.RespResult.scalar_div_rem_native_amount_result:type_name -> massa.abi.v1.ScalarDivRemNativeAmountResult
	32,  // 53: massa.abi.v1.RespResult.scalar_mul_native_amount_result:type_name -> massa.abi.v1.ScalarMulNativeAmountResult
	91,  // 54: massa.abi.v1.RespResult.send_async_message_result:type_name -> massa.abi.v1.SendAsyncMessageResult
	99,  // 55: massa.abi.v1.RespResult.set_bytecode_result:type_name -> massa.abi.v1.SetBytecodeResult
	72,  // 56: massa.abi.v1.RespResult.set_ds_value_result:type_name -> massa.abi.v1.SetDsValueResult
	30,  // 57: massa.abi.v1.RespResult.sub_native_amount_result:type_name -> massa.abi.v1.SubNativeAmountResult
	10,  // 58: massa.abi.v1.RespResult.transfer_coins_result:type_name -> massa.abi.v1.TransferCoinsResult
	88,  // 59: massa.abi.v1.RespResult.unsafe_random_result:type_name -> massa.abi.v1.UnsafeRandomResult
	60,  // 60: massa.abi.v1.RespResult.evm_verify_sig_result:type_name -> massa.abi.v1.EvmVerifySigResult
	54,  // 61: massa.abi.v1.RespResult.verify_sig_result:type_name -> massa.abi.v1.VerifySigResult
	62,  // 62: massa.abi.v1.RespResult.evm_get_address_from_pubkey_result:type_name -> massa.abi.v1.EvmGetAddressFromPubkeyResult
	64,  // 63: massa.abi.v1.RespResult.evm_get_pubkey_from_signature_result:type_name -> massa.abi.v1.EvmGetPubkeyFromSignatureResult
	66,  // 64: massa.abi.v1.RespResult.is_address_eoa_result:type_name -> massa.abi.v1.IsAddressEoaResult
	131, // 65: massa.abi.v1.RespResult.chain_id_result:type_name -> massa.abi.v1.ChainIdResult
	13,  // 66: massa.abi.v1.AbiResponse.res:type_name -> massa.abi.v1.RespResult
	0,   // 67: massa.abi.v1.AbiResponse.error:type_name -> massa.abi.v1.Error
	132, // 68: massa.abi.v1.NativeAmountToStringRequest.to_convert:type_name -> massa.model.v1.NativeAmount
	132, // 69: massa.abi.v1.NativeAmountFromStringResult.converted_amount:type_name -> massa.model.v1.NativeAmount
	132, // 70: massa.abi.v1.CheckNativeAmountRequest.to_check:type_name -> massa.model.v1.NativeAmount
	132, // 71: massa.abi.v1.AddNativeAmountRequest.amount1:type_name -> massa.model.v1.NativeAmount
	132, // 72: massa.abi.v1.AddNativeAmountRequest.amount2:type_name -> massa.model.v1.NativeAmount
	132, // 73: massa.abi.v1.AddNativeAmountResult.sum:type_name -> massa.model.v1.NativeAmount
	132, // 74: massa.abi.v1.SubNativeAmountRequest.left:type_name -> massa.model.v1.NativeAmount
	132, // 75: massa.abi.v1.SubNativeAmountRequest.right:type_name -> massa.model.v1.NativeAmount
	132, // 76: massa.abi.v1.SubNativeAmountResult.difference:type_name -> massa.model.v1.NativeAmount
	132, // 77: massa.abi.v1.ScalarMulNativeAmountRequest.amount:type_name -> massa.model.v1.NativeAmount
	132, // 78: massa.abi.v1.ScalarMulNativeAmountResult.product:type_name -> massa.model.v1.NativeAmount
	132, // 79: massa.abi.v1.ScalarDivRemNativeAmountRequest.dividend:type_name -> massa.model.v1.NativeAmount
	132, // 80: massa.abi.v1.ScalarDivRemNativeAmountResult.quotient:type_name -> massa.model.v1.NativeAmount
	132, // 81: massa.abi.v1.ScalarDivRemNativeAmountResult.remainder:type_name -> massa.model.v1.NativeAmount
	132, // 82: massa.abi.v1.DivRemNativeAmountRequest.dividend:type_name -> massa.model.v1.NativeAmount
	132, // 83: massa.abi.v1.DivRemNativeAmountRequest.divisor:type_name -> massa.model.v1.NativeAmount
	132, // 84: massa.abi.v1.DivRemNativeAmountResult.remainder:type_name -> massa.model.v1.NativeAmount
	134, // 85: massa.abi.v1.CheckedAddNativeTimeRequest.left:type_name -> massa.model.v1.NativeTime
	134, // 86: massa.abi.v1.CheckedAddNativeTimeRequest.right:type_name -> massa.model.v1.NativeTime
	134, // 87: massa.abi.v1.CheckedAddNativeTimeResult.sum:type_name -> massa.model.v1.NativeTime
	134, // 88: massa.abi.v1.CheckedSubNativeTimeRequest.left:type_name -> massa.model.v1.NativeTime
	134, // 89: massa.abi.v1.CheckedSubNativeTimeRequest.right:type_name -> massa.model.v1.NativeTime
	134, // 90: massa.abi.v1.CheckedSubNativeTimeResult.difference:type_name -> massa.model.v1.NativeTime
	134, // 91: massa.abi.v1.CheckedScalarMulNativeTimeRequest.time:type_name -> massa.model.v1.NativeTime
	134, // 92: massa.abi.v1.CheckedScalarMulNativeTimeResult.product:type_name -> massa.model.v1.NativeTime
	134, // 93: massa.abi.v1.CheckedScalarDivRemNativeTimeRequest.dividend:type_name -> massa.model.v1.NativeTime
	134, // 94: massa.abi.v1.CheckedScalarDivRemNativeTimeResult.quotient:type_name -> massa.model.v1.NativeTime
	134, // 95: massa.abi.v1.CheckedScalarDivRemNativeTimeResult.remainder:type_name -> massa.model.v1.NativeTime
	134, // 96: massa.abi.v1.CheckedDivRemNativeTimeRequest.dividend:type_name -> massa.model.v1.NativeTime
	134, // 97: massa.abi.v1.CheckedDivRemNativeTimeRequest.divisor:type_name -> massa.model.v1.NativeTime
	134, // 98: massa.abi.v1.CheckedDivRemNativeTimeResult.remainder:type_name -> massa.model.v1.NativeTime
	134, // 99: massa.abi.v1.CompareNativeTimeRequest.left:type_name -> massa.model.v1.NativeTime
	134, // 100: massa.abi.v1.CompareNativeTimeRequest.right:type_name -> massa.model.v1.NativeTime
	135, // 101: massa.abi.v1.CompareNativeTimeResult.result:type_name -> massa.model.v1.ComparisonResult
	135, // 102: massa.abi.v1.CompareAddressResult.result:type_name -> massa.model.v1.ComparisonResult
	135, // 103: massa.abi.v1.ComparePubKeyResult.result:type_name -> massa.model.v1.ComparisonResult
	132, // 104: massa.abi.v1.CompareNativeAmountRequest.left:type_name -> massa.model.v1.NativeAmount
	132, // 105: massa.abi.v1.CompareNativeAmountRequest.right:type_name -> massa.model.v1.NativeAmount
	135, // 106: massa.abi.v1.CompareNativeAmountResult.result:type_name -> massa.model.v1.ComparisonResult
	133, // 107: massa.abi.v1.GetDsKeysRequest.address:type_name -> google.protobuf.StringValue
	133, // 108: massa.abi.v1.SetDsValueRequest.address:type_name -> google.protobuf.StringValue
	133, // 109: massa.abi.v1.AppendDsValueRequest.address:type_name -> google.protobuf.StringValue
	133, // 110: massa.abi.v1.GetDsValueRequest.address:type_name -> google.protobuf.StringValue
	133, // 111: massa.abi.v1.DeleteDsEntryRequest.address:type_name -> google.protobuf.StringValue
	133, // 112: massa.abi.v1.DsEntryExistsRequest.address:type_name -> google.protobuf.StringValue
	136, // 113: massa.abi.v1.SendAsyncMessageFilter.target_key:type_name -> google.protobuf.BytesValue
	137, // 114: massa.abi.v1.SendAsyncMessageRequest.validity_start:type_name -> massa.model.v1.Slot
	137, // 115: massa.abi.v1.SendAsyncMessageRequest.validity_end:type_name -> massa.model.v1.Slot
	89,  // 116: massa.abi.v1.SendAsyncMessageRequest.filter:type_name -> massa.abi.v1.SendAsyncMessageFilter
	133, // 117: massa.abi.v1.GetOriginOperationIdResult.operation_id:type_name -> google.protobuf.StringValue
	134, // 118: massa.abi.v1.GetNativeTimeResult.time:type_name -> massa.model.v1.NativeTime
	137, // 119: massa.abi.v1.GetCurrentSlotResult.slot:type_name -> massa.model.v1.Slot
	133, // 120: massa.abi.v1.SetBytecodeRequest.address:type_name -> google.protobuf.StringValue
	133, // 121: massa.abi.v1.GetBytecodeRequest.address:type_name -> google.protobuf.StringValue
	133, // 122: massa.abi.v1.GetBalanceRequest.address:type_name -> google.protobuf.StringValue
	132, // 123: massa.abi.v1.GetBalanceResult.balance:type_name -> massa.model.v1.NativeAmount
	132, // 124: massa.abi.v1.GetCallCoinsResult.coins:type_name -> massa.model.v1.NativeAmount
	138, // 125: massa.abi.v1.GetAddressCategoryResult.category:type_name -> massa.model.v1.AddressCategory
	126, // [126:126] is the sub-list for method output_type
	126, // [126:126] is the sub-list for method input_type
	126, // [126:126] is the sub-list for extension type_name
	126, // [126:126] is the sub-list for extension extendee
	0,   // [0:126] is the sub-list for field type_name
}

func init() { file_massa_abi_v1_abi_proto_init() }
func file_massa_abi_v1_abi_proto_init() {
	if File_massa_abi_v1_abi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_massa_abi_v1_abi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateScResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateEventResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCoinsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FunctionExistsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeAmountToStringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeAmountToStringResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeAmountFromStringRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeAmountFromStringResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAddressResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPubKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPubKeyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSigResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckNativeAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckNativeAmountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNativeAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNativeAmountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubNativeAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubNativeAmountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarMulNativeAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarMulNativeAmountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarDivRemNativeAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalarDivRemNativeAmountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivRemNativeAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DivRemNativeAmountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedAddNativeTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedAddNativeTimeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedSubNativeTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedSubNativeTimeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedScalarMulNativeTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedScalarMulNativeTimeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedScalarDivRemNativeTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedScalarDivRemNativeTimeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedDivRemNativeTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckedDivRemNativeTimeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareNativeTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareNativeTimeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareAddressResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComparePubKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComparePubKeyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySigResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareNativeAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompareNativeAmountResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keccak256Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keccak256Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmVerifySigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmVerifySigResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmGetAddressFromPubkeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmGetAddressFromPubkeyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmGetPubkeyFromSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmGetPubkeyFromSignatureResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAddressEoaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAddressEoaResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashBlake3Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashBlake3Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDsKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDsKeysResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDsValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDsValueResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendDsValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppendDsValueResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDsValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDsValueResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDsEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDsEntryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DsEntryExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DsEntryExistsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnedAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOwnedAddressesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallStackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallStackResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressFromPubKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressFromPubKeyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsafeRandomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsafeRandomResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAsyncMessageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAsyncMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendAsyncMessageResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOriginOperationIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOriginOperationIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNativeTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNativeTimeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCurrentSlotResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBytecodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBytecodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBytecodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBytecodeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallerHasWriteAccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallerHasWriteAccessResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashSha256Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashSha256Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpEntryExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpEntryExistsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpKeysResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemainingGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRemainingGasResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallCoinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallCoinsResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressVersionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressCategoryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPubKeyVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPubKeyVersionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignatureVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignatureVersionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesToBase58CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BytesToBase58CheckResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base58CheckToBytesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base58CheckToBytesResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_abi_v1_abi_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainIdResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_massa_abi_v1_abi_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*RespResult_AddNativeAmountResult)(nil),
		(*RespResult_AddressFromPubKeyResult)(nil),
		(*RespResult_AppendDsValueResult)(nil),
		(*RespResult_Base58CheckToBytesResult)(nil),
		(*RespResult_BytesToBase58CheckResult)(nil),
		(*RespResult_CallerHasWriteAccessResult)(nil),
		(*RespResult_CheckAddressResult)(nil),
		(*RespResult_CheckNativeAmountResult)(nil),
		(*RespResult_CheckPubKeyResult)(nil),
		(*RespResult_CheckSigResult)(nil),
		(*RespResult_CheckedAddNativeTimeResult)(nil),
		(*RespResult_CheckedDivRemNativeTimeResult)(nil),
		(*RespResult_CheckedScalarDivRemNativeTimeResult)(nil),
		(*RespResult_CheckedScalarMulNativeTimeResult)(nil),
		(*RespResult_CheckedSubNativeTimeResult)(nil),
		(*RespResult_CompareAddressResult)(nil),
		(*RespResult_CompareNativeAmountResult)(nil),
		(*RespResult_CompareNativeTimeResult)(nil),
		(*RespResult_ComparePubKeyResult)(nil),
		(*RespResult_CreateScResult)(nil),
		(*RespResult_DeleteDsEntryResult)(nil),
		(*RespResult_DivRemNativeAmountResult)(nil),
		(*RespResult_DsEntryExistsResult)(nil),
		(*RespResult_FunctionExistsResult)(nil),
		(*RespResult_GenerateEventResult)(nil),
		(*RespResult_GetAddressCategoryResult)(nil),
		(*RespResult_GetAddressVersionResult)(nil),
		(*RespResult_GetBalanceResult)(nil),
		(*RespResult_GetBytecodeResult)(nil),
		(*RespResult_GetCallCoinsResult)(nil),
		(*RespResult_GetCallStackResult)(nil),
		(*RespResult_GetCurrentSlotResult)(nil),
		(*RespResult_GetDsKeysResult)(nil),
		(*RespResult_GetDsValueResult)(nil),
		(*RespResult_GetNativeTimeResult)(nil),
		(*RespResult_GetOpDataResult)(nil),
		(*RespResult_GetOpKeysResult)(nil),
		(*RespResult_GetOriginOperationIdResult)(nil),
		(*RespResult_GetOwnedAddressesResult)(nil),
		(*RespResult_GetPubKeyVersionResult)(nil),
		(*RespResult_GetRemainingGasResult)(nil),
		(*RespResult_GetSignatureVersionResult)(nil),
		(*RespResult_HashBlake3Result)(nil),
		(*RespResult_HashSha256Result)(nil),
		(*RespResult_OpEntryExistsResult)(nil),
		(*RespResult_Keccak256Result)(nil),
		(*RespResult_LocalExecutionResponse)(nil),
		(*RespResult_NativeAmountFromStringResult)(nil),
		(*RespResult_NativeAmountToStringResult)(nil),
		(*RespResult_ScalarDivRemNativeAmountResult)(nil),
		(*RespResult_ScalarMulNativeAmountResult)(nil),
		(*RespResult_SendAsyncMessageResult)(nil),
		(*RespResult_SetBytecodeResult)(nil),
		(*RespResult_SetDsValueResult)(nil),
		(*RespResult_SubNativeAmountResult)(nil),
		(*RespResult_TransferCoinsResult)(nil),
		(*RespResult_UnsafeRandomResult)(nil),
		(*RespResult_EvmVerifySigResult)(nil),
		(*RespResult_VerifySigResult)(nil),
		(*RespResult_EvmGetAddressFromPubkeyResult)(nil),
		(*RespResult_EvmGetPubkeyFromSignatureResult)(nil),
		(*RespResult_IsAddressEoaResult)(nil),
		(*RespResult_ChainIdResult)(nil),
	}
	file_massa_abi_v1_abi_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*AbiResponse_Res)(nil),
		(*AbiResponse_Error)(nil),
	}
	file_massa_abi_v1_abi_proto_msgTypes[69].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[71].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[73].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[75].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[77].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[79].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[93].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[98].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[100].OneofWrappers = []interface{}{}
	file_massa_abi_v1_abi_proto_msgTypes[114].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_massa_abi_v1_abi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   132,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_massa_abi_v1_abi_proto_goTypes,
		DependencyIndexes: file_massa_abi_v1_abi_proto_depIdxs,
		MessageInfos:      file_massa_abi_v1_abi_proto_msgTypes,
	}.Build()
	File_massa_abi_v1_abi_proto = out.File
	file_massa_abi_v1_abi_proto_rawDesc = nil
	file_massa_abi_v1_abi_proto_goTypes = nil
	file_massa_abi_v1_abi_proto_depIdxs = nil
}
