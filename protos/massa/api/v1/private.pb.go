// Copyright (c) 2023 MASSA LABS <info@massa.net>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: massa/api/v1/private.proto

package v1

import (
	v1 "github.com/edatts/go-massa/protos/massa/model/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AddToBootstrapBlacklistRequest holds the request for AddToBootstrapBlacklist
type AddToBootstrapBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP addresses to add to bootstrap blacklist
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *AddToBootstrapBlacklistRequest) Reset() {
	*x = AddToBootstrapBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToBootstrapBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBootstrapBlacklistRequest) ProtoMessage() {}

func (x *AddToBootstrapBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBootstrapBlacklistRequest.ProtoReflect.Descriptor instead.
func (*AddToBootstrapBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{0}
}

func (x *AddToBootstrapBlacklistRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// AddToBootstrapBlacklistResponse holds the response from AddToBootstrapBlacklist
type AddToBootstrapBlacklistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddToBootstrapBlacklistResponse) Reset() {
	*x = AddToBootstrapBlacklistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToBootstrapBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBootstrapBlacklistResponse) ProtoMessage() {}

func (x *AddToBootstrapBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBootstrapBlacklistResponse.ProtoReflect.Descriptor instead.
func (*AddToBootstrapBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{1}
}

// AddToBootstrapWhitelistRequest holds the request for AddToBootstrapWhitelist
type AddToBootstrapWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP addresses to add to bootstrap whitelist
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *AddToBootstrapWhitelistRequest) Reset() {
	*x = AddToBootstrapWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToBootstrapWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBootstrapWhitelistRequest) ProtoMessage() {}

func (x *AddToBootstrapWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBootstrapWhitelistRequest.ProtoReflect.Descriptor instead.
func (*AddToBootstrapWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{2}
}

func (x *AddToBootstrapWhitelistRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// AddToBootstrapWhitelistResponse holds the response from AddToBootstrapWhitelist
type AddToBootstrapWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddToBootstrapWhitelistResponse) Reset() {
	*x = AddToBootstrapWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToBootstrapWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToBootstrapWhitelistResponse) ProtoMessage() {}

func (x *AddToBootstrapWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToBootstrapWhitelistResponse.ProtoReflect.Descriptor instead.
func (*AddToBootstrapWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{3}
}

// AddToPeersWhitelistRequest holds the request for AddToPeersWhitelist
type AddToPeersWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP addresses to add to peers whitelist
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *AddToPeersWhitelistRequest) Reset() {
	*x = AddToPeersWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToPeersWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToPeersWhitelistRequest) ProtoMessage() {}

func (x *AddToPeersWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToPeersWhitelistRequest.ProtoReflect.Descriptor instead.
func (*AddToPeersWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{4}
}

func (x *AddToPeersWhitelistRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// AddToPeersWhitelistResponse holds the response from AddToPeersWhitelist
type AddToPeersWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddToPeersWhitelistResponse) Reset() {
	*x = AddToPeersWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToPeersWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToPeersWhitelistResponse) ProtoMessage() {}

func (x *AddToPeersWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToPeersWhitelistResponse.ProtoReflect.Descriptor instead.
func (*AddToPeersWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{5}
}

// AddStakingSecretKeysRequest holds the request for AddStakingSecretKeys
type AddStakingSecretKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secret keys to add to wallet
	SecretKeys []string `protobuf:"bytes,1,rep,name=secret_keys,json=secretKeys,proto3" json:"secret_keys,omitempty"`
}

func (x *AddStakingSecretKeysRequest) Reset() {
	*x = AddStakingSecretKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStakingSecretKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStakingSecretKeysRequest) ProtoMessage() {}

func (x *AddStakingSecretKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStakingSecretKeysRequest.ProtoReflect.Descriptor instead.
func (*AddStakingSecretKeysRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{6}
}

func (x *AddStakingSecretKeysRequest) GetSecretKeys() []string {
	if x != nil {
		return x.SecretKeys
	}
	return nil
}

// AddStakingSecretKeysResponse holds the response from AddStakingSecretKeys
type AddStakingSecretKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStakingSecretKeysResponse) Reset() {
	*x = AddStakingSecretKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddStakingSecretKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStakingSecretKeysResponse) ProtoMessage() {}

func (x *AddStakingSecretKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStakingSecretKeysResponse.ProtoReflect.Descriptor instead.
func (*AddStakingSecretKeysResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{7}
}

// AllowEveryoneToBootstrapRequest holds the request for AllowEveryoneToBootstrap
type AllowEveryoneToBootstrapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllowEveryoneToBootstrapRequest) Reset() {
	*x = AllowEveryoneToBootstrapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowEveryoneToBootstrapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowEveryoneToBootstrapRequest) ProtoMessage() {}

func (x *AllowEveryoneToBootstrapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowEveryoneToBootstrapRequest.ProtoReflect.Descriptor instead.
func (*AllowEveryoneToBootstrapRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{8}
}

// AllowEveryoneToBootstrapResponse holds the response from AllowEveryoneToBootstrap
type AllowEveryoneToBootstrapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllowEveryoneToBootstrapResponse) Reset() {
	*x = AllowEveryoneToBootstrapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowEveryoneToBootstrapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowEveryoneToBootstrapResponse) ProtoMessage() {}

func (x *AllowEveryoneToBootstrapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowEveryoneToBootstrapResponse.ProtoReflect.Descriptor instead.
func (*AllowEveryoneToBootstrapResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{9}
}

// GetBootstrapBlacklistRequest holds the request for GetBootstrapBlacklist
type GetBootstrapBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBootstrapBlacklistRequest) Reset() {
	*x = GetBootstrapBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapBlacklistRequest) ProtoMessage() {}

func (x *GetBootstrapBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapBlacklistRequest.ProtoReflect.Descriptor instead.
func (*GetBootstrapBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{10}
}

// GetBootstrapBlacklistResponse holds the response from GetBootstrapBlacklist
type GetBootstrapBlacklistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bootstrap blacklisted IP addresses
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *GetBootstrapBlacklistResponse) Reset() {
	*x = GetBootstrapBlacklistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapBlacklistResponse) ProtoMessage() {}

func (x *GetBootstrapBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapBlacklistResponse.ProtoReflect.Descriptor instead.
func (*GetBootstrapBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{11}
}

func (x *GetBootstrapBlacklistResponse) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// GetBootstrapWhitelistRequest holds the request for GetBootstrapWhitelist
type GetBootstrapWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBootstrapWhitelistRequest) Reset() {
	*x = GetBootstrapWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapWhitelistRequest) ProtoMessage() {}

func (x *GetBootstrapWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapWhitelistRequest.ProtoReflect.Descriptor instead.
func (*GetBootstrapWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{12}
}

// GetBootstrapWhitelistResponse holds the response from GetBootstrapWhitelist
type GetBootstrapWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Bootstrap whitelisted IP addresses
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *GetBootstrapWhitelistResponse) Reset() {
	*x = GetBootstrapWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBootstrapWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBootstrapWhitelistResponse) ProtoMessage() {}

func (x *GetBootstrapWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBootstrapWhitelistResponse.ProtoReflect.Descriptor instead.
func (*GetBootstrapWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{13}
}

func (x *GetBootstrapWhitelistResponse) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// GetMipStatusRequest holds request for GetMipStatus
type GetMipStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMipStatusRequest) Reset() {
	*x = GetMipStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMipStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMipStatusRequest) ProtoMessage() {}

func (x *GetMipStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMipStatusRequest.ProtoReflect.Descriptor instead.
func (*GetMipStatusRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{14}
}

// GetMipStatusResponse holds response from GetMipStatus
type GetMipStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (MipInfo - status id) entries
	MipstatusEntries []*v1.MipStatusEntry `protobuf:"bytes,1,rep,name=mipstatus_entries,json=mipstatusEntries,proto3" json:"mipstatus_entries,omitempty"`
}

func (x *GetMipStatusResponse) Reset() {
	*x = GetMipStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMipStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMipStatusResponse) ProtoMessage() {}

func (x *GetMipStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMipStatusResponse.ProtoReflect.Descriptor instead.
func (*GetMipStatusResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{15}
}

func (x *GetMipStatusResponse) GetMipstatusEntries() []*v1.MipStatusEntry {
	if x != nil {
		return x.MipstatusEntries
	}
	return nil
}

// GetNodeStatusRequest holds the request for GetNodeStatus
type GetNodeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNodeStatusRequest) Reset() {
	*x = GetNodeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStatusRequest) ProtoMessage() {}

func (x *GetNodeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStatusRequest.ProtoReflect.Descriptor instead.
func (*GetNodeStatusRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{16}
}

// GetNodeStatusResponse holds the response from GetNodeStatus
type GetNodeStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node status
	Status *v1.NodeStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetNodeStatusResponse) Reset() {
	*x = GetNodeStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStatusResponse) ProtoMessage() {}

func (x *GetNodeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStatusResponse.ProtoReflect.Descriptor instead.
func (*GetNodeStatusResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{17}
}

func (x *GetNodeStatusResponse) GetStatus() *v1.NodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// GetPeersWhitelistRequest holds the request for GetPeersWhitelist
type GetPeersWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPeersWhitelistRequest) Reset() {
	*x = GetPeersWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersWhitelistRequest) ProtoMessage() {}

func (x *GetPeersWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersWhitelistRequest.ProtoReflect.Descriptor instead.
func (*GetPeersWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{18}
}

// GetPeersWhitelistResponse holds the response from GetPeersWhitelist
type GetPeersWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whitelisted IP addresses
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *GetPeersWhitelistResponse) Reset() {
	*x = GetPeersWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeersWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeersWhitelistResponse) ProtoMessage() {}

func (x *GetPeersWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeersWhitelistResponse.ProtoReflect.Descriptor instead.
func (*GetPeersWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{19}
}

func (x *GetPeersWhitelistResponse) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// BanNodesByIdsRequest holds the request for BanNodesByIds
type BanNodesByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node ids to ban
	NodeIds []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *BanNodesByIdsRequest) Reset() {
	*x = BanNodesByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanNodesByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanNodesByIdsRequest) ProtoMessage() {}

func (x *BanNodesByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanNodesByIdsRequest.ProtoReflect.Descriptor instead.
func (*BanNodesByIdsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{20}
}

func (x *BanNodesByIdsRequest) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

// BanNodesByIdsResponse holds the response from BanNodesByIds
type BanNodesByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BanNodesByIdsResponse) Reset() {
	*x = BanNodesByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanNodesByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanNodesByIdsResponse) ProtoMessage() {}

func (x *BanNodesByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanNodesByIdsResponse.ProtoReflect.Descriptor instead.
func (*BanNodesByIdsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{21}
}

// BanNodesByIpsRequest holds the request for BanNodesByIps
type BanNodesByIpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node IP addresses to ban
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *BanNodesByIpsRequest) Reset() {
	*x = BanNodesByIpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanNodesByIpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanNodesByIpsRequest) ProtoMessage() {}

func (x *BanNodesByIpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanNodesByIpsRequest.ProtoReflect.Descriptor instead.
func (*BanNodesByIpsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{22}
}

func (x *BanNodesByIpsRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// BanNodesByIpsResponse holds the response from BanNodesByIps
type BanNodesByIpsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BanNodesByIpsResponse) Reset() {
	*x = BanNodesByIpsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanNodesByIpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanNodesByIpsResponse) ProtoMessage() {}

func (x *BanNodesByIpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanNodesByIpsResponse.ProtoReflect.Descriptor instead.
func (*BanNodesByIpsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{23}
}

// RemoveFromBootstrapBlacklistRequest holds the request for RemoveFromBootstrapBlacklist
type RemoveFromBootstrapBlacklistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP addresses to remove from bootstrap blacklist
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *RemoveFromBootstrapBlacklistRequest) Reset() {
	*x = RemoveFromBootstrapBlacklistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromBootstrapBlacklistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBootstrapBlacklistRequest) ProtoMessage() {}

func (x *RemoveFromBootstrapBlacklistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBootstrapBlacklistRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromBootstrapBlacklistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveFromBootstrapBlacklistRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// RemoveFromBootstrapBlacklistResponse holds the response from RemoveFromBootstrapBlacklist
type RemoveFromBootstrapBlacklistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveFromBootstrapBlacklistResponse) Reset() {
	*x = RemoveFromBootstrapBlacklistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromBootstrapBlacklistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBootstrapBlacklistResponse) ProtoMessage() {}

func (x *RemoveFromBootstrapBlacklistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBootstrapBlacklistResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromBootstrapBlacklistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{25}
}

// RemoveFromBootstrapWhitelistRequest holds the request for RemoveFromBootstrapWhitelist
type RemoveFromBootstrapWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP addresses to remove from bootstrap whitelist
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *RemoveFromBootstrapWhitelistRequest) Reset() {
	*x = RemoveFromBootstrapWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromBootstrapWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBootstrapWhitelistRequest) ProtoMessage() {}

func (x *RemoveFromBootstrapWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBootstrapWhitelistRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromBootstrapWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{26}
}

func (x *RemoveFromBootstrapWhitelistRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// RemoveFromBootstrapWhitelistResponse holds the response from RemoveFromBootstrapWhitelist
type RemoveFromBootstrapWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveFromBootstrapWhitelistResponse) Reset() {
	*x = RemoveFromBootstrapWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromBootstrapWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromBootstrapWhitelistResponse) ProtoMessage() {}

func (x *RemoveFromBootstrapWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromBootstrapWhitelistResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromBootstrapWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{27}
}

// RemoveFromPeersWhitelistRequest holds the request for RemoveFromPeersWhitelist
type RemoveFromPeersWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IP addresses to remove from peers whitelist
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *RemoveFromPeersWhitelistRequest) Reset() {
	*x = RemoveFromPeersWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromPeersWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromPeersWhitelistRequest) ProtoMessage() {}

func (x *RemoveFromPeersWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromPeersWhitelistRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromPeersWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveFromPeersWhitelistRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// RemoveFromPeersWhitelistResponse holds the response from RemoveFromPeersWhitelist
type RemoveFromPeersWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveFromPeersWhitelistResponse) Reset() {
	*x = RemoveFromPeersWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromPeersWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromPeersWhitelistResponse) ProtoMessage() {}

func (x *RemoveFromPeersWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromPeersWhitelistResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromPeersWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{29}
}

// RemoveStakingAddressesRequest holds the request for RemoveStakingAddresses
type RemoveStakingAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Addresses to remove from staking
	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *RemoveStakingAddressesRequest) Reset() {
	*x = RemoveStakingAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStakingAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStakingAddressesRequest) ProtoMessage() {}

func (x *RemoveStakingAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStakingAddressesRequest.ProtoReflect.Descriptor instead.
func (*RemoveStakingAddressesRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{30}
}

func (x *RemoveStakingAddressesRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// RemoveStakingAddressesResponse holds the response from RemoveStakingAddresses
type RemoveStakingAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveStakingAddressesResponse) Reset() {
	*x = RemoveStakingAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveStakingAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveStakingAddressesResponse) ProtoMessage() {}

func (x *RemoveStakingAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveStakingAddressesResponse.ProtoReflect.Descriptor instead.
func (*RemoveStakingAddressesResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{31}
}

// SignMessagesRequest holds the request for SignMessages
type SignMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Messages to sign in bytes
	Messages [][]byte `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *SignMessagesRequest) Reset() {
	*x = SignMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessagesRequest) ProtoMessage() {}

func (x *SignMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessagesRequest.ProtoReflect.Descriptor instead.
func (*SignMessagesRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{32}
}

func (x *SignMessagesRequest) GetMessages() [][]byte {
	if x != nil {
		return x.Messages
	}
	return nil
}

// SignMessagesResponse holds the response from SignMessages
type SignMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Public key that signed the message
	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Signatures
	Signatures []string `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *SignMessagesResponse) Reset() {
	*x = SignMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessagesResponse) ProtoMessage() {}

func (x *SignMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessagesResponse.ProtoReflect.Descriptor instead.
func (*SignMessagesResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{33}
}

func (x *SignMessagesResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *SignMessagesResponse) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// ShutdownGracefullyRequest holds the request for ShutdownGracefully
type ShutdownGracefullyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownGracefullyRequest) Reset() {
	*x = ShutdownGracefullyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownGracefullyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownGracefullyRequest) ProtoMessage() {}

func (x *ShutdownGracefullyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownGracefullyRequest.ProtoReflect.Descriptor instead.
func (*ShutdownGracefullyRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{34}
}

// ShutdownGracefullyResponse holds the response from ShutdownGracefully
type ShutdownGracefullyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownGracefullyResponse) Reset() {
	*x = ShutdownGracefullyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownGracefullyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownGracefullyResponse) ProtoMessage() {}

func (x *ShutdownGracefullyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownGracefullyResponse.ProtoReflect.Descriptor instead.
func (*ShutdownGracefullyResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{35}
}

// UnbanNodesByIdsRequest holds the request for UnbanNodesByIds
type UnbanNodesByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node ids to unban
	NodeIds []string `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
}

func (x *UnbanNodesByIdsRequest) Reset() {
	*x = UnbanNodesByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanNodesByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanNodesByIdsRequest) ProtoMessage() {}

func (x *UnbanNodesByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanNodesByIdsRequest.ProtoReflect.Descriptor instead.
func (*UnbanNodesByIdsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{36}
}

func (x *UnbanNodesByIdsRequest) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

// UnbanNodesByIdsResponse holds the response from UnbanNodesByIds
type UnbanNodesByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnbanNodesByIdsResponse) Reset() {
	*x = UnbanNodesByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanNodesByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanNodesByIdsResponse) ProtoMessage() {}

func (x *UnbanNodesByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanNodesByIdsResponse.ProtoReflect.Descriptor instead.
func (*UnbanNodesByIdsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{37}
}

// UnbanNodesByIpsRequest holds the request for UnbanNodesByIps
type UnbanNodesByIpsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Nodes IP addresses to unban
	Ips []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
}

func (x *UnbanNodesByIpsRequest) Reset() {
	*x = UnbanNodesByIpsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanNodesByIpsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanNodesByIpsRequest) ProtoMessage() {}

func (x *UnbanNodesByIpsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanNodesByIpsRequest.ProtoReflect.Descriptor instead.
func (*UnbanNodesByIpsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{38}
}

func (x *UnbanNodesByIpsRequest) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

// UnbanNodesByIpsResponse holds the response from UnbanNodesByIps
type UnbanNodesByIpsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnbanNodesByIpsResponse) Reset() {
	*x = UnbanNodesByIpsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_private_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanNodesByIpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanNodesByIpsResponse) ProtoMessage() {}

func (x *UnbanNodesByIpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_private_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanNodesByIpsResponse.ProtoReflect.Descriptor instead.
func (*UnbanNodesByIpsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_private_proto_rawDescGZIP(), []int{39}
}

var File_massa_api_v1_private_proto protoreflect.FileDescriptor

var file_massa_api_v1_private_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2f, 0x76, 0x31, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x1e, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22,
	0x21, 0x0a, 0x1f, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2e, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x70, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3e, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x0a, 0x1f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x72, 0x79, 0x6f,
	0x6e, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65,
	0x72, 0x79, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x15,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x11, 0x6d, 0x69, 0x70, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x6d, 0x69, 0x70, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x31, 0x0a, 0x14, 0x42, 0x61,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x22, 0x17, 0x0a,
	0x15, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73,
	0x22, 0x17, 0x0a, 0x15, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x23, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x70, 0x73, 0x22, 0x26, 0x0a, 0x24, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x0a, 0x23, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x70, 0x73, 0x22, 0x26, 0x0a, 0x24, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x1f, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73,
	0x22, 0x22, 0x0a, 0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65,
	0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x1d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22,
	0x1b, 0x0a, 0x19, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x61, 0x63, 0x65,
	0x66, 0x75, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a,
	0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x16, 0x55, 0x6e,
	0x62, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x19, 0x0a, 0x17, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x16, 0x55, 0x6e,
	0x62, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x93, 0x17, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x62, 0x6c,
	0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xa0, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x91, 0x01, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a,
	0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x70,
	0x65, 0x65, 0x72, 0x73, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x95,
	0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x29, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x12, 0xa5, 0x01, 0x0a, 0x18, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x45, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e, 0x65, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e, 0x65,
	0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e, 0x65, 0x54,
	0x6f, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x6f, 0x6e,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x12, 0x98,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74,
	0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f,
	0x6d, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x78, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65,
	0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x65, 0x65, 0x72, 0x73, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x79, 0x0a, 0x0d, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x6e, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x79, 0x0a, 0x0d, 0x42, 0x61,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x69, 0x70, 0x73, 0x12, 0xb5, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74,
	0x72, 0x61, 0x70, 0x5f, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xb5, 0x01,
	0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x74,
	0x73, 0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x31,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x42, 0x6f, 0x6f, 0x74, 0x73,
	0x74, 0x72, 0x61, 0x70, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a,
	0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x5f, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xa5, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x50, 0x65, 0x65, 0x72, 0x73,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x65,
	0x65, 0x72, 0x73, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x9c, 0x01,
	0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x0c,
	0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x8b, 0x01, 0x0a, 0x12, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72,
	0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x12, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e,
	0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x47, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75,
	0x6c, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x12,
	0x81, 0x01, 0x0a, 0x0f, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x6e, 0x62, 0x61, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62,
	0x61, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x42, 0x79, 0x49, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x62, 0x61, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x5f, 0x62, 0x79, 0x5f, 0x69, 0x70, 0x73, 0x42, 0x91, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x61, 0x74, 0x74,
	0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0xa2, 0x02, 0x04, 0x4d, 0x41, 0x50, 0x49, 0xaa, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x2e, 0x4d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x76, 0x31, 0xba, 0x02, 0x04, 0x4d, 0x41,
	0x50, 0x49, 0xca, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x5c, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x5c, 0x41,
	0x70, 0x69, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x13, 0x43, 0x6f, 0x6d, 0x3a, 0x3a, 0x4d, 0x61, 0x73,
	0x73, 0x61, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_massa_api_v1_private_proto_rawDescOnce sync.Once
	file_massa_api_v1_private_proto_rawDescData = file_massa_api_v1_private_proto_rawDesc
)

func file_massa_api_v1_private_proto_rawDescGZIP() []byte {
	file_massa_api_v1_private_proto_rawDescOnce.Do(func() {
		file_massa_api_v1_private_proto_rawDescData = protoimpl.X.CompressGZIP(file_massa_api_v1_private_proto_rawDescData)
	})
	return file_massa_api_v1_private_proto_rawDescData
}

var file_massa_api_v1_private_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_massa_api_v1_private_proto_goTypes = []interface{}{
	(*AddToBootstrapBlacklistRequest)(nil),       // 0: massa.api.v1.AddToBootstrapBlacklistRequest
	(*AddToBootstrapBlacklistResponse)(nil),      // 1: massa.api.v1.AddToBootstrapBlacklistResponse
	(*AddToBootstrapWhitelistRequest)(nil),       // 2: massa.api.v1.AddToBootstrapWhitelistRequest
	(*AddToBootstrapWhitelistResponse)(nil),      // 3: massa.api.v1.AddToBootstrapWhitelistResponse
	(*AddToPeersWhitelistRequest)(nil),           // 4: massa.api.v1.AddToPeersWhitelistRequest
	(*AddToPeersWhitelistResponse)(nil),          // 5: massa.api.v1.AddToPeersWhitelistResponse
	(*AddStakingSecretKeysRequest)(nil),          // 6: massa.api.v1.AddStakingSecretKeysRequest
	(*AddStakingSecretKeysResponse)(nil),         // 7: massa.api.v1.AddStakingSecretKeysResponse
	(*AllowEveryoneToBootstrapRequest)(nil),      // 8: massa.api.v1.AllowEveryoneToBootstrapRequest
	(*AllowEveryoneToBootstrapResponse)(nil),     // 9: massa.api.v1.AllowEveryoneToBootstrapResponse
	(*GetBootstrapBlacklistRequest)(nil),         // 10: massa.api.v1.GetBootstrapBlacklistRequest
	(*GetBootstrapBlacklistResponse)(nil),        // 11: massa.api.v1.GetBootstrapBlacklistResponse
	(*GetBootstrapWhitelistRequest)(nil),         // 12: massa.api.v1.GetBootstrapWhitelistRequest
	(*GetBootstrapWhitelistResponse)(nil),        // 13: massa.api.v1.GetBootstrapWhitelistResponse
	(*GetMipStatusRequest)(nil),                  // 14: massa.api.v1.GetMipStatusRequest
	(*GetMipStatusResponse)(nil),                 // 15: massa.api.v1.GetMipStatusResponse
	(*GetNodeStatusRequest)(nil),                 // 16: massa.api.v1.GetNodeStatusRequest
	(*GetNodeStatusResponse)(nil),                // 17: massa.api.v1.GetNodeStatusResponse
	(*GetPeersWhitelistRequest)(nil),             // 18: massa.api.v1.GetPeersWhitelistRequest
	(*GetPeersWhitelistResponse)(nil),            // 19: massa.api.v1.GetPeersWhitelistResponse
	(*BanNodesByIdsRequest)(nil),                 // 20: massa.api.v1.BanNodesByIdsRequest
	(*BanNodesByIdsResponse)(nil),                // 21: massa.api.v1.BanNodesByIdsResponse
	(*BanNodesByIpsRequest)(nil),                 // 22: massa.api.v1.BanNodesByIpsRequest
	(*BanNodesByIpsResponse)(nil),                // 23: massa.api.v1.BanNodesByIpsResponse
	(*RemoveFromBootstrapBlacklistRequest)(nil),  // 24: massa.api.v1.RemoveFromBootstrapBlacklistRequest
	(*RemoveFromBootstrapBlacklistResponse)(nil), // 25: massa.api.v1.RemoveFromBootstrapBlacklistResponse
	(*RemoveFromBootstrapWhitelistRequest)(nil),  // 26: massa.api.v1.RemoveFromBootstrapWhitelistRequest
	(*RemoveFromBootstrapWhitelistResponse)(nil), // 27: massa.api.v1.RemoveFromBootstrapWhitelistResponse
	(*RemoveFromPeersWhitelistRequest)(nil),      // 28: massa.api.v1.RemoveFromPeersWhitelistRequest
	(*RemoveFromPeersWhitelistResponse)(nil),     // 29: massa.api.v1.RemoveFromPeersWhitelistResponse
	(*RemoveStakingAddressesRequest)(nil),        // 30: massa.api.v1.RemoveStakingAddressesRequest
	(*RemoveStakingAddressesResponse)(nil),       // 31: massa.api.v1.RemoveStakingAddressesResponse
	(*SignMessagesRequest)(nil),                  // 32: massa.api.v1.SignMessagesRequest
	(*SignMessagesResponse)(nil),                 // 33: massa.api.v1.SignMessagesResponse
	(*ShutdownGracefullyRequest)(nil),            // 34: massa.api.v1.ShutdownGracefullyRequest
	(*ShutdownGracefullyResponse)(nil),           // 35: massa.api.v1.ShutdownGracefullyResponse
	(*UnbanNodesByIdsRequest)(nil),               // 36: massa.api.v1.UnbanNodesByIdsRequest
	(*UnbanNodesByIdsResponse)(nil),              // 37: massa.api.v1.UnbanNodesByIdsResponse
	(*UnbanNodesByIpsRequest)(nil),               // 38: massa.api.v1.UnbanNodesByIpsRequest
	(*UnbanNodesByIpsResponse)(nil),              // 39: massa.api.v1.UnbanNodesByIpsResponse
	(*v1.MipStatusEntry)(nil),                    // 40: massa.model.v1.MipStatusEntry
	(*v1.NodeStatus)(nil),                        // 41: massa.model.v1.NodeStatus
}
var file_massa_api_v1_private_proto_depIdxs = []int32{
	40, // 0: massa.api.v1.GetMipStatusResponse.mipstatus_entries:type_name -> massa.model.v1.MipStatusEntry
	41, // 1: massa.api.v1.GetNodeStatusResponse.status:type_name -> massa.model.v1.NodeStatus
	0,  // 2: massa.api.v1.PrivateService.AddToBootstrapBlacklist:input_type -> massa.api.v1.AddToBootstrapBlacklistRequest
	2,  // 3: massa.api.v1.PrivateService.AddToBootstrapWhitelist:input_type -> massa.api.v1.AddToBootstrapWhitelistRequest
	4,  // 4: massa.api.v1.PrivateService.AddToPeersWhitelist:input_type -> massa.api.v1.AddToPeersWhitelistRequest
	6,  // 5: massa.api.v1.PrivateService.AddStakingSecretKeys:input_type -> massa.api.v1.AddStakingSecretKeysRequest
	8,  // 6: massa.api.v1.PrivateService.AllowEveryoneToBootstrap:input_type -> massa.api.v1.AllowEveryoneToBootstrapRequest
	10, // 7: massa.api.v1.PrivateService.GetBootstrapBlacklist:input_type -> massa.api.v1.GetBootstrapBlacklistRequest
	12, // 8: massa.api.v1.PrivateService.GetBootstrapWhitelist:input_type -> massa.api.v1.GetBootstrapWhitelistRequest
	14, // 9: massa.api.v1.PrivateService.GetMipStatus:input_type -> massa.api.v1.GetMipStatusRequest
	16, // 10: massa.api.v1.PrivateService.GetNodeStatus:input_type -> massa.api.v1.GetNodeStatusRequest
	18, // 11: massa.api.v1.PrivateService.GetPeersWhitelist:input_type -> massa.api.v1.GetPeersWhitelistRequest
	20, // 12: massa.api.v1.PrivateService.BanNodesByIds:input_type -> massa.api.v1.BanNodesByIdsRequest
	22, // 13: massa.api.v1.PrivateService.BanNodesByIps:input_type -> massa.api.v1.BanNodesByIpsRequest
	24, // 14: massa.api.v1.PrivateService.RemoveFromBootstrapBlacklist:input_type -> massa.api.v1.RemoveFromBootstrapBlacklistRequest
	26, // 15: massa.api.v1.PrivateService.RemoveFromBootstrapWhitelist:input_type -> massa.api.v1.RemoveFromBootstrapWhitelistRequest
	28, // 16: massa.api.v1.PrivateService.RemoveFromPeersWhitelist:input_type -> massa.api.v1.RemoveFromPeersWhitelistRequest
	30, // 17: massa.api.v1.PrivateService.RemoveStakingAddresses:input_type -> massa.api.v1.RemoveStakingAddressesRequest
	32, // 18: massa.api.v1.PrivateService.SignMessages:input_type -> massa.api.v1.SignMessagesRequest
	34, // 19: massa.api.v1.PrivateService.ShutdownGracefully:input_type -> massa.api.v1.ShutdownGracefullyRequest
	36, // 20: massa.api.v1.PrivateService.UnbanNodesByIds:input_type -> massa.api.v1.UnbanNodesByIdsRequest
	38, // 21: massa.api.v1.PrivateService.UnbanNodesByIps:input_type -> massa.api.v1.UnbanNodesByIpsRequest
	1,  // 22: massa.api.v1.PrivateService.AddToBootstrapBlacklist:output_type -> massa.api.v1.AddToBootstrapBlacklistResponse
	3,  // 23: massa.api.v1.PrivateService.AddToBootstrapWhitelist:output_type -> massa.api.v1.AddToBootstrapWhitelistResponse
	5,  // 24: massa.api.v1.PrivateService.AddToPeersWhitelist:output_type -> massa.api.v1.AddToPeersWhitelistResponse
	7,  // 25: massa.api.v1.PrivateService.AddStakingSecretKeys:output_type -> massa.api.v1.AddStakingSecretKeysResponse
	9,  // 26: massa.api.v1.PrivateService.AllowEveryoneToBootstrap:output_type -> massa.api.v1.AllowEveryoneToBootstrapResponse
	11, // 27: massa.api.v1.PrivateService.GetBootstrapBlacklist:output_type -> massa.api.v1.GetBootstrapBlacklistResponse
	13, // 28: massa.api.v1.PrivateService.GetBootstrapWhitelist:output_type -> massa.api.v1.GetBootstrapWhitelistResponse
	15, // 29: massa.api.v1.PrivateService.GetMipStatus:output_type -> massa.api.v1.GetMipStatusResponse
	17, // 30: massa.api.v1.PrivateService.GetNodeStatus:output_type -> massa.api.v1.GetNodeStatusResponse
	19, // 31: massa.api.v1.PrivateService.GetPeersWhitelist:output_type -> massa.api.v1.GetPeersWhitelistResponse
	21, // 32: massa.api.v1.PrivateService.BanNodesByIds:output_type -> massa.api.v1.BanNodesByIdsResponse
	23, // 33: massa.api.v1.PrivateService.BanNodesByIps:output_type -> massa.api.v1.BanNodesByIpsResponse
	25, // 34: massa.api.v1.PrivateService.RemoveFromBootstrapBlacklist:output_type -> massa.api.v1.RemoveFromBootstrapBlacklistResponse
	27, // 35: massa.api.v1.PrivateService.RemoveFromBootstrapWhitelist:output_type -> massa.api.v1.RemoveFromBootstrapWhitelistResponse
	29, // 36: massa.api.v1.PrivateService.RemoveFromPeersWhitelist:output_type -> massa.api.v1.RemoveFromPeersWhitelistResponse
	31, // 37: massa.api.v1.PrivateService.RemoveStakingAddresses:output_type -> massa.api.v1.RemoveStakingAddressesResponse
	33, // 38: massa.api.v1.PrivateService.SignMessages:output_type -> massa.api.v1.SignMessagesResponse
	35, // 39: massa.api.v1.PrivateService.ShutdownGracefully:output_type -> massa.api.v1.ShutdownGracefullyResponse
	37, // 40: massa.api.v1.PrivateService.UnbanNodesByIds:output_type -> massa.api.v1.UnbanNodesByIdsResponse
	39, // 41: massa.api.v1.PrivateService.UnbanNodesByIps:output_type -> massa.api.v1.UnbanNodesByIpsResponse
	22, // [22:42] is the sub-list for method output_type
	2,  // [2:22] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_massa_api_v1_private_proto_init() }
func file_massa_api_v1_private_proto_init() {
	if File_massa_api_v1_private_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_massa_api_v1_private_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToBootstrapBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToBootstrapBlacklistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToBootstrapWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToBootstrapWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToPeersWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToPeersWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStakingSecretKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddStakingSecretKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowEveryoneToBootstrapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowEveryoneToBootstrapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapBlacklistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBootstrapWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMipStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMipStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeersWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanNodesByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanNodesByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanNodesByIpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanNodesByIpsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromBootstrapBlacklistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromBootstrapBlacklistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromBootstrapWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromBootstrapWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromPeersWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromPeersWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStakingAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveStakingAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownGracefullyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownGracefullyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanNodesByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanNodesByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanNodesByIpsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_private_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanNodesByIpsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_massa_api_v1_private_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_massa_api_v1_private_proto_goTypes,
		DependencyIndexes: file_massa_api_v1_private_proto_depIdxs,
		MessageInfos:      file_massa_api_v1_private_proto_msgTypes,
	}.Build()
	File_massa_api_v1_private_proto = out.File
	file_massa_api_v1_private_proto_rawDesc = nil
	file_massa_api_v1_private_proto_goTypes = nil
	file_massa_api_v1_private_proto_depIdxs = nil
}
