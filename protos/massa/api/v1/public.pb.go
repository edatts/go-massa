// Copyright (c) 2023 MASSA LABS <info@massa.net>

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: massa/api/v1/public.proto

package v1

import (
	v1 "github.com/edatts/go-massa/protos/massa/model/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Execution status of an operation or denunciation
type ExecutionQueryExecutionStatus int32

const (
	ExecutionQueryExecutionStatus_EXECUTION_QUERY_EXECUTION_STATUS_UNSPECIFIED                   ExecutionQueryExecutionStatus = 0 // Default enum value
	ExecutionQueryExecutionStatus_EXECUTION_QUERY_EXECUTION_STATUS_ALREADY_EXECUTED_WITH_SUCCESS ExecutionQueryExecutionStatus = 1 // The operation or denunciation was executed recently with success
	ExecutionQueryExecutionStatus_EXECUTION_QUERY_EXECUTION_STATUS_ALREADY_EXECUTED_WITH_FAILURE ExecutionQueryExecutionStatus = 2 // The operation or denunciation was executed recently with failure
	ExecutionQueryExecutionStatus_EXECUTION_QUERY_EXECUTION_STATUS_EXECUTABLE_OR_EXPIRED         ExecutionQueryExecutionStatus = 3 // The operation or denunciation was not executed recently but can still be executed unless expired
)

// Enum value maps for ExecutionQueryExecutionStatus.
var (
	ExecutionQueryExecutionStatus_name = map[int32]string{
		0: "EXECUTION_QUERY_EXECUTION_STATUS_UNSPECIFIED",
		1: "EXECUTION_QUERY_EXECUTION_STATUS_ALREADY_EXECUTED_WITH_SUCCESS",
		2: "EXECUTION_QUERY_EXECUTION_STATUS_ALREADY_EXECUTED_WITH_FAILURE",
		3: "EXECUTION_QUERY_EXECUTION_STATUS_EXECUTABLE_OR_EXPIRED",
	}
	ExecutionQueryExecutionStatus_value = map[string]int32{
		"EXECUTION_QUERY_EXECUTION_STATUS_UNSPECIFIED":                   0,
		"EXECUTION_QUERY_EXECUTION_STATUS_ALREADY_EXECUTED_WITH_SUCCESS": 1,
		"EXECUTION_QUERY_EXECUTION_STATUS_ALREADY_EXECUTED_WITH_FAILURE": 2,
		"EXECUTION_QUERY_EXECUTION_STATUS_EXECUTABLE_OR_EXPIRED":         3,
	}
)

func (x ExecutionQueryExecutionStatus) Enum() *ExecutionQueryExecutionStatus {
	p := new(ExecutionQueryExecutionStatus)
	*p = x
	return p
}

func (x ExecutionQueryExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionQueryExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_api_v1_public_proto_enumTypes[0].Descriptor()
}

func (ExecutionQueryExecutionStatus) Type() protoreflect.EnumType {
	return &file_massa_api_v1_public_proto_enumTypes[0]
}

func (x ExecutionQueryExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionQueryExecutionStatus.Descriptor instead.
func (ExecutionQueryExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{0}
}

// Finality level to filter on in streams
type FinalityLevel int32

const (
	// Unspecified (receive both)
	FinalityLevel_FINALITY_LEVEL_UNSPECIFIED FinalityLevel = 0
	// Candidate level
	FinalityLevel_FINALITY_LEVEL_CANDIDATE FinalityLevel = 1
	// Final level
	FinalityLevel_FINALITY_LEVEL_FINAL FinalityLevel = 2
)

// Enum value maps for FinalityLevel.
var (
	FinalityLevel_name = map[int32]string{
		0: "FINALITY_LEVEL_UNSPECIFIED",
		1: "FINALITY_LEVEL_CANDIDATE",
		2: "FINALITY_LEVEL_FINAL",
	}
	FinalityLevel_value = map[string]int32{
		"FINALITY_LEVEL_UNSPECIFIED": 0,
		"FINALITY_LEVEL_CANDIDATE":   1,
		"FINALITY_LEVEL_FINAL":       2,
	}
)

func (x FinalityLevel) Enum() *FinalityLevel {
	p := new(FinalityLevel)
	*p = x
	return p
}

func (x FinalityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FinalityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_massa_api_v1_public_proto_enumTypes[1].Descriptor()
}

func (FinalityLevel) Type() protoreflect.EnumType {
	return &file_massa_api_v1_public_proto_enumTypes[1]
}

func (x FinalityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FinalityLevel.Descriptor instead.
func (FinalityLevel) EnumDescriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{1}
}

// ExecuteReadOnlyCallRequest holds request for ExecuteReadOnlyCall
type ExecuteReadOnlyCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Execution call
	Call *v1.ReadOnlyExecutionCall `protobuf:"bytes,1,opt,name=call,proto3" json:"call,omitempty"`
}

func (x *ExecuteReadOnlyCallRequest) Reset() {
	*x = ExecuteReadOnlyCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteReadOnlyCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteReadOnlyCallRequest) ProtoMessage() {}

func (x *ExecuteReadOnlyCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteReadOnlyCallRequest.ProtoReflect.Descriptor instead.
func (*ExecuteReadOnlyCallRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteReadOnlyCallRequest) GetCall() *v1.ReadOnlyExecutionCall {
	if x != nil {
		return x.Call
	}
	return nil
}

// ExecuteReadOnlyCallResponse holds response from ExecuteReadOnlyCall
type ExecuteReadOnlyCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Execution output
	Output *v1.ReadOnlyExecutionOutput `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *ExecuteReadOnlyCallResponse) Reset() {
	*x = ExecuteReadOnlyCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteReadOnlyCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteReadOnlyCallResponse) ProtoMessage() {}

func (x *ExecuteReadOnlyCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteReadOnlyCallResponse.ProtoReflect.Descriptor instead.
func (*ExecuteReadOnlyCallResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{1}
}

func (x *ExecuteReadOnlyCallResponse) GetOutput() *v1.ReadOnlyExecutionOutput {
	if x != nil {
		return x.Output
	}
	return nil
}

// GetBlocksRequest holds request for GetBlocks
type GetBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block ids
	BlockIds []string `protobuf:"bytes,1,rep,name=block_ids,json=blockIds,proto3" json:"block_ids,omitempty"`
}

func (x *GetBlocksRequest) Reset() {
	*x = GetBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksRequest) ProtoMessage() {}

func (x *GetBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksRequest.ProtoReflect.Descriptor instead.
func (*GetBlocksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{2}
}

func (x *GetBlocksRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

// GetBlocksResponse holds response from GetBlocks
type GetBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Wrapped blocks
	WrappedBlocks []*v1.BlockWrapper `protobuf:"bytes,1,rep,name=wrapped_blocks,json=wrappedBlocks,proto3" json:"wrapped_blocks,omitempty"`
}

func (x *GetBlocksResponse) Reset() {
	*x = GetBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlocksResponse) ProtoMessage() {}

func (x *GetBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlocksResponse.ProtoReflect.Descriptor instead.
func (*GetBlocksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{3}
}

func (x *GetBlocksResponse) GetWrappedBlocks() []*v1.BlockWrapper {
	if x != nil {
		return x.WrappedBlocks
	}
	return nil
}

// GetDatastoreEntriesRequest holds request from GetDatastoreEntries
type GetDatastoreEntriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the datastore entries that verify all the filters
	Filters []*GetDatastoreEntryFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *GetDatastoreEntriesRequest) Reset() {
	*x = GetDatastoreEntriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatastoreEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatastoreEntriesRequest) ProtoMessage() {}

func (x *GetDatastoreEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatastoreEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetDatastoreEntriesRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{4}
}

func (x *GetDatastoreEntriesRequest) GetFilters() []*GetDatastoreEntryFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// DatastoreEntryFilter
type GetDatastoreEntryFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*GetDatastoreEntryFilter_AddressKey
	Filter isGetDatastoreEntryFilter_Filter `protobuf_oneof:"filter"`
}

func (x *GetDatastoreEntryFilter) Reset() {
	*x = GetDatastoreEntryFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatastoreEntryFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatastoreEntryFilter) ProtoMessage() {}

func (x *GetDatastoreEntryFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatastoreEntryFilter.ProtoReflect.Descriptor instead.
func (*GetDatastoreEntryFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{5}
}

func (m *GetDatastoreEntryFilter) GetFilter() isGetDatastoreEntryFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *GetDatastoreEntryFilter) GetAddressKey() *v1.AddressKeyEntry {
	if x, ok := x.GetFilter().(*GetDatastoreEntryFilter_AddressKey); ok {
		return x.AddressKey
	}
	return nil
}

type isGetDatastoreEntryFilter_Filter interface {
	isGetDatastoreEntryFilter_Filter()
}

type GetDatastoreEntryFilter_AddressKey struct {
	// One of these (address-key) pairs
	AddressKey *v1.AddressKeyEntry `protobuf:"bytes,1,opt,name=address_key,json=addressKey,proto3,oneof"`
}

func (*GetDatastoreEntryFilter_AddressKey) isGetDatastoreEntryFilter_Filter() {}

// GetDatastoreEntriesResponse holds response from GetDatastoreEntries
type GetDatastoreEntriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Datastore entries
	DatastoreEntries []*v1.DatastoreEntry `protobuf:"bytes,1,rep,name=datastore_entries,json=datastoreEntries,proto3" json:"datastore_entries,omitempty"`
}

func (x *GetDatastoreEntriesResponse) Reset() {
	*x = GetDatastoreEntriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDatastoreEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDatastoreEntriesResponse) ProtoMessage() {}

func (x *GetDatastoreEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDatastoreEntriesResponse.ProtoReflect.Descriptor instead.
func (*GetDatastoreEntriesResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{6}
}

func (x *GetDatastoreEntriesResponse) GetDatastoreEntries() []*v1.DatastoreEntry {
	if x != nil {
		return x.DatastoreEntries
	}
	return nil
}

// GetEndorsementsRequest holds request for GetEndorsements
type GetEndorsementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Endorsement ids
	EndorsementIds []string `protobuf:"bytes,1,rep,name=endorsement_ids,json=endorsementIds,proto3" json:"endorsement_ids,omitempty"`
}

func (x *GetEndorsementsRequest) Reset() {
	*x = GetEndorsementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEndorsementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEndorsementsRequest) ProtoMessage() {}

func (x *GetEndorsementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEndorsementsRequest.ProtoReflect.Descriptor instead.
func (*GetEndorsementsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{7}
}

func (x *GetEndorsementsRequest) GetEndorsementIds() []string {
	if x != nil {
		return x.EndorsementIds
	}
	return nil
}

// GetEndorsementsResponse holds response from GetEndorsements
type GetEndorsementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Wrapped operations
	WrappedEndorsements []*v1.EndorsementWrapper `protobuf:"bytes,1,rep,name=wrapped_endorsements,json=wrappedEndorsements,proto3" json:"wrapped_endorsements,omitempty"`
}

func (x *GetEndorsementsResponse) Reset() {
	*x = GetEndorsementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEndorsementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEndorsementsResponse) ProtoMessage() {}

func (x *GetEndorsementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEndorsementsResponse.ProtoReflect.Descriptor instead.
func (*GetEndorsementsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{8}
}

func (x *GetEndorsementsResponse) GetWrappedEndorsements() []*v1.EndorsementWrapper {
	if x != nil {
		return x.WrappedEndorsements
	}
	return nil
}

// GetNextBlockBestParentsRequest holds request for GetNextBlockBestParents
type GetNextBlockBestParentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNextBlockBestParentsRequest) Reset() {
	*x = GetNextBlockBestParentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextBlockBestParentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextBlockBestParentsRequest) ProtoMessage() {}

func (x *GetNextBlockBestParentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextBlockBestParentsRequest.ProtoReflect.Descriptor instead.
func (*GetNextBlockBestParentsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{9}
}

// GetNextBlockBestParentsResponse holds response from GetNextBlockBestParents
type GetNextBlockBestParentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Next block best parents
	BlockParents []*v1.BlockParent `protobuf:"bytes,1,rep,name=block_parents,json=blockParents,proto3" json:"block_parents,omitempty"`
}

func (x *GetNextBlockBestParentsResponse) Reset() {
	*x = GetNextBlockBestParentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextBlockBestParentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextBlockBestParentsResponse) ProtoMessage() {}

func (x *GetNextBlockBestParentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextBlockBestParentsResponse.ProtoReflect.Descriptor instead.
func (*GetNextBlockBestParentsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{10}
}

func (x *GetNextBlockBestParentsResponse) GetBlockParents() []*v1.BlockParent {
	if x != nil {
		return x.BlockParents
	}
	return nil
}

// GetOperationsRequest holds request for GetOperations
type GetOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation ids
	OperationIds []string `protobuf:"bytes,1,rep,name=operation_ids,json=operationIds,proto3" json:"operation_ids,omitempty"`
}

func (x *GetOperationsRequest) Reset() {
	*x = GetOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsRequest) ProtoMessage() {}

func (x *GetOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsRequest.ProtoReflect.Descriptor instead.
func (*GetOperationsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{11}
}

func (x *GetOperationsRequest) GetOperationIds() []string {
	if x != nil {
		return x.OperationIds
	}
	return nil
}

// GetOperationsResponse holds response from GetOperations
type GetOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Wrapped operations
	WrappedOperations []*v1.OperationWrapper `protobuf:"bytes,1,rep,name=wrapped_operations,json=wrappedOperations,proto3" json:"wrapped_operations,omitempty"`
}

func (x *GetOperationsResponse) Reset() {
	*x = GetOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationsResponse) ProtoMessage() {}

func (x *GetOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationsResponse.ProtoReflect.Descriptor instead.
func (*GetOperationsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{12}
}

func (x *GetOperationsResponse) GetWrappedOperations() []*v1.OperationWrapper {
	if x != nil {
		return x.WrappedOperations
	}
	return nil
}

// GetScExecutionEventsRequest holds request for GetScExecutionEvents
type GetScExecutionEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the sc execution events that verify all the filters
	Filters []*ScExecutionEventsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *GetScExecutionEventsRequest) Reset() {
	*x = GetScExecutionEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScExecutionEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScExecutionEventsRequest) ProtoMessage() {}

func (x *GetScExecutionEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScExecutionEventsRequest.ProtoReflect.Descriptor instead.
func (*GetScExecutionEventsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{13}
}

func (x *GetScExecutionEventsRequest) GetFilters() []*ScExecutionEventsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// ScExecutionEvents Filter
type ScExecutionEventsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*ScExecutionEventsFilter_SlotRange
	//	*ScExecutionEventsFilter_CallerAddress
	//	*ScExecutionEventsFilter_EmitterAddress
	//	*ScExecutionEventsFilter_OriginalOperationId
	//	*ScExecutionEventsFilter_IsFailure
	//	*ScExecutionEventsFilter_Status
	Filter isScExecutionEventsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *ScExecutionEventsFilter) Reset() {
	*x = ScExecutionEventsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScExecutionEventsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScExecutionEventsFilter) ProtoMessage() {}

func (x *ScExecutionEventsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScExecutionEventsFilter.ProtoReflect.Descriptor instead.
func (*ScExecutionEventsFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{14}
}

func (m *ScExecutionEventsFilter) GetFilter() isScExecutionEventsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ScExecutionEventsFilter) GetSlotRange() *v1.SlotRange {
	if x, ok := x.GetFilter().(*ScExecutionEventsFilter_SlotRange); ok {
		return x.SlotRange
	}
	return nil
}

func (x *ScExecutionEventsFilter) GetCallerAddress() string {
	if x, ok := x.GetFilter().(*ScExecutionEventsFilter_CallerAddress); ok {
		return x.CallerAddress
	}
	return ""
}

func (x *ScExecutionEventsFilter) GetEmitterAddress() string {
	if x, ok := x.GetFilter().(*ScExecutionEventsFilter_EmitterAddress); ok {
		return x.EmitterAddress
	}
	return ""
}

func (x *ScExecutionEventsFilter) GetOriginalOperationId() string {
	if x, ok := x.GetFilter().(*ScExecutionEventsFilter_OriginalOperationId); ok {
		return x.OriginalOperationId
	}
	return ""
}

func (x *ScExecutionEventsFilter) GetIsFailure() bool {
	if x, ok := x.GetFilter().(*ScExecutionEventsFilter_IsFailure); ok {
		return x.IsFailure
	}
	return false
}

func (x *ScExecutionEventsFilter) GetStatus() v1.ScExecutionEventStatus {
	if x, ok := x.GetFilter().(*ScExecutionEventsFilter_Status); ok {
		return x.Status
	}
	return v1.ScExecutionEventStatus(0)
}

type isScExecutionEventsFilter_Filter interface {
	isScExecutionEventsFilter_Filter()
}

type ScExecutionEventsFilter_SlotRange struct {
	// Slot range
	SlotRange *v1.SlotRange `protobuf:"bytes,1,opt,name=slot_range,json=slotRange,proto3,oneof"`
}

type ScExecutionEventsFilter_CallerAddress struct {
	// Caller address
	CallerAddress string `protobuf:"bytes,2,opt,name=caller_address,json=callerAddress,proto3,oneof"`
}

type ScExecutionEventsFilter_EmitterAddress struct {
	// Emitter address
	EmitterAddress string `protobuf:"bytes,3,opt,name=emitter_address,json=emitterAddress,proto3,oneof"`
}

type ScExecutionEventsFilter_OriginalOperationId struct {
	// Original operation id
	OriginalOperationId string `protobuf:"bytes,4,opt,name=original_operation_id,json=originalOperationId,proto3,oneof"`
}

type ScExecutionEventsFilter_IsFailure struct {
	// Whether the event is a failure
	IsFailure bool `protobuf:"varint,5,opt,name=is_failure,json=isFailure,proto3,oneof"`
}

type ScExecutionEventsFilter_Status struct {
	// Status
	Status v1.ScExecutionEventStatus `protobuf:"varint,6,opt,name=status,proto3,enum=massa.model.v1.ScExecutionEventStatus,oneof"`
}

func (*ScExecutionEventsFilter_SlotRange) isScExecutionEventsFilter_Filter() {}

func (*ScExecutionEventsFilter_CallerAddress) isScExecutionEventsFilter_Filter() {}

func (*ScExecutionEventsFilter_EmitterAddress) isScExecutionEventsFilter_Filter() {}

func (*ScExecutionEventsFilter_OriginalOperationId) isScExecutionEventsFilter_Filter() {}

func (*ScExecutionEventsFilter_IsFailure) isScExecutionEventsFilter_Filter() {}

func (*ScExecutionEventsFilter_Status) isScExecutionEventsFilter_Filter() {}

// GetScExecutionEventsResponse holds response from GetScExecutionEvents
type GetScExecutionEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ScExecutionEvents
	Events []*v1.ScExecutionEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetScExecutionEventsResponse) Reset() {
	*x = GetScExecutionEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScExecutionEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScExecutionEventsResponse) ProtoMessage() {}

func (x *GetScExecutionEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScExecutionEventsResponse.ProtoReflect.Descriptor instead.
func (*GetScExecutionEventsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{15}
}

func (x *GetScExecutionEventsResponse) GetEvents() []*v1.ScExecutionEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// GetStatusRequest holds request from GetStatus
type GetStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{16}
}

// GetStatusResponse holds request from GetStatus
type GetStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status
	Status *v1.PublicStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{17}
}

func (x *GetStatusResponse) GetStatus() *v1.PublicStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// GetSelectorDrawsRequest holds request from GetSelectorDraws
type GetSelectorDrawsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the selector draws that verify all the filters
	Filters []*SelectorDrawsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *GetSelectorDrawsRequest) Reset() {
	*x = GetSelectorDrawsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelectorDrawsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelectorDrawsRequest) ProtoMessage() {}

func (x *GetSelectorDrawsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelectorDrawsRequest.ProtoReflect.Descriptor instead.
func (*GetSelectorDrawsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{18}
}

func (x *GetSelectorDrawsRequest) GetFilters() []*SelectorDrawsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// SelectorDraws Filter
type SelectorDrawsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the selector draws that verify all the filters
	//
	// Types that are assignable to Filter:
	//
	//	*SelectorDrawsFilter_Addresses
	//	*SelectorDrawsFilter_SlotRange
	Filter isSelectorDrawsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *SelectorDrawsFilter) Reset() {
	*x = SelectorDrawsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectorDrawsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectorDrawsFilter) ProtoMessage() {}

func (x *SelectorDrawsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectorDrawsFilter.ProtoReflect.Descriptor instead.
func (*SelectorDrawsFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{19}
}

func (m *SelectorDrawsFilter) GetFilter() isSelectorDrawsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *SelectorDrawsFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*SelectorDrawsFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *SelectorDrawsFilter) GetSlotRange() *v1.SlotRange {
	if x, ok := x.GetFilter().(*SelectorDrawsFilter_SlotRange); ok {
		return x.SlotRange
	}
	return nil
}

type isSelectorDrawsFilter_Filter interface {
	isSelectorDrawsFilter_Filter()
}

type SelectorDrawsFilter_Addresses struct {
	// One of the Addresses
	Addresses *v1.Addresses `protobuf:"bytes,1,opt,name=addresses,proto3,oneof"`
}

type SelectorDrawsFilter_SlotRange struct {
	// One of the Slot range
	SlotRange *v1.SlotRange `protobuf:"bytes,2,opt,name=slot_range,json=slotRange,proto3,oneof"`
}

func (*SelectorDrawsFilter_Addresses) isSelectorDrawsFilter_Filter() {}

func (*SelectorDrawsFilter_SlotRange) isSelectorDrawsFilter_Filter() {}

// GetSelectorDrawsResponse holds response from GetSelectorDraws
type GetSelectorDrawsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Selector draws
	Draws []*v1.SlotDraw `protobuf:"bytes,1,rep,name=draws,proto3" json:"draws,omitempty"`
}

func (x *GetSelectorDrawsResponse) Reset() {
	*x = GetSelectorDrawsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSelectorDrawsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSelectorDrawsResponse) ProtoMessage() {}

func (x *GetSelectorDrawsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSelectorDrawsResponse.ProtoReflect.Descriptor instead.
func (*GetSelectorDrawsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{20}
}

func (x *GetSelectorDrawsResponse) GetDraws() []*v1.SlotDraw {
	if x != nil {
		return x.Draws
	}
	return nil
}

// GetStakersRequest holds request from GetStakers
type GetStakersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the stakers that verify all the filters
	Filters []*StakersFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *GetStakersRequest) Reset() {
	*x = GetStakersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakersRequest) ProtoMessage() {}

func (x *GetStakersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStakersRequest.ProtoReflect.Descriptor instead.
func (*GetStakersRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{21}
}

func (x *GetStakersRequest) GetFilters() []*StakersFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Stakers Filter
type StakersFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the stakers that verify all the filters
	//
	// Types that are assignable to Filter:
	//
	//	*StakersFilter_MinRolls
	//	*StakersFilter_MaxRolls
	//	*StakersFilter_Limit
	Filter isStakersFilter_Filter `protobuf_oneof:"filter"`
}

func (x *StakersFilter) Reset() {
	*x = StakersFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StakersFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StakersFilter) ProtoMessage() {}

func (x *StakersFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StakersFilter.ProtoReflect.Descriptor instead.
func (*StakersFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{22}
}

func (m *StakersFilter) GetFilter() isStakersFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *StakersFilter) GetMinRolls() uint64 {
	if x, ok := x.GetFilter().(*StakersFilter_MinRolls); ok {
		return x.MinRolls
	}
	return 0
}

func (x *StakersFilter) GetMaxRolls() uint64 {
	if x, ok := x.GetFilter().(*StakersFilter_MaxRolls); ok {
		return x.MaxRolls
	}
	return 0
}

func (x *StakersFilter) GetLimit() uint64 {
	if x, ok := x.GetFilter().(*StakersFilter_Limit); ok {
		return x.Limit
	}
	return 0
}

type isStakersFilter_Filter interface {
	isStakersFilter_Filter()
}

type StakersFilter_MinRolls struct {
	// Minimum rolls
	MinRolls uint64 `protobuf:"varint,1,opt,name=min_rolls,json=minRolls,proto3,oneof"`
}

type StakersFilter_MaxRolls struct {
	// Maximum rolls
	MaxRolls uint64 `protobuf:"varint,2,opt,name=max_rolls,json=maxRolls,proto3,oneof"`
}

type StakersFilter_Limit struct {
	// Limit
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3,oneof"`
}

func (*StakersFilter_MinRolls) isStakersFilter_Filter() {}

func (*StakersFilter_MaxRolls) isStakersFilter_Filter() {}

func (*StakersFilter_Limit) isStakersFilter_Filter() {}

// GetStakersResponse holds response from GetStakers
type GetStakersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Stakers
	Stakers []*v1.StakerEntry `protobuf:"bytes,1,rep,name=stakers,proto3" json:"stakers,omitempty"`
}

func (x *GetStakersResponse) Reset() {
	*x = GetStakersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStakersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStakersResponse) ProtoMessage() {}

func (x *GetStakersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStakersResponse.ProtoReflect.Descriptor instead.
func (*GetStakersResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{23}
}

func (x *GetStakersResponse) GetStakers() []*v1.StakerEntry {
	if x != nil {
		return x.Stakers
	}
	return nil
}

// GetTransactionsThroughputRequest holds request for GetTransactionsThroughput
type GetTransactionsThroughputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTransactionsThroughputRequest) Reset() {
	*x = GetTransactionsThroughputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsThroughputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsThroughputRequest) ProtoMessage() {}

func (x *GetTransactionsThroughputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsThroughputRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsThroughputRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{24}
}

// GetTransactionsThroughputResponse holds response from GetTransactionsThroughput
type GetTransactionsThroughputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transactions throughput
	Throughput uint32 `protobuf:"varint,1,opt,name=throughput,proto3" json:"throughput,omitempty"`
}

func (x *GetTransactionsThroughputResponse) Reset() {
	*x = GetTransactionsThroughputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionsThroughputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsThroughputResponse) ProtoMessage() {}

func (x *GetTransactionsThroughputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsThroughputResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsThroughputResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{25}
}

func (x *GetTransactionsThroughputResponse) GetThroughput() uint32 {
	if x != nil {
		return x.Throughput
	}
	return 0
}

// Request to atomically execute a batch of execution state queries
type QueryStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Execution queries
	Queries []*ExecutionQueryRequestItem `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *QueryStateRequest) Reset() {
	*x = QueryStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStateRequest) ProtoMessage() {}

func (x *QueryStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStateRequest.ProtoReflect.Descriptor instead.
func (*QueryStateRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{26}
}

func (x *QueryStateRequest) GetQueries() []*ExecutionQueryRequestItem {
	if x != nil {
		return x.Queries
	}
	return nil
}

// Query state query item
type ExecutionQueryRequestItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RequestItem:
	//
	//	*ExecutionQueryRequestItem_AddressExistsCandidate
	//	*ExecutionQueryRequestItem_AddressExistsFinal
	//	*ExecutionQueryRequestItem_AddressBalanceCandidate
	//	*ExecutionQueryRequestItem_AddressBalanceFinal
	//	*ExecutionQueryRequestItem_AddressBytecodeCandidate
	//	*ExecutionQueryRequestItem_AddressBytecodeFinal
	//	*ExecutionQueryRequestItem_AddressDatastoreKeysCandidate
	//	*ExecutionQueryRequestItem_AddressDatastoreKeysFinal
	//	*ExecutionQueryRequestItem_AddressDatastoreValueCandidate
	//	*ExecutionQueryRequestItem_AddressDatastoreValueFinal
	//	*ExecutionQueryRequestItem_OpExecutionStatusCandidate
	//	*ExecutionQueryRequestItem_OpExecutionStatusFinal
	//	*ExecutionQueryRequestItem_DenunciationExecutionStatusCandidate
	//	*ExecutionQueryRequestItem_DenunciationExecutionStatusFinal
	//	*ExecutionQueryRequestItem_AddressRollsCandidate
	//	*ExecutionQueryRequestItem_AddressRollsFinal
	//	*ExecutionQueryRequestItem_AddressDeferredCreditsCandidate
	//	*ExecutionQueryRequestItem_AddressDeferredCreditsFinal
	//	*ExecutionQueryRequestItem_CycleInfos
	//	*ExecutionQueryRequestItem_Events
	RequestItem isExecutionQueryRequestItem_RequestItem `protobuf_oneof:"request_item"`
}

func (x *ExecutionQueryRequestItem) Reset() {
	*x = ExecutionQueryRequestItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryRequestItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryRequestItem) ProtoMessage() {}

func (x *ExecutionQueryRequestItem) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryRequestItem.ProtoReflect.Descriptor instead.
func (*ExecutionQueryRequestItem) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{27}
}

func (m *ExecutionQueryRequestItem) GetRequestItem() isExecutionQueryRequestItem_RequestItem {
	if m != nil {
		return m.RequestItem
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressExistsCandidate() *AddressExistsCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressExistsCandidate); ok {
		return x.AddressExistsCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressExistsFinal() *AddressExistsFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressExistsFinal); ok {
		return x.AddressExistsFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressBalanceCandidate() *AddressBalanceCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressBalanceCandidate); ok {
		return x.AddressBalanceCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressBalanceFinal() *AddressBalanceFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressBalanceFinal); ok {
		return x.AddressBalanceFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressBytecodeCandidate() *AddressBytecodeCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressBytecodeCandidate); ok {
		return x.AddressBytecodeCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressBytecodeFinal() *AddressBytecodeFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressBytecodeFinal); ok {
		return x.AddressBytecodeFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressDatastoreKeysCandidate() *AddressDatastoreKeysCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressDatastoreKeysCandidate); ok {
		return x.AddressDatastoreKeysCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressDatastoreKeysFinal() *AddressDatastoreKeysFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressDatastoreKeysFinal); ok {
		return x.AddressDatastoreKeysFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressDatastoreValueCandidate() *AddressDatastoreValueCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressDatastoreValueCandidate); ok {
		return x.AddressDatastoreValueCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressDatastoreValueFinal() *AddressDatastoreValueFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressDatastoreValueFinal); ok {
		return x.AddressDatastoreValueFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetOpExecutionStatusCandidate() *OpExecutionStatusCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_OpExecutionStatusCandidate); ok {
		return x.OpExecutionStatusCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetOpExecutionStatusFinal() *OpExecutionStatusFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_OpExecutionStatusFinal); ok {
		return x.OpExecutionStatusFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetDenunciationExecutionStatusCandidate() *DenunciationExecutionStatusCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_DenunciationExecutionStatusCandidate); ok {
		return x.DenunciationExecutionStatusCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetDenunciationExecutionStatusFinal() *DenunciationExecutionStatusFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_DenunciationExecutionStatusFinal); ok {
		return x.DenunciationExecutionStatusFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressRollsCandidate() *AddressRollsCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressRollsCandidate); ok {
		return x.AddressRollsCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressRollsFinal() *AddressRollsFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressRollsFinal); ok {
		return x.AddressRollsFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressDeferredCreditsCandidate() *AddressDeferredCreditsCandidate {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressDeferredCreditsCandidate); ok {
		return x.AddressDeferredCreditsCandidate
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetAddressDeferredCreditsFinal() *AddressDeferredCreditsFinal {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_AddressDeferredCreditsFinal); ok {
		return x.AddressDeferredCreditsFinal
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetCycleInfos() *CycleInfos {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_CycleInfos); ok {
		return x.CycleInfos
	}
	return nil
}

func (x *ExecutionQueryRequestItem) GetEvents() *Events {
	if x, ok := x.GetRequestItem().(*ExecutionQueryRequestItem_Events); ok {
		return x.Events
	}
	return nil
}

type isExecutionQueryRequestItem_RequestItem interface {
	isExecutionQueryRequestItem_RequestItem()
}

type ExecutionQueryRequestItem_AddressExistsCandidate struct {
	// Checks if address exists (candidate)
	AddressExistsCandidate *AddressExistsCandidate `protobuf:"bytes,1,opt,name=address_exists_candidate,json=addressExistsCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressExistsFinal struct {
	// Checks if address exists (final)
	AddressExistsFinal *AddressExistsFinal `protobuf:"bytes,2,opt,name=address_exists_final,json=addressExistsFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressBalanceCandidate struct {
	// Gets the balance (candidate) of an address
	AddressBalanceCandidate *AddressBalanceCandidate `protobuf:"bytes,3,opt,name=address_balance_candidate,json=addressBalanceCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressBalanceFinal struct {
	// Gets the balance (final) of an address
	AddressBalanceFinal *AddressBalanceFinal `protobuf:"bytes,4,opt,name=address_balance_final,json=addressBalanceFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressBytecodeCandidate struct {
	// Gets the bytecode (candidate) of an address
	AddressBytecodeCandidate *AddressBytecodeCandidate `protobuf:"bytes,5,opt,name=address_bytecode_candidate,json=addressBytecodeCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressBytecodeFinal struct {
	// Gets the bytecode (final) of an address
	AddressBytecodeFinal *AddressBytecodeFinal `protobuf:"bytes,6,opt,name=address_bytecode_final,json=addressBytecodeFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressDatastoreKeysCandidate struct {
	// Gets the datastore keys (candidate) of an address
	AddressDatastoreKeysCandidate *AddressDatastoreKeysCandidate `protobuf:"bytes,7,opt,name=address_datastore_keys_candidate,json=addressDatastoreKeysCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressDatastoreKeysFinal struct {
	// Gets the datastore keys (final) of an address
	AddressDatastoreKeysFinal *AddressDatastoreKeysFinal `protobuf:"bytes,8,opt,name=address_datastore_keys_final,json=addressDatastoreKeysFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressDatastoreValueCandidate struct {
	// Gets a datastore value (candidate) for an address
	AddressDatastoreValueCandidate *AddressDatastoreValueCandidate `protobuf:"bytes,9,opt,name=address_datastore_value_candidate,json=addressDatastoreValueCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressDatastoreValueFinal struct {
	// Gets a datastore value (final) for an address
	AddressDatastoreValueFinal *AddressDatastoreValueFinal `protobuf:"bytes,10,opt,name=address_datastore_value_final,json=addressDatastoreValueFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_OpExecutionStatusCandidate struct {
	// Gets the execution status (candidate) for an operation
	OpExecutionStatusCandidate *OpExecutionStatusCandidate `protobuf:"bytes,11,opt,name=op_execution_status_candidate,json=opExecutionStatusCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_OpExecutionStatusFinal struct {
	// Gets the execution status (final) for an operation
	OpExecutionStatusFinal *OpExecutionStatusFinal `protobuf:"bytes,12,opt,name=op_execution_status_final,json=opExecutionStatusFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_DenunciationExecutionStatusCandidate struct {
	// Gets the execution status (candidate) for a denunciation
	DenunciationExecutionStatusCandidate *DenunciationExecutionStatusCandidate `protobuf:"bytes,13,opt,name=denunciation_execution_status_candidate,json=denunciationExecutionStatusCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_DenunciationExecutionStatusFinal struct {
	// Gets the execution status (final) for a denunciation
	DenunciationExecutionStatusFinal *DenunciationExecutionStatusFinal `protobuf:"bytes,14,opt,name=denunciation_execution_status_final,json=denunciationExecutionStatusFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressRollsCandidate struct {
	// Gets the roll count (candidate) of an address
	AddressRollsCandidate *AddressRollsCandidate `protobuf:"bytes,15,opt,name=address_rolls_candidate,json=addressRollsCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressRollsFinal struct {
	// Gets the roll count (final) of an address
	AddressRollsFinal *AddressRollsFinal `protobuf:"bytes,16,opt,name=address_rolls_final,json=addressRollsFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressDeferredCreditsCandidate struct {
	// Gets the deferred credits (candidate) of an address
	AddressDeferredCreditsCandidate *AddressDeferredCreditsCandidate `protobuf:"bytes,17,opt,name=address_deferred_credits_candidate,json=addressDeferredCreditsCandidate,proto3,oneof"`
}

type ExecutionQueryRequestItem_AddressDeferredCreditsFinal struct {
	// Gets the deferred credits (final) of an address
	AddressDeferredCreditsFinal *AddressDeferredCreditsFinal `protobuf:"bytes,18,opt,name=address_deferred_credits_final,json=addressDeferredCreditsFinal,proto3,oneof"`
}

type ExecutionQueryRequestItem_CycleInfos struct {
	// Gets all information for a given cycle
	CycleInfos *CycleInfos `protobuf:"bytes,19,opt,name=cycle_infos,json=cycleInfos,proto3,oneof"`
}

type ExecutionQueryRequestItem_Events struct {
	// Gets filtered events
	Events *Events `protobuf:"bytes,20,opt,name=events,proto3,oneof"`
}

func (*ExecutionQueryRequestItem_AddressExistsCandidate) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_AddressExistsFinal) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_AddressBalanceCandidate) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_AddressBalanceFinal) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_AddressBytecodeCandidate) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_AddressBytecodeFinal) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_AddressDatastoreKeysCandidate) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_AddressDatastoreKeysFinal) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_AddressDatastoreValueCandidate) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_AddressDatastoreValueFinal) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_OpExecutionStatusCandidate) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_OpExecutionStatusFinal) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_DenunciationExecutionStatusCandidate) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_DenunciationExecutionStatusFinal) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_AddressRollsCandidate) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_AddressRollsFinal) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_AddressDeferredCreditsCandidate) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_AddressDeferredCreditsFinal) isExecutionQueryRequestItem_RequestItem() {
}

func (*ExecutionQueryRequestItem_CycleInfos) isExecutionQueryRequestItem_RequestItem() {}

func (*ExecutionQueryRequestItem_Events) isExecutionQueryRequestItem_RequestItem() {}

// Request to check if address exists (candidate)
type AddressExistsCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to check
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressExistsCandidate) Reset() {
	*x = AddressExistsCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressExistsCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressExistsCandidate) ProtoMessage() {}

func (x *AddressExistsCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressExistsCandidate.ProtoReflect.Descriptor instead.
func (*AddressExistsCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{28}
}

func (x *AddressExistsCandidate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to check if address exists (final)
type AddressExistsFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to check
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressExistsFinal) Reset() {
	*x = AddressExistsFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressExistsFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressExistsFinal) ProtoMessage() {}

func (x *AddressExistsFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressExistsFinal.ProtoReflect.Descriptor instead.
func (*AddressExistsFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{29}
}

func (x *AddressExistsFinal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the balance (candidate) of an address
type AddressBalanceCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressBalanceCandidate) Reset() {
	*x = AddressBalanceCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressBalanceCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBalanceCandidate) ProtoMessage() {}

func (x *AddressBalanceCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBalanceCandidate.ProtoReflect.Descriptor instead.
func (*AddressBalanceCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{30}
}

func (x *AddressBalanceCandidate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the balance (final) of an address
type AddressBalanceFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressBalanceFinal) Reset() {
	*x = AddressBalanceFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressBalanceFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBalanceFinal) ProtoMessage() {}

func (x *AddressBalanceFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBalanceFinal.ProtoReflect.Descriptor instead.
func (*AddressBalanceFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{31}
}

func (x *AddressBalanceFinal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the bytecode (candidate) of an address
type AddressBytecodeCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressBytecodeCandidate) Reset() {
	*x = AddressBytecodeCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressBytecodeCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBytecodeCandidate) ProtoMessage() {}

func (x *AddressBytecodeCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBytecodeCandidate.ProtoReflect.Descriptor instead.
func (*AddressBytecodeCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{32}
}

func (x *AddressBytecodeCandidate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the bytecode (final) of an address
type AddressBytecodeFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressBytecodeFinal) Reset() {
	*x = AddressBytecodeFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressBytecodeFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBytecodeFinal) ProtoMessage() {}

func (x *AddressBytecodeFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBytecodeFinal.ProtoReflect.Descriptor instead.
func (*AddressBytecodeFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{33}
}

func (x *AddressBytecodeFinal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the datastore keys (candidate) of an address
type AddressDatastoreKeysCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Prefix for the keys
	Prefix []byte `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *AddressDatastoreKeysCandidate) Reset() {
	*x = AddressDatastoreKeysCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDatastoreKeysCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDatastoreKeysCandidate) ProtoMessage() {}

func (x *AddressDatastoreKeysCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDatastoreKeysCandidate.ProtoReflect.Descriptor instead.
func (*AddressDatastoreKeysCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{34}
}

func (x *AddressDatastoreKeysCandidate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressDatastoreKeysCandidate) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

// Request to get the datastore keys (final) of an address
type AddressDatastoreKeysFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Prefix for the keys
	Prefix []byte `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *AddressDatastoreKeysFinal) Reset() {
	*x = AddressDatastoreKeysFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDatastoreKeysFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDatastoreKeysFinal) ProtoMessage() {}

func (x *AddressDatastoreKeysFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDatastoreKeysFinal.ProtoReflect.Descriptor instead.
func (*AddressDatastoreKeysFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{35}
}

func (x *AddressDatastoreKeysFinal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressDatastoreKeysFinal) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

// Request to get a datastore value (candidate) for an address
type AddressDatastoreValueCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Key for the value
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *AddressDatastoreValueCandidate) Reset() {
	*x = AddressDatastoreValueCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDatastoreValueCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDatastoreValueCandidate) ProtoMessage() {}

func (x *AddressDatastoreValueCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDatastoreValueCandidate.ProtoReflect.Descriptor instead.
func (*AddressDatastoreValueCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{36}
}

func (x *AddressDatastoreValueCandidate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressDatastoreValueCandidate) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// Request to get a datastore value (final) for an address
type AddressDatastoreValueFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Key for the value
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *AddressDatastoreValueFinal) Reset() {
	*x = AddressDatastoreValueFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDatastoreValueFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDatastoreValueFinal) ProtoMessage() {}

func (x *AddressDatastoreValueFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDatastoreValueFinal.ProtoReflect.Descriptor instead.
func (*AddressDatastoreValueFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{37}
}

func (x *AddressDatastoreValueFinal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressDatastoreValueFinal) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

// Request to get the execution status (candidate) for an operation
type OpExecutionStatusCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation ID to query
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *OpExecutionStatusCandidate) Reset() {
	*x = OpExecutionStatusCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpExecutionStatusCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpExecutionStatusCandidate) ProtoMessage() {}

func (x *OpExecutionStatusCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpExecutionStatusCandidate.ProtoReflect.Descriptor instead.
func (*OpExecutionStatusCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{38}
}

func (x *OpExecutionStatusCandidate) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

// Request to get the execution status (final) for an operation
type OpExecutionStatusFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation ID to query
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
}

func (x *OpExecutionStatusFinal) Reset() {
	*x = OpExecutionStatusFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpExecutionStatusFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpExecutionStatusFinal) ProtoMessage() {}

func (x *OpExecutionStatusFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpExecutionStatusFinal.ProtoReflect.Descriptor instead.
func (*OpExecutionStatusFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{39}
}

func (x *OpExecutionStatusFinal) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

// Request to get the execution status (candidate) for a denunciation
type DenunciationExecutionStatusCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Denunciation index to query
	DenunciationIndex *v1.DenunciationIndex `protobuf:"bytes,1,opt,name=denunciation_index,json=denunciationIndex,proto3" json:"denunciation_index,omitempty"`
}

func (x *DenunciationExecutionStatusCandidate) Reset() {
	*x = DenunciationExecutionStatusCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenunciationExecutionStatusCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenunciationExecutionStatusCandidate) ProtoMessage() {}

func (x *DenunciationExecutionStatusCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenunciationExecutionStatusCandidate.ProtoReflect.Descriptor instead.
func (*DenunciationExecutionStatusCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{40}
}

func (x *DenunciationExecutionStatusCandidate) GetDenunciationIndex() *v1.DenunciationIndex {
	if x != nil {
		return x.DenunciationIndex
	}
	return nil
}

// Request to get the execution status (final) for a denunciation
type DenunciationExecutionStatusFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Denunciation index to query
	DenunciationIndex *v1.DenunciationIndex `protobuf:"bytes,1,opt,name=denunciation_index,json=denunciationIndex,proto3" json:"denunciation_index,omitempty"`
}

func (x *DenunciationExecutionStatusFinal) Reset() {
	*x = DenunciationExecutionStatusFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenunciationExecutionStatusFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenunciationExecutionStatusFinal) ProtoMessage() {}

func (x *DenunciationExecutionStatusFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenunciationExecutionStatusFinal.ProtoReflect.Descriptor instead.
func (*DenunciationExecutionStatusFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{41}
}

func (x *DenunciationExecutionStatusFinal) GetDenunciationIndex() *v1.DenunciationIndex {
	if x != nil {
		return x.DenunciationIndex
	}
	return nil
}

// Request to get the roll count (candidate) of an address
type AddressRollsCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressRollsCandidate) Reset() {
	*x = AddressRollsCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressRollsCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressRollsCandidate) ProtoMessage() {}

func (x *AddressRollsCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressRollsCandidate.ProtoReflect.Descriptor instead.
func (*AddressRollsCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{42}
}

func (x *AddressRollsCandidate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the roll count (final) of an address
type AddressRollsFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressRollsFinal) Reset() {
	*x = AddressRollsFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressRollsFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressRollsFinal) ProtoMessage() {}

func (x *AddressRollsFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressRollsFinal.ProtoReflect.Descriptor instead.
func (*AddressRollsFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{43}
}

func (x *AddressRollsFinal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the deferred credits (candidate) of an address
type AddressDeferredCreditsCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressDeferredCreditsCandidate) Reset() {
	*x = AddressDeferredCreditsCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDeferredCreditsCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDeferredCreditsCandidate) ProtoMessage() {}

func (x *AddressDeferredCreditsCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDeferredCreditsCandidate.ProtoReflect.Descriptor instead.
func (*AddressDeferredCreditsCandidate) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{44}
}

func (x *AddressDeferredCreditsCandidate) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get the deferred credits (final) of an address
type AddressDeferredCreditsFinal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address to query
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AddressDeferredCreditsFinal) Reset() {
	*x = AddressDeferredCreditsFinal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressDeferredCreditsFinal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressDeferredCreditsFinal) ProtoMessage() {}

func (x *AddressDeferredCreditsFinal) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressDeferredCreditsFinal.ProtoReflect.Descriptor instead.
func (*AddressDeferredCreditsFinal) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{45}
}

func (x *AddressDeferredCreditsFinal) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Request to get all information for a given cycle
type CycleInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cycle to query
	Cycle uint64 `protobuf:"varint,1,opt,name=cycle,proto3" json:"cycle,omitempty"`
	// Addresses to restrict the query (if None, info for all addresses will be returned)
	RestrictToAddresses []string `protobuf:"bytes,2,rep,name=restrict_to_addresses,json=restrictToAddresses,proto3" json:"restrict_to_addresses,omitempty"`
}

func (x *CycleInfos) Reset() {
	*x = CycleInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CycleInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CycleInfos) ProtoMessage() {}

func (x *CycleInfos) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CycleInfos.ProtoReflect.Descriptor instead.
func (*CycleInfos) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{46}
}

func (x *CycleInfos) GetCycle() uint64 {
	if x != nil {
		return x.Cycle
	}
	return 0
}

func (x *CycleInfos) GetRestrictToAddresses() []string {
	if x != nil {
		return x.RestrictToAddresses
	}
	return nil
}

// Request to get filtered events
type Events struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the events that verify all the filters
	Filters []*ScExecutionEventsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *Events) Reset() {
	*x = Events{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Events) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Events) ProtoMessage() {}

func (x *Events) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Events.ProtoReflect.Descriptor instead.
func (*Events) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{47}
}

func (x *Events) GetFilters() []*ScExecutionEventsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Response to atomically execute a batch of execution state queries
type QueryStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Final cursor position
	FinalCursor *v1.Slot `protobuf:"bytes,1,opt,name=final_cursor,json=finalCursor,proto3" json:"final_cursor,omitempty"`
	// Candidate cursor position
	CandidateCursor *v1.Slot `protobuf:"bytes,2,opt,name=candidate_cursor,json=candidateCursor,proto3" json:"candidate_cursor,omitempty"`
	// The hash of the XOF final state hash
	FinalStateFingerprint string `protobuf:"bytes,3,opt,name=final_state_fingerprint,json=finalStateFingerprint,proto3" json:"final_state_fingerprint,omitempty"`
	// List of execution query response items
	Responses []*ExecutionQueryResponse `protobuf:"bytes,4,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *QueryStateResponse) Reset() {
	*x = QueryStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStateResponse) ProtoMessage() {}

func (x *QueryStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStateResponse.ProtoReflect.Descriptor instead.
func (*QueryStateResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{48}
}

func (x *QueryStateResponse) GetFinalCursor() *v1.Slot {
	if x != nil {
		return x.FinalCursor
	}
	return nil
}

func (x *QueryStateResponse) GetCandidateCursor() *v1.Slot {
	if x != nil {
		return x.CandidateCursor
	}
	return nil
}

func (x *QueryStateResponse) GetFinalStateFingerprint() string {
	if x != nil {
		return x.FinalStateFingerprint
	}
	return ""
}

func (x *QueryStateResponse) GetResponses() []*ExecutionQueryResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

// Execution state query response
type ExecutionQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Result or error
	//
	// Types that are assignable to Response:
	//
	//	*ExecutionQueryResponse_Result
	//	*ExecutionQueryResponse_Error
	Response isExecutionQueryResponse_Response `protobuf_oneof:"response"`
}

func (x *ExecutionQueryResponse) Reset() {
	*x = ExecutionQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryResponse) ProtoMessage() {}

func (x *ExecutionQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecutionQueryResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{49}
}

func (m *ExecutionQueryResponse) GetResponse() isExecutionQueryResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ExecutionQueryResponse) GetResult() *ExecutionQueryResponseItem {
	if x, ok := x.GetResponse().(*ExecutionQueryResponse_Result); ok {
		return x.Result
	}
	return nil
}

func (x *ExecutionQueryResponse) GetError() *v1.Error {
	if x, ok := x.GetResponse().(*ExecutionQueryResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isExecutionQueryResponse_Response interface {
	isExecutionQueryResponse_Response()
}

type ExecutionQueryResponse_Result struct {
	// Execution query response item
	Result *ExecutionQueryResponseItem `protobuf:"bytes,1,opt,name=result,proto3,oneof"`
}

type ExecutionQueryResponse_Error struct {
	// Massa error
	Error *v1.Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*ExecutionQueryResponse_Result) isExecutionQueryResponse_Response() {}

func (*ExecutionQueryResponse_Error) isExecutionQueryResponse_Response() {}

// Execution state query response item
type ExecutionQueryResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResponseItem:
	//
	//	*ExecutionQueryResponseItem_Boolean
	//	*ExecutionQueryResponseItem_RollCount
	//	*ExecutionQueryResponseItem_Amount
	//	*ExecutionQueryResponseItem_Bytes
	//	*ExecutionQueryResponseItem_VecBytes
	//	*ExecutionQueryResponseItem_DeferredCredits
	//	*ExecutionQueryResponseItem_ExecutionStatus
	//	*ExecutionQueryResponseItem_CycleInfos
	//	*ExecutionQueryResponseItem_Events
	ResponseItem isExecutionQueryResponseItem_ResponseItem `protobuf_oneof:"response_item"`
}

func (x *ExecutionQueryResponseItem) Reset() {
	*x = ExecutionQueryResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryResponseItem) ProtoMessage() {}

func (x *ExecutionQueryResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryResponseItem.ProtoReflect.Descriptor instead.
func (*ExecutionQueryResponseItem) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{50}
}

func (m *ExecutionQueryResponseItem) GetResponseItem() isExecutionQueryResponseItem_ResponseItem {
	if m != nil {
		return m.ResponseItem
	}
	return nil
}

func (x *ExecutionQueryResponseItem) GetBoolean() bool {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (x *ExecutionQueryResponseItem) GetRollCount() uint64 {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_RollCount); ok {
		return x.RollCount
	}
	return 0
}

func (x *ExecutionQueryResponseItem) GetAmount() *v1.NativeAmount {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_Amount); ok {
		return x.Amount
	}
	return nil
}

func (x *ExecutionQueryResponseItem) GetBytes() []byte {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *ExecutionQueryResponseItem) GetVecBytes() *v1.ArrayOfBytesWrapper {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_VecBytes); ok {
		return x.VecBytes
	}
	return nil
}

func (x *ExecutionQueryResponseItem) GetDeferredCredits() *DeferredCreditsEntryWrapper {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_DeferredCredits); ok {
		return x.DeferredCredits
	}
	return nil
}

func (x *ExecutionQueryResponseItem) GetExecutionStatus() ExecutionQueryExecutionStatus {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_ExecutionStatus); ok {
		return x.ExecutionStatus
	}
	return ExecutionQueryExecutionStatus_EXECUTION_QUERY_EXECUTION_STATUS_UNSPECIFIED
}

func (x *ExecutionQueryResponseItem) GetCycleInfos() *ExecutionQueryCycleInfos {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_CycleInfos); ok {
		return x.CycleInfos
	}
	return nil
}

func (x *ExecutionQueryResponseItem) GetEvents() *ScOutputEventsWrapper {
	if x, ok := x.GetResponseItem().(*ExecutionQueryResponseItem_Events); ok {
		return x.Events
	}
	return nil
}

type isExecutionQueryResponseItem_ResponseItem interface {
	isExecutionQueryResponseItem_ResponseItem()
}

type ExecutionQueryResponseItem_Boolean struct {
	// Boolean value
	Boolean bool `protobuf:"varint,1,opt,name=boolean,proto3,oneof"`
}

type ExecutionQueryResponseItem_RollCount struct {
	// Roll counts value
	RollCount uint64 `protobuf:"varint,2,opt,name=roll_count,json=rollCount,proto3,oneof"`
}

type ExecutionQueryResponseItem_Amount struct {
	// Amount value
	Amount *v1.NativeAmount `protobuf:"bytes,3,opt,name=amount,proto3,oneof"`
}

type ExecutionQueryResponseItem_Bytes struct {
	// Bytes value
	Bytes []byte `protobuf:"bytes,4,opt,name=bytes,proto3,oneof"`
}

type ExecutionQueryResponseItem_VecBytes struct {
	// Vector of bytes value
	VecBytes *v1.ArrayOfBytesWrapper `protobuf:"bytes,5,opt,name=vec_bytes,json=vecBytes,proto3,oneof"`
}

type ExecutionQueryResponseItem_DeferredCredits struct {
	// Deferred credits value
	DeferredCredits *DeferredCreditsEntryWrapper `protobuf:"bytes,6,opt,name=deferred_credits,json=deferredCredits,proto3,oneof"`
}

type ExecutionQueryResponseItem_ExecutionStatus struct {
	// Execution status value
	ExecutionStatus ExecutionQueryExecutionStatus `protobuf:"varint,7,opt,name=execution_status,json=executionStatus,proto3,enum=massa.api.v1.ExecutionQueryExecutionStatus,oneof"`
}

type ExecutionQueryResponseItem_CycleInfos struct {
	// Cycle infos value
	CycleInfos *ExecutionQueryCycleInfos `protobuf:"bytes,8,opt,name=cycle_infos,json=cycleInfos,proto3,oneof"`
}

type ExecutionQueryResponseItem_Events struct {
	// Events
	Events *ScOutputEventsWrapper `protobuf:"bytes,9,opt,name=events,proto3,oneof"`
}

func (*ExecutionQueryResponseItem_Boolean) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_RollCount) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_Amount) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_Bytes) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_VecBytes) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_DeferredCredits) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_ExecutionStatus) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_CycleInfos) isExecutionQueryResponseItem_ResponseItem() {}

func (*ExecutionQueryResponseItem_Events) isExecutionQueryResponseItem_ResponseItem() {}

// Deferred credits entry wrapper
type DeferredCreditsEntryWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deferred credits entry
	Entries []*DeferredCreditsEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *DeferredCreditsEntryWrapper) Reset() {
	*x = DeferredCreditsEntryWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferredCreditsEntryWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferredCreditsEntryWrapper) ProtoMessage() {}

func (x *DeferredCreditsEntryWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferredCreditsEntryWrapper.ProtoReflect.Descriptor instead.
func (*DeferredCreditsEntryWrapper) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{51}
}

func (x *DeferredCreditsEntryWrapper) GetEntries() []*DeferredCreditsEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// Deferred credits entry
type DeferredCreditsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slot
	Slot *v1.Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// Amount
	Amount *v1.NativeAmount `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DeferredCreditsEntry) Reset() {
	*x = DeferredCreditsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferredCreditsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferredCreditsEntry) ProtoMessage() {}

func (x *DeferredCreditsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferredCreditsEntry.ProtoReflect.Descriptor instead.
func (*DeferredCreditsEntry) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{52}
}

func (x *DeferredCreditsEntry) GetSlot() *v1.Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *DeferredCreditsEntry) GetAmount() *v1.NativeAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

// Cycle information for execution query
type ExecutionQueryCycleInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cycle number
	Cycle uint64 `protobuf:"varint,1,opt,name=cycle,proto3" json:"cycle,omitempty"`
	// Whether the cycle is final
	IsFinal bool `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	// Infos for each PoS-participating address among the ones that were asked
	StakerInfos []*ExecutionQueryStakerInfoEntry `protobuf:"bytes,3,rep,name=staker_infos,json=stakerInfos,proto3" json:"staker_infos,omitempty"`
}

func (x *ExecutionQueryCycleInfos) Reset() {
	*x = ExecutionQueryCycleInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryCycleInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryCycleInfos) ProtoMessage() {}

func (x *ExecutionQueryCycleInfos) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryCycleInfos.ProtoReflect.Descriptor instead.
func (*ExecutionQueryCycleInfos) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{53}
}

func (x *ExecutionQueryCycleInfos) GetCycle() uint64 {
	if x != nil {
		return x.Cycle
	}
	return 0
}

func (x *ExecutionQueryCycleInfos) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *ExecutionQueryCycleInfos) GetStakerInfos() []*ExecutionQueryStakerInfoEntry {
	if x != nil {
		return x.StakerInfos
	}
	return nil
}

// Staker information for a given cycle
type ExecutionQueryStakerInfoEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the staker
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Staker info
	Info *ExecutionQueryStakerInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ExecutionQueryStakerInfoEntry) Reset() {
	*x = ExecutionQueryStakerInfoEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryStakerInfoEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryStakerInfoEntry) ProtoMessage() {}

func (x *ExecutionQueryStakerInfoEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryStakerInfoEntry.ProtoReflect.Descriptor instead.
func (*ExecutionQueryStakerInfoEntry) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{54}
}

func (x *ExecutionQueryStakerInfoEntry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ExecutionQueryStakerInfoEntry) GetInfo() *ExecutionQueryStakerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Staker information for execution query
type ExecutionQueryStakerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Active roll count
	ActiveRolls uint64 `protobuf:"varint,1,opt,name=active_rolls,json=activeRolls,proto3" json:"active_rolls,omitempty"`
	// Production stats
	ProductionStats *ExecutionQueryStakerInfoProductionStatsEntry `protobuf:"bytes,2,opt,name=production_stats,json=productionStats,proto3" json:"production_stats,omitempty"`
}

func (x *ExecutionQueryStakerInfo) Reset() {
	*x = ExecutionQueryStakerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryStakerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryStakerInfo) ProtoMessage() {}

func (x *ExecutionQueryStakerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryStakerInfo.ProtoReflect.Descriptor instead.
func (*ExecutionQueryStakerInfo) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{55}
}

func (x *ExecutionQueryStakerInfo) GetActiveRolls() uint64 {
	if x != nil {
		return x.ActiveRolls
	}
	return 0
}

func (x *ExecutionQueryStakerInfo) GetProductionStats() *ExecutionQueryStakerInfoProductionStatsEntry {
	if x != nil {
		return x.ProductionStats
	}
	return nil
}

// ExecutionQueryStakerInfoProductionStats entry
type ExecutionQueryStakerInfoProductionStatsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of the staker
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// Production failure
	Stats *ExecutionQueryStakerInfoProductionStats `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *ExecutionQueryStakerInfoProductionStatsEntry) Reset() {
	*x = ExecutionQueryStakerInfoProductionStatsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryStakerInfoProductionStatsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryStakerInfoProductionStatsEntry) ProtoMessage() {}

func (x *ExecutionQueryStakerInfoProductionStatsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryStakerInfoProductionStatsEntry.ProtoReflect.Descriptor instead.
func (*ExecutionQueryStakerInfoProductionStatsEntry) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{56}
}

func (x *ExecutionQueryStakerInfoProductionStatsEntry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ExecutionQueryStakerInfoProductionStatsEntry) GetStats() *ExecutionQueryStakerInfoProductionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// Production statistics for staker info in execution query
type ExecutionQueryStakerInfoProductionStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Production successes
	BlockSuccessCount uint64 `protobuf:"varint,1,opt,name=block_success_count,json=blockSuccessCount,proto3" json:"block_success_count,omitempty"`
	// Production failures
	BlockFailureCount uint64 `protobuf:"varint,2,opt,name=block_failure_count,json=blockFailureCount,proto3" json:"block_failure_count,omitempty"`
}

func (x *ExecutionQueryStakerInfoProductionStats) Reset() {
	*x = ExecutionQueryStakerInfoProductionStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionQueryStakerInfoProductionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionQueryStakerInfoProductionStats) ProtoMessage() {}

func (x *ExecutionQueryStakerInfoProductionStats) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionQueryStakerInfoProductionStats.ProtoReflect.Descriptor instead.
func (*ExecutionQueryStakerInfoProductionStats) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{57}
}

func (x *ExecutionQueryStakerInfoProductionStats) GetBlockSuccessCount() uint64 {
	if x != nil {
		return x.BlockSuccessCount
	}
	return 0
}

func (x *ExecutionQueryStakerInfoProductionStats) GetBlockFailureCount() uint64 {
	if x != nil {
		return x.BlockFailureCount
	}
	return 0
}

// ScOutputEvents wrapper
type ScOutputEventsWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Events
	Events []*v1.ScExecutionEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *ScOutputEventsWrapper) Reset() {
	*x = ScOutputEventsWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScOutputEventsWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScOutputEventsWrapper) ProtoMessage() {}

func (x *ScOutputEventsWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScOutputEventsWrapper.ProtoReflect.Descriptor instead.
func (*ScOutputEventsWrapper) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{58}
}

func (x *ScOutputEventsWrapper) GetEvents() []*v1.ScExecutionEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

// NewBlocksRequest holds request for NewBlocks
type NewBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the blocks that verify all the filters
	Filters []*NewBlocksFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *NewBlocksRequest) Reset() {
	*x = NewBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBlocksRequest) ProtoMessage() {}

func (x *NewBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBlocksRequest.ProtoReflect.Descriptor instead.
func (*NewBlocksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{59}
}

func (x *NewBlocksRequest) GetFilters() []*NewBlocksFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// NewBlocks Filter
type NewBlocksFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*NewBlocksFilter_BlockIds
	//	*NewBlocksFilter_Addresses
	//	*NewBlocksFilter_SlotRange
	Filter isNewBlocksFilter_Filter `protobuf_oneof:"filter"`
}

func (x *NewBlocksFilter) Reset() {
	*x = NewBlocksFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBlocksFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBlocksFilter) ProtoMessage() {}

func (x *NewBlocksFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBlocksFilter.ProtoReflect.Descriptor instead.
func (*NewBlocksFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{60}
}

func (m *NewBlocksFilter) GetFilter() isNewBlocksFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *NewBlocksFilter) GetBlockIds() *v1.BlockIds {
	if x, ok := x.GetFilter().(*NewBlocksFilter_BlockIds); ok {
		return x.BlockIds
	}
	return nil
}

func (x *NewBlocksFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*NewBlocksFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *NewBlocksFilter) GetSlotRange() *v1.SlotRange {
	if x, ok := x.GetFilter().(*NewBlocksFilter_SlotRange); ok {
		return x.SlotRange
	}
	return nil
}

type isNewBlocksFilter_Filter interface {
	isNewBlocksFilter_Filter()
}

type NewBlocksFilter_BlockIds struct {
	// One of these block ids
	BlockIds *v1.BlockIds `protobuf:"bytes,1,opt,name=block_ids,json=blockIds,proto3,oneof"`
}

type NewBlocksFilter_Addresses struct {
	// One of these creator addresses
	Addresses *v1.Addresses `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

type NewBlocksFilter_SlotRange struct {
	// One of these slot ranges (inclusive)
	SlotRange *v1.SlotRange `protobuf:"bytes,3,opt,name=slot_range,json=slotRange,proto3,oneof"`
}

func (*NewBlocksFilter_BlockIds) isNewBlocksFilter_Filter() {}

func (*NewBlocksFilter_Addresses) isNewBlocksFilter_Filter() {}

func (*NewBlocksFilter_SlotRange) isNewBlocksFilter_Filter() {}

// NewBlocksResponse holds response from NewBlocks
type NewBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed block
	SignedBlock *v1.SignedBlock `protobuf:"bytes,1,opt,name=signed_block,json=signedBlock,proto3" json:"signed_block,omitempty"`
}

func (x *NewBlocksResponse) Reset() {
	*x = NewBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBlocksResponse) ProtoMessage() {}

func (x *NewBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBlocksResponse.ProtoReflect.Descriptor instead.
func (*NewBlocksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{61}
}

func (x *NewBlocksResponse) GetSignedBlock() *v1.SignedBlock {
	if x != nil {
		return x.SignedBlock
	}
	return nil
}

// NewEndorsementsRequest holds request for NewEndorsements
type NewEndorsementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the endorsements that verify all the filters
	Filters []*NewEndorsementsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *NewEndorsementsRequest) Reset() {
	*x = NewEndorsementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEndorsementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEndorsementsRequest) ProtoMessage() {}

func (x *NewEndorsementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEndorsementsRequest.ProtoReflect.Descriptor instead.
func (*NewEndorsementsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{62}
}

func (x *NewEndorsementsRequest) GetFilters() []*NewEndorsementsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// NewEndorsements Filter
type NewEndorsementsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*NewEndorsementsFilter_EndorsementIds
	//	*NewEndorsementsFilter_Addresses
	//	*NewEndorsementsFilter_BlockIds
	Filter isNewEndorsementsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *NewEndorsementsFilter) Reset() {
	*x = NewEndorsementsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEndorsementsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEndorsementsFilter) ProtoMessage() {}

func (x *NewEndorsementsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEndorsementsFilter.ProtoReflect.Descriptor instead.
func (*NewEndorsementsFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{63}
}

func (m *NewEndorsementsFilter) GetFilter() isNewEndorsementsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *NewEndorsementsFilter) GetEndorsementIds() *v1.EndorsementIds {
	if x, ok := x.GetFilter().(*NewEndorsementsFilter_EndorsementIds); ok {
		return x.EndorsementIds
	}
	return nil
}

func (x *NewEndorsementsFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*NewEndorsementsFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *NewEndorsementsFilter) GetBlockIds() *v1.BlockIds {
	if x, ok := x.GetFilter().(*NewEndorsementsFilter_BlockIds); ok {
		return x.BlockIds
	}
	return nil
}

type isNewEndorsementsFilter_Filter interface {
	isNewEndorsementsFilter_Filter()
}

type NewEndorsementsFilter_EndorsementIds struct {
	// One of these endorsement ids
	EndorsementIds *v1.EndorsementIds `protobuf:"bytes,1,opt,name=endorsement_ids,json=endorsementIds,proto3,oneof"`
}

type NewEndorsementsFilter_Addresses struct {
	// One of these creator addresses
	Addresses *v1.Addresses `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

type NewEndorsementsFilter_BlockIds struct {
	// One of these block ids
	BlockIds *v1.BlockIds `protobuf:"bytes,3,opt,name=block_ids,json=blockIds,proto3,oneof"`
}

func (*NewEndorsementsFilter_EndorsementIds) isNewEndorsementsFilter_Filter() {}

func (*NewEndorsementsFilter_Addresses) isNewEndorsementsFilter_Filter() {}

func (*NewEndorsementsFilter_BlockIds) isNewEndorsementsFilter_Filter() {}

// NewEndorsementsResponse holds response from NewEndorsements
type NewEndorsementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed endorsement
	SignedEndorsement *v1.SignedEndorsement `protobuf:"bytes,1,opt,name=signed_endorsement,json=signedEndorsement,proto3" json:"signed_endorsement,omitempty"`
}

func (x *NewEndorsementsResponse) Reset() {
	*x = NewEndorsementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEndorsementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEndorsementsResponse) ProtoMessage() {}

func (x *NewEndorsementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEndorsementsResponse.ProtoReflect.Descriptor instead.
func (*NewEndorsementsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{64}
}

func (x *NewEndorsementsResponse) GetSignedEndorsement() *v1.SignedEndorsement {
	if x != nil {
		return x.SignedEndorsement
	}
	return nil
}

// NewFilledBlocksRequest holds request for NewFilledBlocks
type NewFilledBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the blocks that verify one of the filters
	Filters []*NewBlocksFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *NewFilledBlocksRequest) Reset() {
	*x = NewFilledBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFilledBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFilledBlocksRequest) ProtoMessage() {}

func (x *NewFilledBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFilledBlocksRequest.ProtoReflect.Descriptor instead.
func (*NewFilledBlocksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{65}
}

func (x *NewFilledBlocksRequest) GetFilters() []*NewBlocksFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// NewFilledBlocks Filter
type NewFilledBlocksFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*NewFilledBlocksFilter_BlockIds
	//	*NewFilledBlocksFilter_Addresses
	//	*NewFilledBlocksFilter_SlotRange
	Filter isNewFilledBlocksFilter_Filter `protobuf_oneof:"filter"`
}

func (x *NewFilledBlocksFilter) Reset() {
	*x = NewFilledBlocksFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFilledBlocksFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFilledBlocksFilter) ProtoMessage() {}

func (x *NewFilledBlocksFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFilledBlocksFilter.ProtoReflect.Descriptor instead.
func (*NewFilledBlocksFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{66}
}

func (m *NewFilledBlocksFilter) GetFilter() isNewFilledBlocksFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *NewFilledBlocksFilter) GetBlockIds() *v1.BlockIds {
	if x, ok := x.GetFilter().(*NewFilledBlocksFilter_BlockIds); ok {
		return x.BlockIds
	}
	return nil
}

func (x *NewFilledBlocksFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*NewFilledBlocksFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *NewFilledBlocksFilter) GetSlotRange() *v1.SlotRange {
	if x, ok := x.GetFilter().(*NewFilledBlocksFilter_SlotRange); ok {
		return x.SlotRange
	}
	return nil
}

type isNewFilledBlocksFilter_Filter interface {
	isNewFilledBlocksFilter_Filter()
}

type NewFilledBlocksFilter_BlockIds struct {
	// One of these block ids
	BlockIds *v1.BlockIds `protobuf:"bytes,1,opt,name=block_ids,json=blockIds,proto3,oneof"`
}

type NewFilledBlocksFilter_Addresses struct {
	// One of these creator addresses
	Addresses *v1.Addresses `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

type NewFilledBlocksFilter_SlotRange struct {
	// One of these slot ranges (inclusive)
	SlotRange *v1.SlotRange `protobuf:"bytes,3,opt,name=slot_range,json=slotRange,proto3,oneof"`
}

func (*NewFilledBlocksFilter_BlockIds) isNewFilledBlocksFilter_Filter() {}

func (*NewFilledBlocksFilter_Addresses) isNewFilledBlocksFilter_Filter() {}

func (*NewFilledBlocksFilter_SlotRange) isNewFilledBlocksFilter_Filter() {}

// NewFilledBlocksResponse holds response from NewFilledBlocks
type NewFilledBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block with operations content found in the node.
	FilledBlock *v1.FilledBlock `protobuf:"bytes,1,opt,name=filled_block,json=filledBlock,proto3" json:"filled_block,omitempty"`
}

func (x *NewFilledBlocksResponse) Reset() {
	*x = NewFilledBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFilledBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFilledBlocksResponse) ProtoMessage() {}

func (x *NewFilledBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFilledBlocksResponse.ProtoReflect.Descriptor instead.
func (*NewFilledBlocksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{67}
}

func (x *NewFilledBlocksResponse) GetFilledBlock() *v1.FilledBlock {
	if x != nil {
		return x.FilledBlock
	}
	return nil
}

// NewOperationsRequest holds request for NewOperations
type NewOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the operations that verify all the filters
	Filters []*NewOperationsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *NewOperationsRequest) Reset() {
	*x = NewOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOperationsRequest) ProtoMessage() {}

func (x *NewOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOperationsRequest.ProtoReflect.Descriptor instead.
func (*NewOperationsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{68}
}

func (x *NewOperationsRequest) GetFilters() []*NewOperationsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// NewOperations Filter
type NewOperationsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*NewOperationsFilter_OperationIds
	//	*NewOperationsFilter_Addresses
	//	*NewOperationsFilter_OperationTypes
	Filter isNewOperationsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *NewOperationsFilter) Reset() {
	*x = NewOperationsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOperationsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOperationsFilter) ProtoMessage() {}

func (x *NewOperationsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOperationsFilter.ProtoReflect.Descriptor instead.
func (*NewOperationsFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{69}
}

func (m *NewOperationsFilter) GetFilter() isNewOperationsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *NewOperationsFilter) GetOperationIds() *v1.OperationIds {
	if x, ok := x.GetFilter().(*NewOperationsFilter_OperationIds); ok {
		return x.OperationIds
	}
	return nil
}

func (x *NewOperationsFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*NewOperationsFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *NewOperationsFilter) GetOperationTypes() *v1.OpTypes {
	if x, ok := x.GetFilter().(*NewOperationsFilter_OperationTypes); ok {
		return x.OperationTypes
	}
	return nil
}

type isNewOperationsFilter_Filter interface {
	isNewOperationsFilter_Filter()
}

type NewOperationsFilter_OperationIds struct {
	// One of the operation ids
	OperationIds *v1.OperationIds `protobuf:"bytes,1,opt,name=operation_ids,json=operationIds,proto3,oneof"`
}

type NewOperationsFilter_Addresses struct {
	// One of these creator addresses
	Addresses *v1.Addresses `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

type NewOperationsFilter_OperationTypes struct {
	// One of the operation types
	OperationTypes *v1.OpTypes `protobuf:"bytes,3,opt,name=operation_types,json=operationTypes,proto3,oneof"`
}

func (*NewOperationsFilter_OperationIds) isNewOperationsFilter_Filter() {}

func (*NewOperationsFilter_Addresses) isNewOperationsFilter_Filter() {}

func (*NewOperationsFilter_OperationTypes) isNewOperationsFilter_Filter() {}

// NewOperationsResponse holds response from NewOperations
type NewOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Signed operation
	SignedOperation *v1.SignedOperation `protobuf:"bytes,1,opt,name=signed_operation,json=signedOperation,proto3" json:"signed_operation,omitempty"`
}

func (x *NewOperationsResponse) Reset() {
	*x = NewOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOperationsResponse) ProtoMessage() {}

func (x *NewOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOperationsResponse.ProtoReflect.Descriptor instead.
func (*NewOperationsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{70}
}

func (x *NewOperationsResponse) GetSignedOperation() *v1.SignedOperation {
	if x != nil {
		return x.SignedOperation
	}
	return nil
}

// NewSlotExecutionOutputsRequest holds request for NewSlotExecutionOutputs
type NewSlotExecutionOutputsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the slot execution outputs that verify all the filters
	Filters []*NewSlotExecutionOutputsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *NewSlotExecutionOutputsRequest) Reset() {
	*x = NewSlotExecutionOutputsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlotExecutionOutputsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlotExecutionOutputsRequest) ProtoMessage() {}

func (x *NewSlotExecutionOutputsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlotExecutionOutputsRequest.ProtoReflect.Descriptor instead.
func (*NewSlotExecutionOutputsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{71}
}

func (x *NewSlotExecutionOutputsRequest) GetFilters() []*NewSlotExecutionOutputsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// NewSlotExecutionOutputs Filter
type NewSlotExecutionOutputsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*NewSlotExecutionOutputsFilter_Status
	//	*NewSlotExecutionOutputsFilter_SlotRange
	//	*NewSlotExecutionOutputsFilter_AsyncPoolChangesFilter
	//	*NewSlotExecutionOutputsFilter_ExecutedDenounciationFilter
	//	*NewSlotExecutionOutputsFilter_EventFilter
	//	*NewSlotExecutionOutputsFilter_ExecutedOpsChangesFilter
	//	*NewSlotExecutionOutputsFilter_LedgerChangesFilter
	Filter isNewSlotExecutionOutputsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *NewSlotExecutionOutputsFilter) Reset() {
	*x = NewSlotExecutionOutputsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlotExecutionOutputsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlotExecutionOutputsFilter) ProtoMessage() {}

func (x *NewSlotExecutionOutputsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlotExecutionOutputsFilter.ProtoReflect.Descriptor instead.
func (*NewSlotExecutionOutputsFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{72}
}

func (m *NewSlotExecutionOutputsFilter) GetFilter() isNewSlotExecutionOutputsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *NewSlotExecutionOutputsFilter) GetStatus() v1.ExecutionOutputStatus {
	if x, ok := x.GetFilter().(*NewSlotExecutionOutputsFilter_Status); ok {
		return x.Status
	}
	return v1.ExecutionOutputStatus(0)
}

func (x *NewSlotExecutionOutputsFilter) GetSlotRange() *v1.SlotRange {
	if x, ok := x.GetFilter().(*NewSlotExecutionOutputsFilter_SlotRange); ok {
		return x.SlotRange
	}
	return nil
}

func (x *NewSlotExecutionOutputsFilter) GetAsyncPoolChangesFilter() *AsyncPoolChangesFilter {
	if x, ok := x.GetFilter().(*NewSlotExecutionOutputsFilter_AsyncPoolChangesFilter); ok {
		return x.AsyncPoolChangesFilter
	}
	return nil
}

func (x *NewSlotExecutionOutputsFilter) GetExecutedDenounciationFilter() *ExecutedDenounciationFilter {
	if x, ok := x.GetFilter().(*NewSlotExecutionOutputsFilter_ExecutedDenounciationFilter); ok {
		return x.ExecutedDenounciationFilter
	}
	return nil
}

func (x *NewSlotExecutionOutputsFilter) GetEventFilter() *ExecutionEventFilter {
	if x, ok := x.GetFilter().(*NewSlotExecutionOutputsFilter_EventFilter); ok {
		return x.EventFilter
	}
	return nil
}

func (x *NewSlotExecutionOutputsFilter) GetExecutedOpsChangesFilter() *ExecutedOpsChangesFilter {
	if x, ok := x.GetFilter().(*NewSlotExecutionOutputsFilter_ExecutedOpsChangesFilter); ok {
		return x.ExecutedOpsChangesFilter
	}
	return nil
}

func (x *NewSlotExecutionOutputsFilter) GetLedgerChangesFilter() *LedgerChangesFilter {
	if x, ok := x.GetFilter().(*NewSlotExecutionOutputsFilter_LedgerChangesFilter); ok {
		return x.LedgerChangesFilter
	}
	return nil
}

type isNewSlotExecutionOutputsFilter_Filter interface {
	isNewSlotExecutionOutputsFilter_Filter()
}

type NewSlotExecutionOutputsFilter_Status struct {
	// Execution output status
	Status v1.ExecutionOutputStatus `protobuf:"varint,1,opt,name=status,proto3,enum=massa.model.v1.ExecutionOutputStatus,oneof"`
}

type NewSlotExecutionOutputsFilter_SlotRange struct {
	// Slot range
	SlotRange *v1.SlotRange `protobuf:"bytes,2,opt,name=slot_range,json=slotRange,proto3,oneof"`
}

type NewSlotExecutionOutputsFilter_AsyncPoolChangesFilter struct {
	// AsyncPoolChangesFilter
	AsyncPoolChangesFilter *AsyncPoolChangesFilter `protobuf:"bytes,3,opt,name=async_pool_changes_filter,json=asyncPoolChangesFilter,proto3,oneof"`
}

type NewSlotExecutionOutputsFilter_ExecutedDenounciationFilter struct {
	// ExecutedDenounciationFilter
	ExecutedDenounciationFilter *ExecutedDenounciationFilter `protobuf:"bytes,4,opt,name=executed_denounciation_filter,json=executedDenounciationFilter,proto3,oneof"`
}

type NewSlotExecutionOutputsFilter_EventFilter struct {
	// Execution event filter
	EventFilter *ExecutionEventFilter `protobuf:"bytes,5,opt,name=event_filter,json=eventFilter,proto3,oneof"`
}

type NewSlotExecutionOutputsFilter_ExecutedOpsChangesFilter struct {
	// ExecutedOpsChangesFilter
	ExecutedOpsChangesFilter *ExecutedOpsChangesFilter `protobuf:"bytes,6,opt,name=executed_ops_changes_filter,json=executedOpsChangesFilter,proto3,oneof"`
}

type NewSlotExecutionOutputsFilter_LedgerChangesFilter struct {
	// LedgerChangesFilter
	LedgerChangesFilter *LedgerChangesFilter `protobuf:"bytes,7,opt,name=ledger_changes_filter,json=ledgerChangesFilter,proto3,oneof"`
}

func (*NewSlotExecutionOutputsFilter_Status) isNewSlotExecutionOutputsFilter_Filter() {}

func (*NewSlotExecutionOutputsFilter_SlotRange) isNewSlotExecutionOutputsFilter_Filter() {}

func (*NewSlotExecutionOutputsFilter_AsyncPoolChangesFilter) isNewSlotExecutionOutputsFilter_Filter() {
}

func (*NewSlotExecutionOutputsFilter_ExecutedDenounciationFilter) isNewSlotExecutionOutputsFilter_Filter() {
}

func (*NewSlotExecutionOutputsFilter_EventFilter) isNewSlotExecutionOutputsFilter_Filter() {}

func (*NewSlotExecutionOutputsFilter_ExecutedOpsChangesFilter) isNewSlotExecutionOutputsFilter_Filter() {
}

func (*NewSlotExecutionOutputsFilter_LedgerChangesFilter) isNewSlotExecutionOutputsFilter_Filter() {}

// AsyncPoolChangesFilter
type AsyncPoolChangesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*AsyncPoolChangesFilter_None
	//	*AsyncPoolChangesFilter_Type
	//	*AsyncPoolChangesFilter_Handler
	//	*AsyncPoolChangesFilter_DestinationAddress
	//	*AsyncPoolChangesFilter_EmitterAddress
	//	*AsyncPoolChangesFilter_CanBeExecuted
	Filter isAsyncPoolChangesFilter_Filter `protobuf_oneof:"filter"`
}

func (x *AsyncPoolChangesFilter) Reset() {
	*x = AsyncPoolChangesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncPoolChangesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncPoolChangesFilter) ProtoMessage() {}

func (x *AsyncPoolChangesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncPoolChangesFilter.ProtoReflect.Descriptor instead.
func (*AsyncPoolChangesFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{73}
}

func (m *AsyncPoolChangesFilter) GetFilter() isAsyncPoolChangesFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *AsyncPoolChangesFilter) GetNone() *v1.Empty {
	if x, ok := x.GetFilter().(*AsyncPoolChangesFilter_None); ok {
		return x.None
	}
	return nil
}

func (x *AsyncPoolChangesFilter) GetType() v1.AsyncPoolChangeType {
	if x, ok := x.GetFilter().(*AsyncPoolChangesFilter_Type); ok {
		return x.Type
	}
	return v1.AsyncPoolChangeType(0)
}

func (x *AsyncPoolChangesFilter) GetHandler() string {
	if x, ok := x.GetFilter().(*AsyncPoolChangesFilter_Handler); ok {
		return x.Handler
	}
	return ""
}

func (x *AsyncPoolChangesFilter) GetDestinationAddress() string {
	if x, ok := x.GetFilter().(*AsyncPoolChangesFilter_DestinationAddress); ok {
		return x.DestinationAddress
	}
	return ""
}

func (x *AsyncPoolChangesFilter) GetEmitterAddress() string {
	if x, ok := x.GetFilter().(*AsyncPoolChangesFilter_EmitterAddress); ok {
		return x.EmitterAddress
	}
	return ""
}

func (x *AsyncPoolChangesFilter) GetCanBeExecuted() bool {
	if x, ok := x.GetFilter().(*AsyncPoolChangesFilter_CanBeExecuted); ok {
		return x.CanBeExecuted
	}
	return false
}

type isAsyncPoolChangesFilter_Filter interface {
	isAsyncPoolChangesFilter_Filter()
}

type AsyncPoolChangesFilter_None struct {
	// Do not return any message
	None *v1.Empty `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type AsyncPoolChangesFilter_Type struct {
	// The type of the change
	Type v1.AsyncPoolChangeType `protobuf:"varint,2,opt,name=type,proto3,enum=massa.model.v1.AsyncPoolChangeType,oneof"`
}

type AsyncPoolChangesFilter_Handler struct {
	// The handler function name within the destination address bytecode
	Handler string `protobuf:"bytes,3,opt,name=handler,proto3,oneof"`
}

type AsyncPoolChangesFilter_DestinationAddress struct {
	// The address towards which the message is being sent
	DestinationAddress string `protobuf:"bytes,4,opt,name=destination_address,json=destinationAddress,proto3,oneof"`
}

type AsyncPoolChangesFilter_EmitterAddress struct {
	// The address that sent the message
	EmitterAddress string `protobuf:"bytes,5,opt,name=emitter_address,json=emitterAddress,proto3,oneof"`
}

type AsyncPoolChangesFilter_CanBeExecuted struct {
	// Boolean that determine if the message can be executed. For messages without filter this boolean is always true.
	// For messages with filter, this boolean is true if the filter has been matched between `validity_start` and current slot.
	CanBeExecuted bool `protobuf:"varint,6,opt,name=can_be_executed,json=canBeExecuted,proto3,oneof"`
}

func (*AsyncPoolChangesFilter_None) isAsyncPoolChangesFilter_Filter() {}

func (*AsyncPoolChangesFilter_Type) isAsyncPoolChangesFilter_Filter() {}

func (*AsyncPoolChangesFilter_Handler) isAsyncPoolChangesFilter_Filter() {}

func (*AsyncPoolChangesFilter_DestinationAddress) isAsyncPoolChangesFilter_Filter() {}

func (*AsyncPoolChangesFilter_EmitterAddress) isAsyncPoolChangesFilter_Filter() {}

func (*AsyncPoolChangesFilter_CanBeExecuted) isAsyncPoolChangesFilter_Filter() {}

// PosChangesFilter
type PosChangesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*PosChangesFilter_None
	//	*PosChangesFilter_Address
	Filter isPosChangesFilter_Filter `protobuf_oneof:"filter"`
}

func (x *PosChangesFilter) Reset() {
	*x = PosChangesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PosChangesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PosChangesFilter) ProtoMessage() {}

func (x *PosChangesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PosChangesFilter.ProtoReflect.Descriptor instead.
func (*PosChangesFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{74}
}

func (m *PosChangesFilter) GetFilter() isPosChangesFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *PosChangesFilter) GetNone() *v1.Empty {
	if x, ok := x.GetFilter().(*PosChangesFilter_None); ok {
		return x.None
	}
	return nil
}

func (x *PosChangesFilter) GetAddress() string {
	if x, ok := x.GetFilter().(*PosChangesFilter_Address); ok {
		return x.Address
	}
	return ""
}

type isPosChangesFilter_Filter interface {
	isPosChangesFilter_Filter()
}

type PosChangesFilter_None struct {
	// Do not return any message
	None *v1.Empty `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type PosChangesFilter_Address struct {
	// Address for which we have roll changes
	Address string `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

func (*PosChangesFilter_None) isPosChangesFilter_Filter() {}

func (*PosChangesFilter_Address) isPosChangesFilter_Filter() {}

// ExecutionEventFilter
type ExecutionEventFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*ExecutionEventFilter_None
	//	*ExecutionEventFilter_CallerAddress
	//	*ExecutionEventFilter_EmitterAddress
	//	*ExecutionEventFilter_OriginalOperationId
	//	*ExecutionEventFilter_IsFailure
	Filter isExecutionEventFilter_Filter `protobuf_oneof:"filter"`
}

func (x *ExecutionEventFilter) Reset() {
	*x = ExecutionEventFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionEventFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionEventFilter) ProtoMessage() {}

func (x *ExecutionEventFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionEventFilter.ProtoReflect.Descriptor instead.
func (*ExecutionEventFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{75}
}

func (m *ExecutionEventFilter) GetFilter() isExecutionEventFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ExecutionEventFilter) GetNone() *v1.Empty {
	if x, ok := x.GetFilter().(*ExecutionEventFilter_None); ok {
		return x.None
	}
	return nil
}

func (x *ExecutionEventFilter) GetCallerAddress() string {
	if x, ok := x.GetFilter().(*ExecutionEventFilter_CallerAddress); ok {
		return x.CallerAddress
	}
	return ""
}

func (x *ExecutionEventFilter) GetEmitterAddress() string {
	if x, ok := x.GetFilter().(*ExecutionEventFilter_EmitterAddress); ok {
		return x.EmitterAddress
	}
	return ""
}

func (x *ExecutionEventFilter) GetOriginalOperationId() string {
	if x, ok := x.GetFilter().(*ExecutionEventFilter_OriginalOperationId); ok {
		return x.OriginalOperationId
	}
	return ""
}

func (x *ExecutionEventFilter) GetIsFailure() bool {
	if x, ok := x.GetFilter().(*ExecutionEventFilter_IsFailure); ok {
		return x.IsFailure
	}
	return false
}

type isExecutionEventFilter_Filter interface {
	isExecutionEventFilter_Filter()
}

type ExecutionEventFilter_None struct {
	// Do not return any message
	None *v1.Empty `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type ExecutionEventFilter_CallerAddress struct {
	// Caller address
	CallerAddress string `protobuf:"bytes,2,opt,name=caller_address,json=callerAddress,proto3,oneof"`
}

type ExecutionEventFilter_EmitterAddress struct {
	// Emitter address
	EmitterAddress string `protobuf:"bytes,3,opt,name=emitter_address,json=emitterAddress,proto3,oneof"`
}

type ExecutionEventFilter_OriginalOperationId struct {
	// Original operation id
	OriginalOperationId string `protobuf:"bytes,4,opt,name=original_operation_id,json=originalOperationId,proto3,oneof"`
}

type ExecutionEventFilter_IsFailure struct {
	// Whether the event is a failure
	IsFailure bool `protobuf:"varint,5,opt,name=is_failure,json=isFailure,proto3,oneof"`
}

func (*ExecutionEventFilter_None) isExecutionEventFilter_Filter() {}

func (*ExecutionEventFilter_CallerAddress) isExecutionEventFilter_Filter() {}

func (*ExecutionEventFilter_EmitterAddress) isExecutionEventFilter_Filter() {}

func (*ExecutionEventFilter_OriginalOperationId) isExecutionEventFilter_Filter() {}

func (*ExecutionEventFilter_IsFailure) isExecutionEventFilter_Filter() {}

// ExecutedOpsChangesFilter
type ExecutedOpsChangesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*ExecutedOpsChangesFilter_None
	//	*ExecutedOpsChangesFilter_OperationId
	Filter isExecutedOpsChangesFilter_Filter `protobuf_oneof:"filter"`
}

func (x *ExecutedOpsChangesFilter) Reset() {
	*x = ExecutedOpsChangesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutedOpsChangesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutedOpsChangesFilter) ProtoMessage() {}

func (x *ExecutedOpsChangesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutedOpsChangesFilter.ProtoReflect.Descriptor instead.
func (*ExecutedOpsChangesFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{76}
}

func (m *ExecutedOpsChangesFilter) GetFilter() isExecutedOpsChangesFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ExecutedOpsChangesFilter) GetNone() *v1.Empty {
	if x, ok := x.GetFilter().(*ExecutedOpsChangesFilter_None); ok {
		return x.None
	}
	return nil
}

func (x *ExecutedOpsChangesFilter) GetOperationId() string {
	if x, ok := x.GetFilter().(*ExecutedOpsChangesFilter_OperationId); ok {
		return x.OperationId
	}
	return ""
}

type isExecutedOpsChangesFilter_Filter interface {
	isExecutedOpsChangesFilter_Filter()
}

type ExecutedOpsChangesFilter_None struct {
	// Do not return any message
	None *v1.Empty `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type ExecutedOpsChangesFilter_OperationId struct {
	// Operation id
	OperationId string `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3,oneof"`
}

func (*ExecutedOpsChangesFilter_None) isExecutedOpsChangesFilter_Filter() {}

func (*ExecutedOpsChangesFilter_OperationId) isExecutedOpsChangesFilter_Filter() {}

// ExecutedDenounciationFilter
type ExecutedDenounciationFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*ExecutedDenounciationFilter_None
	Filter isExecutedDenounciationFilter_Filter `protobuf_oneof:"filter"`
}

func (x *ExecutedDenounciationFilter) Reset() {
	*x = ExecutedDenounciationFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutedDenounciationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutedDenounciationFilter) ProtoMessage() {}

func (x *ExecutedDenounciationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutedDenounciationFilter.ProtoReflect.Descriptor instead.
func (*ExecutedDenounciationFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{77}
}

func (m *ExecutedDenounciationFilter) GetFilter() isExecutedDenounciationFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *ExecutedDenounciationFilter) GetNone() *v1.Empty {
	if x, ok := x.GetFilter().(*ExecutedDenounciationFilter_None); ok {
		return x.None
	}
	return nil
}

type isExecutedDenounciationFilter_Filter interface {
	isExecutedDenounciationFilter_Filter()
}

type ExecutedDenounciationFilter_None struct {
	// Do not return any message
	None *v1.Empty `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

func (*ExecutedDenounciationFilter_None) isExecutedDenounciationFilter_Filter() {}

// LedgerChangesFilter
type LedgerChangesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*LedgerChangesFilter_None
	//	*LedgerChangesFilter_Address
	Filter isLedgerChangesFilter_Filter `protobuf_oneof:"filter"`
}

func (x *LedgerChangesFilter) Reset() {
	*x = LedgerChangesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerChangesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerChangesFilter) ProtoMessage() {}

func (x *LedgerChangesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerChangesFilter.ProtoReflect.Descriptor instead.
func (*LedgerChangesFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{78}
}

func (m *LedgerChangesFilter) GetFilter() isLedgerChangesFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *LedgerChangesFilter) GetNone() *v1.Empty {
	if x, ok := x.GetFilter().(*LedgerChangesFilter_None); ok {
		return x.None
	}
	return nil
}

func (x *LedgerChangesFilter) GetAddress() string {
	if x, ok := x.GetFilter().(*LedgerChangesFilter_Address); ok {
		return x.Address
	}
	return ""
}

type isLedgerChangesFilter_Filter interface {
	isLedgerChangesFilter_Filter()
}

type LedgerChangesFilter_None struct {
	// Do not return any message
	None *v1.Empty `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type LedgerChangesFilter_Address struct {
	// Address for which we have ledger changes
	Address string `protobuf:"bytes,2,opt,name=address,proto3,oneof"`
}

func (*LedgerChangesFilter_None) isLedgerChangesFilter_Filter() {}

func (*LedgerChangesFilter_Address) isLedgerChangesFilter_Filter() {}

// NewSlotExecutionOutputsResponse holds response from NewSlotExecutionOutputs
type NewSlotExecutionOutputsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slot execution output
	Output *v1.SlotExecutionOutput `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *NewSlotExecutionOutputsResponse) Reset() {
	*x = NewSlotExecutionOutputsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlotExecutionOutputsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlotExecutionOutputsResponse) ProtoMessage() {}

func (x *NewSlotExecutionOutputsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlotExecutionOutputsResponse.ProtoReflect.Descriptor instead.
func (*NewSlotExecutionOutputsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{79}
}

func (x *NewSlotExecutionOutputsResponse) GetOutput() *v1.SlotExecutionOutput {
	if x != nil {
		return x.Output
	}
	return nil
}

// NewSlotABICallStacks request
type NewSlotABICallStacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Finality level to receive informations from
	FinalityLevel FinalityLevel `protobuf:"varint,1,opt,name=finality_level,json=finalityLevel,proto3,enum=massa.api.v1.FinalityLevel" json:"finality_level,omitempty"`
}

func (x *NewSlotABICallStacksRequest) Reset() {
	*x = NewSlotABICallStacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlotABICallStacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlotABICallStacksRequest) ProtoMessage() {}

func (x *NewSlotABICallStacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlotABICallStacksRequest.ProtoReflect.Descriptor instead.
func (*NewSlotABICallStacksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{80}
}

func (x *NewSlotABICallStacksRequest) GetFinalityLevel() FinalityLevel {
	if x != nil {
		return x.FinalityLevel
	}
	return FinalityLevel_FINALITY_LEVEL_UNSPECIFIED
}

// NewSlotABICallStacks response
type NewSlotABICallStacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Finality level to receive informations from
	Slot *v1.Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// Call stacks for asynchronous execution
	AscCallStacks []*ASCABICallStack `protobuf:"bytes,2,rep,name=asc_call_stacks,json=ascCallStacks,proto3" json:"asc_call_stacks,omitempty"`
	// Call stack for operations
	OperationCallStacks []*OperationABICallStack `protobuf:"bytes,3,rep,name=operation_call_stacks,json=operationCallStacks,proto3" json:"operation_call_stacks,omitempty"`
}

func (x *NewSlotABICallStacksResponse) Reset() {
	*x = NewSlotABICallStacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlotABICallStacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlotABICallStacksResponse) ProtoMessage() {}

func (x *NewSlotABICallStacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlotABICallStacksResponse.ProtoReflect.Descriptor instead.
func (*NewSlotABICallStacksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{81}
}

func (x *NewSlotABICallStacksResponse) GetSlot() *v1.Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *NewSlotABICallStacksResponse) GetAscCallStacks() []*ASCABICallStack {
	if x != nil {
		return x.AscCallStacks
	}
	return nil
}

func (x *NewSlotABICallStacksResponse) GetOperationCallStacks() []*OperationABICallStack {
	if x != nil {
		return x.OperationCallStacks
	}
	return nil
}

// NewSlotTransfers request
type NewSlotTransfersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Finality level to receive informations from
	FinalityLevel FinalityLevel `protobuf:"varint,1,opt,name=finality_level,json=finalityLevel,proto3,enum=massa.api.v1.FinalityLevel" json:"finality_level,omitempty"`
}

func (x *NewSlotTransfersRequest) Reset() {
	*x = NewSlotTransfersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlotTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlotTransfersRequest) ProtoMessage() {}

func (x *NewSlotTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlotTransfersRequest.ProtoReflect.Descriptor instead.
func (*NewSlotTransfersRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{82}
}

func (x *NewSlotTransfersRequest) GetFinalityLevel() FinalityLevel {
	if x != nil {
		return x.FinalityLevel
	}
	return FinalityLevel_FINALITY_LEVEL_UNSPECIFIED
}

// NewSlotTransfers response
type NewSlotTransfersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Finality level to receive informations from
	Slot *v1.Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// Transfers
	Transfers []*TransferInfo `protobuf:"bytes,2,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *NewSlotTransfersResponse) Reset() {
	*x = NewSlotTransfersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlotTransfersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlotTransfersResponse) ProtoMessage() {}

func (x *NewSlotTransfersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlotTransfersResponse.ProtoReflect.Descriptor instead.
func (*NewSlotTransfersResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{83}
}

func (x *NewSlotTransfersResponse) GetSlot() *v1.Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *NewSlotTransfersResponse) GetTransfers() []*TransferInfo {
	if x != nil {
		return x.Transfers
	}
	return nil
}

// SendBlocksRequest holds parameters to SendBlocks
type SendBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secure shared block
	Block []byte `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *SendBlocksRequest) Reset() {
	*x = SendBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBlocksRequest) ProtoMessage() {}

func (x *SendBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBlocksRequest.ProtoReflect.Descriptor instead.
func (*SendBlocksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{84}
}

func (x *SendBlocksRequest) GetBlock() []byte {
	if x != nil {
		return x.Block
	}
	return nil
}

// SendBlocksResponse holds response from SendBlocks
type SendBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Block result or a gRPC status
	//
	// Types that are assignable to Result:
	//
	//	*SendBlocksResponse_BlockId
	//	*SendBlocksResponse_Error
	Result isSendBlocksResponse_Result `protobuf_oneof:"result"`
}

func (x *SendBlocksResponse) Reset() {
	*x = SendBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBlocksResponse) ProtoMessage() {}

func (x *SendBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBlocksResponse.ProtoReflect.Descriptor instead.
func (*SendBlocksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{85}
}

func (m *SendBlocksResponse) GetResult() isSendBlocksResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SendBlocksResponse) GetBlockId() string {
	if x, ok := x.GetResult().(*SendBlocksResponse_BlockId); ok {
		return x.BlockId
	}
	return ""
}

func (x *SendBlocksResponse) GetError() *v1.Error {
	if x, ok := x.GetResult().(*SendBlocksResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isSendBlocksResponse_Result interface {
	isSendBlocksResponse_Result()
}

type SendBlocksResponse_BlockId struct {
	// Block result
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3,oneof"`
}

type SendBlocksResponse_Error struct {
	// Massa error
	Error *v1.Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SendBlocksResponse_BlockId) isSendBlocksResponse_Result() {}

func (*SendBlocksResponse_Error) isSendBlocksResponse_Result() {}

// SendEndorsementsRequest holds parameters to SendEndorsements
type SendEndorsementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secure shared endorsements
	Endorsements [][]byte `protobuf:"bytes,1,rep,name=endorsements,proto3" json:"endorsements,omitempty"`
}

func (x *SendEndorsementsRequest) Reset() {
	*x = SendEndorsementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEndorsementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEndorsementsRequest) ProtoMessage() {}

func (x *SendEndorsementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEndorsementsRequest.ProtoReflect.Descriptor instead.
func (*SendEndorsementsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{86}
}

func (x *SendEndorsementsRequest) GetEndorsements() [][]byte {
	if x != nil {
		return x.Endorsements
	}
	return nil
}

// SendEndorsementsResponse holds response from SendEndorsements
type SendEndorsementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Endorsement result or gRPC status
	//
	// Types that are assignable to Result:
	//
	//	*SendEndorsementsResponse_EndorsementIds
	//	*SendEndorsementsResponse_Error
	Result isSendEndorsementsResponse_Result `protobuf_oneof:"result"`
}

func (x *SendEndorsementsResponse) Reset() {
	*x = SendEndorsementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEndorsementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEndorsementsResponse) ProtoMessage() {}

func (x *SendEndorsementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEndorsementsResponse.ProtoReflect.Descriptor instead.
func (*SendEndorsementsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{87}
}

func (m *SendEndorsementsResponse) GetResult() isSendEndorsementsResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SendEndorsementsResponse) GetEndorsementIds() *v1.EndorsementIds {
	if x, ok := x.GetResult().(*SendEndorsementsResponse_EndorsementIds); ok {
		return x.EndorsementIds
	}
	return nil
}

func (x *SendEndorsementsResponse) GetError() *v1.Error {
	if x, ok := x.GetResult().(*SendEndorsementsResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isSendEndorsementsResponse_Result interface {
	isSendEndorsementsResponse_Result()
}

type SendEndorsementsResponse_EndorsementIds struct {
	// Endorsement result
	EndorsementIds *v1.EndorsementIds `protobuf:"bytes,1,opt,name=endorsement_ids,json=endorsementIds,proto3,oneof"`
}

type SendEndorsementsResponse_Error struct {
	// Massa error
	Error *v1.Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SendEndorsementsResponse_EndorsementIds) isSendEndorsementsResponse_Result() {}

func (*SendEndorsementsResponse_Error) isSendEndorsementsResponse_Result() {}

// SendOperationsRequest holds parameters to SendOperations
type SendOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Secured shared operations
	Operations [][]byte `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
}

func (x *SendOperationsRequest) Reset() {
	*x = SendOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOperationsRequest) ProtoMessage() {}

func (x *SendOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOperationsRequest.ProtoReflect.Descriptor instead.
func (*SendOperationsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{88}
}

func (x *SendOperationsRequest) GetOperations() [][]byte {
	if x != nil {
		return x.Operations
	}
	return nil
}

// SendOperationsResponse holds response from SendOperations
type SendOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation result or gRPC status
	//
	// Types that are assignable to Result:
	//
	//	*SendOperationsResponse_OperationIds
	//	*SendOperationsResponse_Error
	Result isSendOperationsResponse_Result `protobuf_oneof:"result"`
}

func (x *SendOperationsResponse) Reset() {
	*x = SendOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOperationsResponse) ProtoMessage() {}

func (x *SendOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOperationsResponse.ProtoReflect.Descriptor instead.
func (*SendOperationsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{89}
}

func (m *SendOperationsResponse) GetResult() isSendOperationsResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SendOperationsResponse) GetOperationIds() *v1.OperationIds {
	if x, ok := x.GetResult().(*SendOperationsResponse_OperationIds); ok {
		return x.OperationIds
	}
	return nil
}

func (x *SendOperationsResponse) GetError() *v1.Error {
	if x, ok := x.GetResult().(*SendOperationsResponse_Error); ok {
		return x.Error
	}
	return nil
}

type isSendOperationsResponse_Result interface {
	isSendOperationsResponse_Result()
}

type SendOperationsResponse_OperationIds struct {
	// Operation result
	OperationIds *v1.OperationIds `protobuf:"bytes,1,opt,name=operation_ids,json=operationIds,proto3,oneof"`
}

type SendOperationsResponse_Error struct {
	// Massa error
	Error *v1.Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SendOperationsResponse_OperationIds) isSendOperationsResponse_Result() {}

func (*SendOperationsResponse_Error) isSendOperationsResponse_Result() {}

// TransactionsThroughputRequest holds request for TransactionsThroughput
type TransactionsThroughputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timer interval in seconds (Optional). Defaults to 10s
	Interval *wrapperspb.UInt64Value `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *TransactionsThroughputRequest) Reset() {
	*x = TransactionsThroughputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsThroughputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsThroughputRequest) ProtoMessage() {}

func (x *TransactionsThroughputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsThroughputRequest.ProtoReflect.Descriptor instead.
func (*TransactionsThroughputRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{90}
}

func (x *TransactionsThroughputRequest) GetInterval() *wrapperspb.UInt64Value {
	if x != nil {
		return x.Interval
	}
	return nil
}

// TransactionsThroughputResponse holds response from TransactionsThroughput
type TransactionsThroughputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transactions throughput per second
	Throughput uint32 `protobuf:"varint,1,opt,name=throughput,proto3" json:"throughput,omitempty"`
}

func (x *TransactionsThroughputResponse) Reset() {
	*x = TransactionsThroughputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsThroughputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsThroughputResponse) ProtoMessage() {}

func (x *TransactionsThroughputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsThroughputResponse.ProtoReflect.Descriptor instead.
func (*TransactionsThroughputResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{91}
}

func (x *TransactionsThroughputResponse) GetThroughput() uint32 {
	if x != nil {
		return x.Throughput
	}
	return 0
}

// SearchBlocksRequest holds request for SearchBlocks
type SearchBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the blocks that verify all the filters
	Filters []*SearchBlocksFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *SearchBlocksRequest) Reset() {
	*x = SearchBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBlocksRequest) ProtoMessage() {}

func (x *SearchBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBlocksRequest.ProtoReflect.Descriptor instead.
func (*SearchBlocksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{92}
}

func (x *SearchBlocksRequest) GetFilters() []*SearchBlocksFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// SearchBlocks Filter
type SearchBlocksFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*SearchBlocksFilter_BlockIds
	//	*SearchBlocksFilter_Addresses
	//	*SearchBlocksFilter_SlotRange
	Filter isSearchBlocksFilter_Filter `protobuf_oneof:"filter"`
}

func (x *SearchBlocksFilter) Reset() {
	*x = SearchBlocksFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBlocksFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBlocksFilter) ProtoMessage() {}

func (x *SearchBlocksFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBlocksFilter.ProtoReflect.Descriptor instead.
func (*SearchBlocksFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{93}
}

func (m *SearchBlocksFilter) GetFilter() isSearchBlocksFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *SearchBlocksFilter) GetBlockIds() *v1.BlockIds {
	if x, ok := x.GetFilter().(*SearchBlocksFilter_BlockIds); ok {
		return x.BlockIds
	}
	return nil
}

func (x *SearchBlocksFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*SearchBlocksFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *SearchBlocksFilter) GetSlotRange() *v1.SlotRange {
	if x, ok := x.GetFilter().(*SearchBlocksFilter_SlotRange); ok {
		return x.SlotRange
	}
	return nil
}

type isSearchBlocksFilter_Filter interface {
	isSearchBlocksFilter_Filter()
}

type SearchBlocksFilter_BlockIds struct {
	// One of these block ids
	BlockIds *v1.BlockIds `protobuf:"bytes,1,opt,name=block_ids,json=blockIds,proto3,oneof"`
}

type SearchBlocksFilter_Addresses struct {
	// One of these creator addresses
	Addresses *v1.Addresses `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

type SearchBlocksFilter_SlotRange struct {
	// One of these slot ranges (inclusive)
	SlotRange *v1.SlotRange `protobuf:"bytes,3,opt,name=slot_range,json=slotRange,proto3,oneof"`
}

func (*SearchBlocksFilter_BlockIds) isSearchBlocksFilter_Filter() {}

func (*SearchBlocksFilter_Addresses) isSearchBlocksFilter_Filter() {}

func (*SearchBlocksFilter_SlotRange) isSearchBlocksFilter_Filter() {}

// SearchBlocksResponse holds response from SearchBlocks
type SearchBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Information about the blocks
	BlockInfos []*v1.BlockInfo `protobuf:"bytes,1,rep,name=block_infos,json=blockInfos,proto3" json:"block_infos,omitempty"`
}

func (x *SearchBlocksResponse) Reset() {
	*x = SearchBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBlocksResponse) ProtoMessage() {}

func (x *SearchBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBlocksResponse.ProtoReflect.Descriptor instead.
func (*SearchBlocksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{94}
}

func (x *SearchBlocksResponse) GetBlockInfos() []*v1.BlockInfo {
	if x != nil {
		return x.BlockInfos
	}
	return nil
}

// SearchEndorsementsRequest holds request for SearchEndorsements
type SearchEndorsementsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the endorsements informations that verify all the filters
	Filters []*SearchEndorsementsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *SearchEndorsementsRequest) Reset() {
	*x = SearchEndorsementsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEndorsementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEndorsementsRequest) ProtoMessage() {}

func (x *SearchEndorsementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEndorsementsRequest.ProtoReflect.Descriptor instead.
func (*SearchEndorsementsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{95}
}

func (x *SearchEndorsementsRequest) GetFilters() []*SearchEndorsementsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// SearchEndorsements Filter
type SearchEndorsementsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*SearchEndorsementsFilter_EndorsementIds
	//	*SearchEndorsementsFilter_Addresses
	//	*SearchEndorsementsFilter_BlockIds
	Filter isSearchEndorsementsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *SearchEndorsementsFilter) Reset() {
	*x = SearchEndorsementsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEndorsementsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEndorsementsFilter) ProtoMessage() {}

func (x *SearchEndorsementsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEndorsementsFilter.ProtoReflect.Descriptor instead.
func (*SearchEndorsementsFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{96}
}

func (m *SearchEndorsementsFilter) GetFilter() isSearchEndorsementsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *SearchEndorsementsFilter) GetEndorsementIds() *v1.EndorsementIds {
	if x, ok := x.GetFilter().(*SearchEndorsementsFilter_EndorsementIds); ok {
		return x.EndorsementIds
	}
	return nil
}

func (x *SearchEndorsementsFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*SearchEndorsementsFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

func (x *SearchEndorsementsFilter) GetBlockIds() *v1.BlockIds {
	if x, ok := x.GetFilter().(*SearchEndorsementsFilter_BlockIds); ok {
		return x.BlockIds
	}
	return nil
}

type isSearchEndorsementsFilter_Filter interface {
	isSearchEndorsementsFilter_Filter()
}

type SearchEndorsementsFilter_EndorsementIds struct {
	// One of these endorsement ids
	EndorsementIds *v1.EndorsementIds `protobuf:"bytes,1,opt,name=endorsement_ids,json=endorsementIds,proto3,oneof"`
}

type SearchEndorsementsFilter_Addresses struct {
	// One of these creator addresses
	Addresses *v1.Addresses `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

type SearchEndorsementsFilter_BlockIds struct {
	// One of these block ids
	BlockIds *v1.BlockIds `protobuf:"bytes,3,opt,name=block_ids,json=blockIds,proto3,oneof"`
}

func (*SearchEndorsementsFilter_EndorsementIds) isSearchEndorsementsFilter_Filter() {}

func (*SearchEndorsementsFilter_Addresses) isSearchEndorsementsFilter_Filter() {}

func (*SearchEndorsementsFilter_BlockIds) isSearchEndorsementsFilter_Filter() {}

// SearchEndorsementsResponse holds response from SearchEndorsements
type SearchEndorsementsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Information about the endorsements
	EndorsementInfos []*v1.EndorsementInfo `protobuf:"bytes,1,rep,name=endorsement_infos,json=endorsementInfos,proto3" json:"endorsement_infos,omitempty"`
}

func (x *SearchEndorsementsResponse) Reset() {
	*x = SearchEndorsementsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEndorsementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEndorsementsResponse) ProtoMessage() {}

func (x *SearchEndorsementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEndorsementsResponse.ProtoReflect.Descriptor instead.
func (*SearchEndorsementsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{97}
}

func (x *SearchEndorsementsResponse) GetEndorsementInfos() []*v1.EndorsementInfo {
	if x != nil {
		return x.EndorsementInfos
	}
	return nil
}

// SearchOperationsRequest holds request for SearchOperations
type SearchOperationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns all the operations that verify all the filters
	Filters []*SearchOperationsFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *SearchOperationsRequest) Reset() {
	*x = SearchOperationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperationsRequest) ProtoMessage() {}

func (x *SearchOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperationsRequest.ProtoReflect.Descriptor instead.
func (*SearchOperationsRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{98}
}

func (x *SearchOperationsRequest) GetFilters() []*SearchOperationsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// SearchOperations Filter
type SearchOperationsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter
	//
	// Types that are assignable to Filter:
	//
	//	*SearchOperationsFilter_OperationIds
	//	*SearchOperationsFilter_Addresses
	Filter isSearchOperationsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *SearchOperationsFilter) Reset() {
	*x = SearchOperationsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOperationsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperationsFilter) ProtoMessage() {}

func (x *SearchOperationsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperationsFilter.ProtoReflect.Descriptor instead.
func (*SearchOperationsFilter) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{99}
}

func (m *SearchOperationsFilter) GetFilter() isSearchOperationsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *SearchOperationsFilter) GetOperationIds() *v1.OperationIds {
	if x, ok := x.GetFilter().(*SearchOperationsFilter_OperationIds); ok {
		return x.OperationIds
	}
	return nil
}

func (x *SearchOperationsFilter) GetAddresses() *v1.Addresses {
	if x, ok := x.GetFilter().(*SearchOperationsFilter_Addresses); ok {
		return x.Addresses
	}
	return nil
}

type isSearchOperationsFilter_Filter interface {
	isSearchOperationsFilter_Filter()
}

type SearchOperationsFilter_OperationIds struct {
	// One of the operation ids
	OperationIds *v1.OperationIds `protobuf:"bytes,1,opt,name=operation_ids,json=operationIds,proto3,oneof"`
}

type SearchOperationsFilter_Addresses struct {
	// One of these creator addresses
	Addresses *v1.Addresses `protobuf:"bytes,2,opt,name=addresses,proto3,oneof"`
}

func (*SearchOperationsFilter_OperationIds) isSearchOperationsFilter_Filter() {}

func (*SearchOperationsFilter_Addresses) isSearchOperationsFilter_Filter() {}

// SearchOperationsResponse holds response from SearchOperations
type SearchOperationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Information about the operations
	OperationInfos []*v1.OperationInfo `protobuf:"bytes,1,rep,name=operation_infos,json=operationInfos,proto3" json:"operation_infos,omitempty"`
}

func (x *SearchOperationsResponse) Reset() {
	*x = SearchOperationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOperationsResponse) ProtoMessage() {}

func (x *SearchOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOperationsResponse.ProtoReflect.Descriptor instead.
func (*SearchOperationsResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{100}
}

func (x *SearchOperationsResponse) GetOperationInfos() []*v1.OperationInfo {
	if x != nil {
		return x.OperationInfos
	}
	return nil
}

// GetOperationABICallStacks request
type GetOperationABICallStacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operations ids to get the call stack from
	OperationIds []string `protobuf:"bytes,1,rep,name=operation_ids,json=operationIds,proto3" json:"operation_ids,omitempty"`
}

func (x *GetOperationABICallStacksRequest) Reset() {
	*x = GetOperationABICallStacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationABICallStacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationABICallStacksRequest) ProtoMessage() {}

func (x *GetOperationABICallStacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationABICallStacksRequest.ProtoReflect.Descriptor instead.
func (*GetOperationABICallStacksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{101}
}

func (x *GetOperationABICallStacksRequest) GetOperationIds() []string {
	if x != nil {
		return x.OperationIds
	}
	return nil
}

// Definition of an ABI call stack element
type ABICallStackElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the ABI
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Parameters of the ABI
	Parameters []string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Return value of the ABI
	ReturnValue string `protobuf:"bytes,3,opt,name=return_value,json=returnValue,proto3" json:"return_value,omitempty"`
}

func (x *ABICallStackElement) Reset() {
	*x = ABICallStackElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABICallStackElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABICallStackElement) ProtoMessage() {}

func (x *ABICallStackElement) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABICallStackElement.ProtoReflect.Descriptor instead.
func (*ABICallStackElement) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{102}
}

func (x *ABICallStackElement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ABICallStackElement) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ABICallStackElement) GetReturnValue() string {
	if x != nil {
		return x.ReturnValue
	}
	return ""
}

// Definition of an ABI call stack element that is the 'call' ABI
type ABICallStackElementCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the ABI
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Parameters of the ABI
	Parameters []string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	// Calls made within this SC call
	SubCalls []*ABICallStackElementParent `protobuf:"bytes,3,rep,name=sub_calls,json=subCalls,proto3" json:"sub_calls,omitempty"`
	// Return value of the ABI
	ReturnValue string `protobuf:"bytes,4,opt,name=return_value,json=returnValue,proto3" json:"return_value,omitempty"`
}

func (x *ABICallStackElementCall) Reset() {
	*x = ABICallStackElementCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABICallStackElementCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABICallStackElementCall) ProtoMessage() {}

func (x *ABICallStackElementCall) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABICallStackElementCall.ProtoReflect.Descriptor instead.
func (*ABICallStackElementCall) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{103}
}

func (x *ABICallStackElementCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ABICallStackElementCall) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ABICallStackElementCall) GetSubCalls() []*ABICallStackElementParent {
	if x != nil {
		return x.SubCalls
	}
	return nil
}

func (x *ABICallStackElementCall) GetReturnValue() string {
	if x != nil {
		return x.ReturnValue
	}
	return ""
}

// Definition of an ABI call stack element parent
type ABICallStackElementParent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Element of the call stack
	//
	// Types that are assignable to CallStackElement:
	//
	//	*ABICallStackElementParent_Element
	//	*ABICallStackElementParent_ElementCall
	CallStackElement isABICallStackElementParent_CallStackElement `protobuf_oneof:"call_stack_element"`
}

func (x *ABICallStackElementParent) Reset() {
	*x = ABICallStackElementParent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABICallStackElementParent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABICallStackElementParent) ProtoMessage() {}

func (x *ABICallStackElementParent) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABICallStackElementParent.ProtoReflect.Descriptor instead.
func (*ABICallStackElementParent) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{104}
}

func (m *ABICallStackElementParent) GetCallStackElement() isABICallStackElementParent_CallStackElement {
	if m != nil {
		return m.CallStackElement
	}
	return nil
}

func (x *ABICallStackElementParent) GetElement() *ABICallStackElement {
	if x, ok := x.GetCallStackElement().(*ABICallStackElementParent_Element); ok {
		return x.Element
	}
	return nil
}

func (x *ABICallStackElementParent) GetElementCall() *ABICallStackElementCall {
	if x, ok := x.GetCallStackElement().(*ABICallStackElementParent_ElementCall); ok {
		return x.ElementCall
	}
	return nil
}

type isABICallStackElementParent_CallStackElement interface {
	isABICallStackElementParent_CallStackElement()
}

type ABICallStackElementParent_Element struct {
	// Any ABI call that is not the ABI 'call'
	Element *ABICallStackElement `protobuf:"bytes,1,opt,name=element,proto3,oneof"`
}

type ABICallStackElementParent_ElementCall struct {
	// Element that is the ABI 'call'
	ElementCall *ABICallStackElementCall `protobuf:"bytes,2,opt,name=element_call,json=elementCall,proto3,oneof"`
}

func (*ABICallStackElementParent_Element) isABICallStackElementParent_CallStackElement() {}

func (*ABICallStackElementParent_ElementCall) isABICallStackElementParent_CallStackElement() {}

// Definition of an ABI call stack
type ABICallStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// All elements of the call stack
	CallStack []*ABICallStackElementParent `protobuf:"bytes,1,rep,name=call_stack,json=callStack,proto3" json:"call_stack,omitempty"`
}

func (x *ABICallStack) Reset() {
	*x = ABICallStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABICallStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABICallStack) ProtoMessage() {}

func (x *ABICallStack) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABICallStack.ProtoReflect.Descriptor instead.
func (*ABICallStack) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{105}
}

func (x *ABICallStack) GetCallStack() []*ABICallStackElementParent {
	if x != nil {
		return x.CallStack
	}
	return nil
}

// GetOperationABICallStacks response
type GetOperationABICallStacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallStacks []*ABICallStack `protobuf:"bytes,1,rep,name=call_stacks,json=callStacks,proto3" json:"call_stacks,omitempty"`
}

func (x *GetOperationABICallStacksResponse) Reset() {
	*x = GetOperationABICallStacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOperationABICallStacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperationABICallStacksResponse) ProtoMessage() {}

func (x *GetOperationABICallStacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperationABICallStacksResponse.ProtoReflect.Descriptor instead.
func (*GetOperationABICallStacksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{106}
}

func (x *GetOperationABICallStacksResponse) GetCallStacks() []*ABICallStack {
	if x != nil {
		return x.CallStacks
	}
	return nil
}

// GetSlotABICallStacks request
type GetSlotABICallStacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slots asked
	Slots []*v1.Slot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *GetSlotABICallStacksRequest) Reset() {
	*x = GetSlotABICallStacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotABICallStacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotABICallStacksRequest) ProtoMessage() {}

func (x *GetSlotABICallStacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotABICallStacksRequest.ProtoReflect.Descriptor instead.
func (*GetSlotABICallStacksRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{107}
}

func (x *GetSlotABICallStacksRequest) GetSlots() []*v1.Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

// ABI asynchronous execution call stack
type ASCABICallStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index of the execution in the slot
	Index uint64 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// Call stack
	CallStack []*ABICallStackElementParent `protobuf:"bytes,2,rep,name=call_stack,json=callStack,proto3" json:"call_stack,omitempty"`
}

func (x *ASCABICallStack) Reset() {
	*x = ASCABICallStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASCABICallStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASCABICallStack) ProtoMessage() {}

func (x *ASCABICallStack) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASCABICallStack.ProtoReflect.Descriptor instead.
func (*ASCABICallStack) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{108}
}

func (x *ASCABICallStack) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ASCABICallStack) GetCallStack() []*ABICallStackElementParent {
	if x != nil {
		return x.CallStack
	}
	return nil
}

// Operation execution call stack
type OperationABICallStack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation id
	OperationId string `protobuf:"bytes,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	// Call stack
	CallStack []*ABICallStackElementParent `protobuf:"bytes,2,rep,name=call_stack,json=callStack,proto3" json:"call_stack,omitempty"`
}

func (x *OperationABICallStack) Reset() {
	*x = OperationABICallStack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationABICallStack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationABICallStack) ProtoMessage() {}

func (x *OperationABICallStack) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationABICallStack.ProtoReflect.Descriptor instead.
func (*OperationABICallStack) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{109}
}

func (x *OperationABICallStack) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

func (x *OperationABICallStack) GetCallStack() []*ABICallStackElementParent {
	if x != nil {
		return x.CallStack
	}
	return nil
}

// Call stack for a slot
type SlotABICallStacks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call stacks for asynchronous execution
	AscCallStacks []*ASCABICallStack `protobuf:"bytes,1,rep,name=asc_call_stacks,json=ascCallStacks,proto3" json:"asc_call_stacks,omitempty"`
	// Call stack for operations
	OperationCallStacks []*OperationABICallStack `protobuf:"bytes,2,rep,name=operation_call_stacks,json=operationCallStacks,proto3" json:"operation_call_stacks,omitempty"`
}

func (x *SlotABICallStacks) Reset() {
	*x = SlotABICallStacks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotABICallStacks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotABICallStacks) ProtoMessage() {}

func (x *SlotABICallStacks) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotABICallStacks.ProtoReflect.Descriptor instead.
func (*SlotABICallStacks) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{110}
}

func (x *SlotABICallStacks) GetAscCallStacks() []*ASCABICallStack {
	if x != nil {
		return x.AscCallStacks
	}
	return nil
}

func (x *SlotABICallStacks) GetOperationCallStacks() []*OperationABICallStack {
	if x != nil {
		return x.OperationCallStacks
	}
	return nil
}

// GetSlotABICallStacks response
type GetSlotABICallStacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Call stacks for the slots
	SlotCallStacks []*SlotABICallStacks `protobuf:"bytes,1,rep,name=slot_call_stacks,json=slotCallStacks,proto3" json:"slot_call_stacks,omitempty"`
}

func (x *GetSlotABICallStacksResponse) Reset() {
	*x = GetSlotABICallStacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotABICallStacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotABICallStacksResponse) ProtoMessage() {}

func (x *GetSlotABICallStacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotABICallStacksResponse.ProtoReflect.Descriptor instead.
func (*GetSlotABICallStacksResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{111}
}

func (x *GetSlotABICallStacksResponse) GetSlotCallStacks() []*SlotABICallStacks {
	if x != nil {
		return x.SlotCallStacks
	}
	return nil
}

// GetSlotTransfersRequest holds request for GetSlotTransfers
type GetSlotTransfersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slot to get the transfers from
	Slots []*v1.Slot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *GetSlotTransfersRequest) Reset() {
	*x = GetSlotTransfersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotTransfersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotTransfersRequest) ProtoMessage() {}

func (x *GetSlotTransfersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotTransfersRequest.ProtoReflect.Descriptor instead.
func (*GetSlotTransfersRequest) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{112}
}

func (x *GetSlotTransfersRequest) GetSlots() []*v1.Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

// Transfer info
type TransferInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sender
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// Receiver
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// Amount in nMAS
	Amount uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// Operation id or asc index
	//
	// Types that are assignable to OperationIdOrAscIndex:
	//
	//	*TransferInfo_OperationId
	//	*TransferInfo_AscIndex
	OperationIdOrAscIndex isTransferInfo_OperationIdOrAscIndex `protobuf_oneof:"operation_id_or_asc_index"`
}

func (x *TransferInfo) Reset() {
	*x = TransferInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInfo) ProtoMessage() {}

func (x *TransferInfo) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInfo.ProtoReflect.Descriptor instead.
func (*TransferInfo) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{113}
}

func (x *TransferInfo) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransferInfo) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransferInfo) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (m *TransferInfo) GetOperationIdOrAscIndex() isTransferInfo_OperationIdOrAscIndex {
	if m != nil {
		return m.OperationIdOrAscIndex
	}
	return nil
}

func (x *TransferInfo) GetOperationId() string {
	if x, ok := x.GetOperationIdOrAscIndex().(*TransferInfo_OperationId); ok {
		return x.OperationId
	}
	return ""
}

func (x *TransferInfo) GetAscIndex() uint64 {
	if x, ok := x.GetOperationIdOrAscIndex().(*TransferInfo_AscIndex); ok {
		return x.AscIndex
	}
	return 0
}

type isTransferInfo_OperationIdOrAscIndex interface {
	isTransferInfo_OperationIdOrAscIndex()
}

type TransferInfo_OperationId struct {
	// Operation id
	OperationId string `protobuf:"bytes,4,opt,name=operation_id,json=operationId,proto3,oneof"`
}

type TransferInfo_AscIndex struct {
	// Asynchronous execution index
	AscIndex uint64 `protobuf:"varint,5,opt,name=asc_index,json=ascIndex,proto3,oneof"`
}

func (*TransferInfo_OperationId) isTransferInfo_OperationIdOrAscIndex() {}

func (*TransferInfo_AscIndex) isTransferInfo_OperationIdOrAscIndex() {}

// List of transfers for a slot
type TransferInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Slot
	Slot *v1.Slot `protobuf:"bytes,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// Transfers
	Transfers []*TransferInfo `protobuf:"bytes,2,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *TransferInfos) Reset() {
	*x = TransferInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInfos) ProtoMessage() {}

func (x *TransferInfos) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInfos.ProtoReflect.Descriptor instead.
func (*TransferInfos) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{114}
}

func (x *TransferInfos) GetSlot() *v1.Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *TransferInfos) GetTransfers() []*TransferInfo {
	if x != nil {
		return x.Transfers
	}
	return nil
}

// GetSlotTransfersResponse holds response from GetSlotTransfers
type GetSlotTransfersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Transfers for the slot
	TransferEachSlot []*TransferInfos `protobuf:"bytes,1,rep,name=transfer_each_slot,json=transferEachSlot,proto3" json:"transfer_each_slot,omitempty"`
}

func (x *GetSlotTransfersResponse) Reset() {
	*x = GetSlotTransfersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_massa_api_v1_public_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotTransfersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotTransfersResponse) ProtoMessage() {}

func (x *GetSlotTransfersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_massa_api_v1_public_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotTransfersResponse.ProtoReflect.Descriptor instead.
func (*GetSlotTransfersResponse) Descriptor() ([]byte, []int) {
	return file_massa_api_v1_public_proto_rawDescGZIP(), []int{115}
}

func (x *GetSlotTransfersResponse) GetTransferEachSlot() []*TransferInfos {
	if x != nil {
		return x.TransferEachSlot
	}
	return nil
}

var File_massa_api_v1_public_proto protoreflect.FileDescriptor

var file_massa_api_v1_public_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6e,
	0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x72, 0x61, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x57, 0x0a, 0x1a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0x5e, 0x0a, 0x1b, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c,
	0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x0e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x0d, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x22, 0x5d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x67, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a,
	0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x70, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x14, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x5f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x13, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x20, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x63,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x3b, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x22, 0x68, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x12, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x11, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x17, 0x53,
	0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x0f, 0x65,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x09, 0x69, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x40, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x56, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x72, 0x61, 0x77, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x72, 0x61, 0x77, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x44, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x05, 0x64, 0x72, 0x61, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6c, 0x6f, 0x74, 0x44, 0x72, 0x61, 0x77, 0x52, 0x05, 0x64, 0x72, 0x61, 0x77, 0x73, 0x22,
	0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x6f, 0x0a, 0x0d, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x09,
	0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x22, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x72, 0x6f,
	0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a,
	0x21, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x22, 0x56, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa3, 0x10, 0x0a, 0x19, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x60, 0x0a, 0x18, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x5f, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x12, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x63, 0x0a, 0x19, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x17, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x13, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x66,
	0x0a, 0x1a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64,
	0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x18, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x5a, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x74,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x14, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x76, 0x0a, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x6a, 0x0a, 0x1c, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x19, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x79, 0x0a, 0x21, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x1e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x6d, 0x0a, 0x1d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x1a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x6d, 0x0a, 0x1d, 0x6f, 0x70, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x1a, 0x6f, 0x70, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x61, 0x0a, 0x19, 0x6f, 0x70, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x16, 0x6f, 0x70, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x8b, 0x01, 0x0a, 0x27, 0x64, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x24, 0x64, 0x65, 0x6e, 0x75,
	0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x7f, 0x0a, 0x23, 0x64, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e,
	0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52,
	0x20, 0x64, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x12, 0x5d, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c,
	0x6c, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x15, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x51, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x6c,
	0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00,
	0x52, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x7c, 0x0a, 0x22, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x5f,
	0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x1f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x70, 0x0a, 0x1e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x5f, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x1b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x0e, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x32, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2f, 0x0a, 0x13, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x30, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x79, 0x74, 0x65, 0x63,
	0x6f, 0x64, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x51, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x4d, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x22, 0x4c, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x48, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3f, 0x0a, 0x1a,
	0x4f, 0x70, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3b, 0x0a,
	0x16, 0x4f, 0x70, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x24, 0x44, 0x65,
	0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x64, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x11, 0x64, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x74, 0x0a, 0x20, 0x44, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x12, 0x64, 0x65, 0x6e, 0x75,
	0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x11, 0x64, 0x65, 0x6e, 0x75, 0x6e, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x31, 0x0a, 0x15, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2d, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x6c, 0x73, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x1f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x37, 0x0a, 0x1b, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x69, 0x74, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x56, 0x0a, 0x0a, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x06, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x42,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xba, 0x04, 0x0a,
	0x1a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x07, 0x62,
	0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07,
	0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x72,
	0x6f, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x76, 0x65, 0x63, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x4f, 0x66, 0x42, 0x79, 0x74, 0x65, 0x73, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x08, 0x76, 0x65, 0x63, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x10,
	0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49,
	0x0a, 0x0b, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x5b, 0x0a, 0x1b, 0x44, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x14, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x28,
	0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9b,
	0x01, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x4e, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x75, 0x0a, 0x1d,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x6f,
	0x6c, 0x6c, 0x73, 0x12, 0x65, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x2c, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x27, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51,
	0x0a, 0x15, 0x53, 0x63, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x4b, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xcb,
	0x01, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x48,
	0x00, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x53, 0x0a, 0x11,
	0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x57, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x45,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x4e,
	0x65, 0x77, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x48, 0x00, 0x52,
	0x0e, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x39, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x48, 0x00, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x6b, 0x0a,
	0x17, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x16, 0x4e, 0x65,
	0x77, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xd1, 0x01,
	0x0a, 0x15, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x73, 0x48, 0x00, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73,
	0x12, 0x39, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6c,
	0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x59, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x0b, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x53, 0x0a, 0x14,
	0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x22, 0xe3, 0x01, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x48, 0x00,
	0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x39,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x08, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a, 0x1e,
	0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x85, 0x05, 0x0a, 0x1d, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x61, 0x0a, 0x19, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x16, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x1d, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x1b, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x67, 0x0a, 0x1b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70,
	0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x70,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x18, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x15, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xae, 0x02,
	0x0a, 0x16, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6f, 0x6c, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x07, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x13,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x29, 0x0a, 0x0f, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61,
	0x6e, 0x5f, 0x62, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x42, 0x65, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x65,
	0x0a, 0x10, 0x50, 0x6f, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xf8, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x0f, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0e, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x34, 0x0a, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x69, 0x73, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x76, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04,
	0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x1b, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x6f, 0x6e, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x68,
	0x0a, 0x13, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x5e, 0x0a, 0x1f, 0x4e, 0x65, 0x77, 0x53,
	0x6c, 0x6f, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x61, 0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x53,
	0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0d, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xe8, 0x01, 0x0a, 0x1c,
	0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x61, 0x73, 0x63, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x53, 0x43, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x0d,
	0x61, 0x73, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x57, 0x0a,
	0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x5d, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x7e, 0x0a, 0x18, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x22, 0x29, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x22, 0x6a, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x17,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x18,
	0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x37, 0x0a, 0x15,
	0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x59,
	0x0a, 0x1d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x38, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x40, 0x0a, 0x1e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x22, 0x51, 0x0a, 0x13, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xce,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x73, 0x48, 0x00, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x39,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x6c, 0x6f,
	0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x52, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x5d, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x40, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x49, 0x0a, 0x0f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x73, 0x48, 0x00, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x59, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22,
	0xa2, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x48,
	0x00, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12,
	0x39, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x48, 0x00, 0x52,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x47, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x73, 0x22, 0x6c, 0x0a, 0x13, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xb6, 0x01, 0x0a, 0x17, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x44, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x75, 0x62,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x19, 0x41, 0x42, 0x49,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x42, 0x49, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x6c, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x42, 0x14, 0x0a, 0x12, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x0c, 0x41, 0x42, 0x49, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x46, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x42, 0x49, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x22,
	0x60, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x73, 0x22, 0x49, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49, 0x43,
	0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x0f,
	0x41, 0x53, 0x43, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x46, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x22, 0x82, 0x01,
	0x0a, 0x15, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x42, 0x49, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x42,
	0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x22, 0xb3, 0x01, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x61, 0x73, 0x63, 0x5f,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x53, 0x43, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x52, 0x0d, 0x61, 0x73, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12,
	0x57, 0x0a, 0x15, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x69, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53,
	0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x10, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x73, 0x52, 0x0e, 0x73, 0x6c, 0x6f, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x73, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09,
	0x61, 0x73, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x08, 0x61, 0x73, 0x63, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x1b, 0x0a, 0x19, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x61,
	0x73, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x73, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x22, 0x65, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x65, 0x61, 0x63, 0x68, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x61, 0x63, 0x68,
	0x53, 0x6c, 0x6f, 0x74, 0x2a, 0x95, 0x02, 0x0a, 0x1d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a, 0x2c, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x42, 0x0a, 0x3e, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x44, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x42, 0x0a, 0x3e,
	0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f,
	0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45,
	0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02,
	0x12, 0x3a, 0x0a, 0x36, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f,
	0x4f, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x67, 0x0a, 0x0d,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a,
	0x1a, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a,
	0x18, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f,
	0x43, 0x41, 0x4e, 0x44, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x46,
	0x49, 0x4e, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x46, 0x49,
	0x4e, 0x41, 0x4c, 0x10, 0x02, 0x32, 0x97, 0x1c, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x12,
	0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x61,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22,
	0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x67, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x7f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a,
	0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xa2, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x78, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x42, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x77, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a,
	0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x29, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01,
	0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x63, 0x5f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x84,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x72,
	0x61, 0x77, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x72,
	0x61, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x72, 0x61, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x64, 0x72, 0x61, 0x77, 0x73, 0x12, 0x6b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01,
	0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x73, 0x12, 0x67, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0xa4, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54,
	0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70,
	0x75, 0x74, 0x12, 0x6b, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f,
	0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x73, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x21, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01,
	0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01,
	0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xaa, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a,
	0x01, 0x2a, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x62, 0x69, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x29,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74,
	0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a,
	0x22, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x61,
	0x62, 0x69, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x84,
	0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x52, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x64, 0x0a, 0x0f, 0x4e, 0x65, 0x77,
	0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x45,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x64, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5e, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x7c, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x2c, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x77, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x73, 0x0a, 0x14, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x42,
	0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x29, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x6c,
	0x6f, 0x74, 0x41, 0x42, 0x49, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x41, 0x42, 0x49,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x53,
	0x6c, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x53,
	0x6c, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x55, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x61, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x12, 0x79, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75, 0x74, 0x12, 0x2b,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67,
	0x68, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x61, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x70, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x91, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x61, 0x74, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x6d, 0x61, 0x73,
	0x73, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x61, 0x73, 0x73, 0x61, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x41, 0x50, 0x49,
	0xaa, 0x02, 0x10, 0x43, 0x6f, 0x6d, 0x2e, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x2e, 0x41, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0xba, 0x02, 0x04, 0x4d, 0x41, 0x50, 0x49, 0xca, 0x02, 0x10, 0x43, 0x6f, 0x6d,
	0x5c, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xea, 0x02, 0x13,
	0x43, 0x6f, 0x6d, 0x3a, 0x3a, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_massa_api_v1_public_proto_rawDescOnce sync.Once
	file_massa_api_v1_public_proto_rawDescData = file_massa_api_v1_public_proto_rawDesc
)

func file_massa_api_v1_public_proto_rawDescGZIP() []byte {
	file_massa_api_v1_public_proto_rawDescOnce.Do(func() {
		file_massa_api_v1_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_massa_api_v1_public_proto_rawDescData)
	})
	return file_massa_api_v1_public_proto_rawDescData
}

var file_massa_api_v1_public_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_massa_api_v1_public_proto_msgTypes = make([]protoimpl.MessageInfo, 116)
var file_massa_api_v1_public_proto_goTypes = []interface{}{
	(ExecutionQueryExecutionStatus)(0),                   // 0: massa.api.v1.ExecutionQueryExecutionStatus
	(FinalityLevel)(0),                                   // 1: massa.api.v1.FinalityLevel
	(*ExecuteReadOnlyCallRequest)(nil),                   // 2: massa.api.v1.ExecuteReadOnlyCallRequest
	(*ExecuteReadOnlyCallResponse)(nil),                  // 3: massa.api.v1.ExecuteReadOnlyCallResponse
	(*GetBlocksRequest)(nil),                             // 4: massa.api.v1.GetBlocksRequest
	(*GetBlocksResponse)(nil),                            // 5: massa.api.v1.GetBlocksResponse
	(*GetDatastoreEntriesRequest)(nil),                   // 6: massa.api.v1.GetDatastoreEntriesRequest
	(*GetDatastoreEntryFilter)(nil),                      // 7: massa.api.v1.GetDatastoreEntryFilter
	(*GetDatastoreEntriesResponse)(nil),                  // 8: massa.api.v1.GetDatastoreEntriesResponse
	(*GetEndorsementsRequest)(nil),                       // 9: massa.api.v1.GetEndorsementsRequest
	(*GetEndorsementsResponse)(nil),                      // 10: massa.api.v1.GetEndorsementsResponse
	(*GetNextBlockBestParentsRequest)(nil),               // 11: massa.api.v1.GetNextBlockBestParentsRequest
	(*GetNextBlockBestParentsResponse)(nil),              // 12: massa.api.v1.GetNextBlockBestParentsResponse
	(*GetOperationsRequest)(nil),                         // 13: massa.api.v1.GetOperationsRequest
	(*GetOperationsResponse)(nil),                        // 14: massa.api.v1.GetOperationsResponse
	(*GetScExecutionEventsRequest)(nil),                  // 15: massa.api.v1.GetScExecutionEventsRequest
	(*ScExecutionEventsFilter)(nil),                      // 16: massa.api.v1.ScExecutionEventsFilter
	(*GetScExecutionEventsResponse)(nil),                 // 17: massa.api.v1.GetScExecutionEventsResponse
	(*GetStatusRequest)(nil),                             // 18: massa.api.v1.GetStatusRequest
	(*GetStatusResponse)(nil),                            // 19: massa.api.v1.GetStatusResponse
	(*GetSelectorDrawsRequest)(nil),                      // 20: massa.api.v1.GetSelectorDrawsRequest
	(*SelectorDrawsFilter)(nil),                          // 21: massa.api.v1.SelectorDrawsFilter
	(*GetSelectorDrawsResponse)(nil),                     // 22: massa.api.v1.GetSelectorDrawsResponse
	(*GetStakersRequest)(nil),                            // 23: massa.api.v1.GetStakersRequest
	(*StakersFilter)(nil),                                // 24: massa.api.v1.StakersFilter
	(*GetStakersResponse)(nil),                           // 25: massa.api.v1.GetStakersResponse
	(*GetTransactionsThroughputRequest)(nil),             // 26: massa.api.v1.GetTransactionsThroughputRequest
	(*GetTransactionsThroughputResponse)(nil),            // 27: massa.api.v1.GetTransactionsThroughputResponse
	(*QueryStateRequest)(nil),                            // 28: massa.api.v1.QueryStateRequest
	(*ExecutionQueryRequestItem)(nil),                    // 29: massa.api.v1.ExecutionQueryRequestItem
	(*AddressExistsCandidate)(nil),                       // 30: massa.api.v1.AddressExistsCandidate
	(*AddressExistsFinal)(nil),                           // 31: massa.api.v1.AddressExistsFinal
	(*AddressBalanceCandidate)(nil),                      // 32: massa.api.v1.AddressBalanceCandidate
	(*AddressBalanceFinal)(nil),                          // 33: massa.api.v1.AddressBalanceFinal
	(*AddressBytecodeCandidate)(nil),                     // 34: massa.api.v1.AddressBytecodeCandidate
	(*AddressBytecodeFinal)(nil),                         // 35: massa.api.v1.AddressBytecodeFinal
	(*AddressDatastoreKeysCandidate)(nil),                // 36: massa.api.v1.AddressDatastoreKeysCandidate
	(*AddressDatastoreKeysFinal)(nil),                    // 37: massa.api.v1.AddressDatastoreKeysFinal
	(*AddressDatastoreValueCandidate)(nil),               // 38: massa.api.v1.AddressDatastoreValueCandidate
	(*AddressDatastoreValueFinal)(nil),                   // 39: massa.api.v1.AddressDatastoreValueFinal
	(*OpExecutionStatusCandidate)(nil),                   // 40: massa.api.v1.OpExecutionStatusCandidate
	(*OpExecutionStatusFinal)(nil),                       // 41: massa.api.v1.OpExecutionStatusFinal
	(*DenunciationExecutionStatusCandidate)(nil),         // 42: massa.api.v1.DenunciationExecutionStatusCandidate
	(*DenunciationExecutionStatusFinal)(nil),             // 43: massa.api.v1.DenunciationExecutionStatusFinal
	(*AddressRollsCandidate)(nil),                        // 44: massa.api.v1.AddressRollsCandidate
	(*AddressRollsFinal)(nil),                            // 45: massa.api.v1.AddressRollsFinal
	(*AddressDeferredCreditsCandidate)(nil),              // 46: massa.api.v1.AddressDeferredCreditsCandidate
	(*AddressDeferredCreditsFinal)(nil),                  // 47: massa.api.v1.AddressDeferredCreditsFinal
	(*CycleInfos)(nil),                                   // 48: massa.api.v1.CycleInfos
	(*Events)(nil),                                       // 49: massa.api.v1.Events
	(*QueryStateResponse)(nil),                           // 50: massa.api.v1.QueryStateResponse
	(*ExecutionQueryResponse)(nil),                       // 51: massa.api.v1.ExecutionQueryResponse
	(*ExecutionQueryResponseItem)(nil),                   // 52: massa.api.v1.ExecutionQueryResponseItem
	(*DeferredCreditsEntryWrapper)(nil),                  // 53: massa.api.v1.DeferredCreditsEntryWrapper
	(*DeferredCreditsEntry)(nil),                         // 54: massa.api.v1.DeferredCreditsEntry
	(*ExecutionQueryCycleInfos)(nil),                     // 55: massa.api.v1.ExecutionQueryCycleInfos
	(*ExecutionQueryStakerInfoEntry)(nil),                // 56: massa.api.v1.ExecutionQueryStakerInfoEntry
	(*ExecutionQueryStakerInfo)(nil),                     // 57: massa.api.v1.ExecutionQueryStakerInfo
	(*ExecutionQueryStakerInfoProductionStatsEntry)(nil), // 58: massa.api.v1.ExecutionQueryStakerInfoProductionStatsEntry
	(*ExecutionQueryStakerInfoProductionStats)(nil),      // 59: massa.api.v1.ExecutionQueryStakerInfoProductionStats
	(*ScOutputEventsWrapper)(nil),                        // 60: massa.api.v1.ScOutputEventsWrapper
	(*NewBlocksRequest)(nil),                             // 61: massa.api.v1.NewBlocksRequest
	(*NewBlocksFilter)(nil),                              // 62: massa.api.v1.NewBlocksFilter
	(*NewBlocksResponse)(nil),                            // 63: massa.api.v1.NewBlocksResponse
	(*NewEndorsementsRequest)(nil),                       // 64: massa.api.v1.NewEndorsementsRequest
	(*NewEndorsementsFilter)(nil),                        // 65: massa.api.v1.NewEndorsementsFilter
	(*NewEndorsementsResponse)(nil),                      // 66: massa.api.v1.NewEndorsementsResponse
	(*NewFilledBlocksRequest)(nil),                       // 67: massa.api.v1.NewFilledBlocksRequest
	(*NewFilledBlocksFilter)(nil),                        // 68: massa.api.v1.NewFilledBlocksFilter
	(*NewFilledBlocksResponse)(nil),                      // 69: massa.api.v1.NewFilledBlocksResponse
	(*NewOperationsRequest)(nil),                         // 70: massa.api.v1.NewOperationsRequest
	(*NewOperationsFilter)(nil),                          // 71: massa.api.v1.NewOperationsFilter
	(*NewOperationsResponse)(nil),                        // 72: massa.api.v1.NewOperationsResponse
	(*NewSlotExecutionOutputsRequest)(nil),               // 73: massa.api.v1.NewSlotExecutionOutputsRequest
	(*NewSlotExecutionOutputsFilter)(nil),                // 74: massa.api.v1.NewSlotExecutionOutputsFilter
	(*AsyncPoolChangesFilter)(nil),                       // 75: massa.api.v1.AsyncPoolChangesFilter
	(*PosChangesFilter)(nil),                             // 76: massa.api.v1.PosChangesFilter
	(*ExecutionEventFilter)(nil),                         // 77: massa.api.v1.ExecutionEventFilter
	(*ExecutedOpsChangesFilter)(nil),                     // 78: massa.api.v1.ExecutedOpsChangesFilter
	(*ExecutedDenounciationFilter)(nil),                  // 79: massa.api.v1.ExecutedDenounciationFilter
	(*LedgerChangesFilter)(nil),                          // 80: massa.api.v1.LedgerChangesFilter
	(*NewSlotExecutionOutputsResponse)(nil),              // 81: massa.api.v1.NewSlotExecutionOutputsResponse
	(*NewSlotABICallStacksRequest)(nil),                  // 82: massa.api.v1.NewSlotABICallStacksRequest
	(*NewSlotABICallStacksResponse)(nil),                 // 83: massa.api.v1.NewSlotABICallStacksResponse
	(*NewSlotTransfersRequest)(nil),                      // 84: massa.api.v1.NewSlotTransfersRequest
	(*NewSlotTransfersResponse)(nil),                     // 85: massa.api.v1.NewSlotTransfersResponse
	(*SendBlocksRequest)(nil),                            // 86: massa.api.v1.SendBlocksRequest
	(*SendBlocksResponse)(nil),                           // 87: massa.api.v1.SendBlocksResponse
	(*SendEndorsementsRequest)(nil),                      // 88: massa.api.v1.SendEndorsementsRequest
	(*SendEndorsementsResponse)(nil),                     // 89: massa.api.v1.SendEndorsementsResponse
	(*SendOperationsRequest)(nil),                        // 90: massa.api.v1.SendOperationsRequest
	(*SendOperationsResponse)(nil),                       // 91: massa.api.v1.SendOperationsResponse
	(*TransactionsThroughputRequest)(nil),                // 92: massa.api.v1.TransactionsThroughputRequest
	(*TransactionsThroughputResponse)(nil),               // 93: massa.api.v1.TransactionsThroughputResponse
	(*SearchBlocksRequest)(nil),                          // 94: massa.api.v1.SearchBlocksRequest
	(*SearchBlocksFilter)(nil),                           // 95: massa.api.v1.SearchBlocksFilter
	(*SearchBlocksResponse)(nil),                         // 96: massa.api.v1.SearchBlocksResponse
	(*SearchEndorsementsRequest)(nil),                    // 97: massa.api.v1.SearchEndorsementsRequest
	(*SearchEndorsementsFilter)(nil),                     // 98: massa.api.v1.SearchEndorsementsFilter
	(*SearchEndorsementsResponse)(nil),                   // 99: massa.api.v1.SearchEndorsementsResponse
	(*SearchOperationsRequest)(nil),                      // 100: massa.api.v1.SearchOperationsRequest
	(*SearchOperationsFilter)(nil),                       // 101: massa.api.v1.SearchOperationsFilter
	(*SearchOperationsResponse)(nil),                     // 102: massa.api.v1.SearchOperationsResponse
	(*GetOperationABICallStacksRequest)(nil),             // 103: massa.api.v1.GetOperationABICallStacksRequest
	(*ABICallStackElement)(nil),                          // 104: massa.api.v1.ABICallStackElement
	(*ABICallStackElementCall)(nil),                      // 105: massa.api.v1.ABICallStackElementCall
	(*ABICallStackElementParent)(nil),                    // 106: massa.api.v1.ABICallStackElementParent
	(*ABICallStack)(nil),                                 // 107: massa.api.v1.ABICallStack
	(*GetOperationABICallStacksResponse)(nil),            // 108: massa.api.v1.GetOperationABICallStacksResponse
	(*GetSlotABICallStacksRequest)(nil),                  // 109: massa.api.v1.GetSlotABICallStacksRequest
	(*ASCABICallStack)(nil),                              // 110: massa.api.v1.ASCABICallStack
	(*OperationABICallStack)(nil),                        // 111: massa.api.v1.OperationABICallStack
	(*SlotABICallStacks)(nil),                            // 112: massa.api.v1.SlotABICallStacks
	(*GetSlotABICallStacksResponse)(nil),                 // 113: massa.api.v1.GetSlotABICallStacksResponse
	(*GetSlotTransfersRequest)(nil),                      // 114: massa.api.v1.GetSlotTransfersRequest
	(*TransferInfo)(nil),                                 // 115: massa.api.v1.TransferInfo
	(*TransferInfos)(nil),                                // 116: massa.api.v1.TransferInfos
	(*GetSlotTransfersResponse)(nil),                     // 117: massa.api.v1.GetSlotTransfersResponse
	(*v1.ReadOnlyExecutionCall)(nil),                     // 118: massa.model.v1.ReadOnlyExecutionCall
	(*v1.ReadOnlyExecutionOutput)(nil),                   // 119: massa.model.v1.ReadOnlyExecutionOutput
	(*v1.BlockWrapper)(nil),                              // 120: massa.model.v1.BlockWrapper
	(*v1.AddressKeyEntry)(nil),                           // 121: massa.model.v1.AddressKeyEntry
	(*v1.DatastoreEntry)(nil),                            // 122: massa.model.v1.DatastoreEntry
	(*v1.EndorsementWrapper)(nil),                        // 123: massa.model.v1.EndorsementWrapper
	(*v1.BlockParent)(nil),                               // 124: massa.model.v1.BlockParent
	(*v1.OperationWrapper)(nil),                          // 125: massa.model.v1.OperationWrapper
	(*v1.SlotRange)(nil),                                 // 126: massa.model.v1.SlotRange
	(v1.ScExecutionEventStatus)(0),                       // 127: massa.model.v1.ScExecutionEventStatus
	(*v1.ScExecutionEvent)(nil),                          // 128: massa.model.v1.ScExecutionEvent
	(*v1.PublicStatus)(nil),                              // 129: massa.model.v1.PublicStatus
	(*v1.Addresses)(nil),                                 // 130: massa.model.v1.Addresses
	(*v1.SlotDraw)(nil),                                  // 131: massa.model.v1.SlotDraw
	(*v1.StakerEntry)(nil),                               // 132: massa.model.v1.StakerEntry
	(*v1.DenunciationIndex)(nil),                         // 133: massa.model.v1.DenunciationIndex
	(*v1.Slot)(nil),                                      // 134: massa.model.v1.Slot
	(*v1.Error)(nil),                                     // 135: massa.model.v1.Error
	(*v1.NativeAmount)(nil),                              // 136: massa.model.v1.NativeAmount
	(*v1.ArrayOfBytesWrapper)(nil),                       // 137: massa.model.v1.ArrayOfBytesWrapper
	(*v1.BlockIds)(nil),                                  // 138: massa.model.v1.BlockIds
	(*v1.SignedBlock)(nil),                               // 139: massa.model.v1.SignedBlock
	(*v1.EndorsementIds)(nil),                            // 140: massa.model.v1.EndorsementIds
	(*v1.SignedEndorsement)(nil),                         // 141: massa.model.v1.SignedEndorsement
	(*v1.FilledBlock)(nil),                               // 142: massa.model.v1.FilledBlock
	(*v1.OperationIds)(nil),                              // 143: massa.model.v1.OperationIds
	(*v1.OpTypes)(nil),                                   // 144: massa.model.v1.OpTypes
	(*v1.SignedOperation)(nil),                           // 145: massa.model.v1.SignedOperation
	(v1.ExecutionOutputStatus)(0),                        // 146: massa.model.v1.ExecutionOutputStatus
	(*v1.Empty)(nil),                                     // 147: massa.model.v1.Empty
	(v1.AsyncPoolChangeType)(0),                          // 148: massa.model.v1.AsyncPoolChangeType
	(*v1.SlotExecutionOutput)(nil),                       // 149: massa.model.v1.SlotExecutionOutput
	(*wrapperspb.UInt64Value)(nil),                       // 150: google.protobuf.UInt64Value
	(*v1.BlockInfo)(nil),                                 // 151: massa.model.v1.BlockInfo
	(*v1.EndorsementInfo)(nil),                           // 152: massa.model.v1.EndorsementInfo
	(*v1.OperationInfo)(nil),                             // 153: massa.model.v1.OperationInfo
}
var file_massa_api_v1_public_proto_depIdxs = []int32{
	118, // 0: massa.api.v1.ExecuteReadOnlyCallRequest.call:type_name -> massa.model.v1.ReadOnlyExecutionCall
	119, // 1: massa.api.v1.ExecuteReadOnlyCallResponse.output:type_name -> massa.model.v1.ReadOnlyExecutionOutput
	120, // 2: massa.api.v1.GetBlocksResponse.wrapped_blocks:type_name -> massa.model.v1.BlockWrapper
	7,   // 3: massa.api.v1.GetDatastoreEntriesRequest.filters:type_name -> massa.api.v1.GetDatastoreEntryFilter
	121, // 4: massa.api.v1.GetDatastoreEntryFilter.address_key:type_name -> massa.model.v1.AddressKeyEntry
	122, // 5: massa.api.v1.GetDatastoreEntriesResponse.datastore_entries:type_name -> massa.model.v1.DatastoreEntry
	123, // 6: massa.api.v1.GetEndorsementsResponse.wrapped_endorsements:type_name -> massa.model.v1.EndorsementWrapper
	124, // 7: massa.api.v1.GetNextBlockBestParentsResponse.block_parents:type_name -> massa.model.v1.BlockParent
	125, // 8: massa.api.v1.GetOperationsResponse.wrapped_operations:type_name -> massa.model.v1.OperationWrapper
	16,  // 9: massa.api.v1.GetScExecutionEventsRequest.filters:type_name -> massa.api.v1.ScExecutionEventsFilter
	126, // 10: massa.api.v1.ScExecutionEventsFilter.slot_range:type_name -> massa.model.v1.SlotRange
	127, // 11: massa.api.v1.ScExecutionEventsFilter.status:type_name -> massa.model.v1.ScExecutionEventStatus
	128, // 12: massa.api.v1.GetScExecutionEventsResponse.events:type_name -> massa.model.v1.ScExecutionEvent
	129, // 13: massa.api.v1.GetStatusResponse.status:type_name -> massa.model.v1.PublicStatus
	21,  // 14: massa.api.v1.GetSelectorDrawsRequest.filters:type_name -> massa.api.v1.SelectorDrawsFilter
	130, // 15: massa.api.v1.SelectorDrawsFilter.addresses:type_name -> massa.model.v1.Addresses
	126, // 16: massa.api.v1.SelectorDrawsFilter.slot_range:type_name -> massa.model.v1.SlotRange
	131, // 17: massa.api.v1.GetSelectorDrawsResponse.draws:type_name -> massa.model.v1.SlotDraw
	24,  // 18: massa.api.v1.GetStakersRequest.filters:type_name -> massa.api.v1.StakersFilter
	132, // 19: massa.api.v1.GetStakersResponse.stakers:type_name -> massa.model.v1.StakerEntry
	29,  // 20: massa.api.v1.QueryStateRequest.queries:type_name -> massa.api.v1.ExecutionQueryRequestItem
	30,  // 21: massa.api.v1.ExecutionQueryRequestItem.address_exists_candidate:type_name -> massa.api.v1.AddressExistsCandidate
	31,  // 22: massa.api.v1.ExecutionQueryRequestItem.address_exists_final:type_name -> massa.api.v1.AddressExistsFinal
	32,  // 23: massa.api.v1.ExecutionQueryRequestItem.address_balance_candidate:type_name -> massa.api.v1.AddressBalanceCandidate
	33,  // 24: massa.api.v1.ExecutionQueryRequestItem.address_balance_final:type_name -> massa.api.v1.AddressBalanceFinal
	34,  // 25: massa.api.v1.ExecutionQueryRequestItem.address_bytecode_candidate:type_name -> massa.api.v1.AddressBytecodeCandidate
	35,  // 26: massa.api.v1.ExecutionQueryRequestItem.address_bytecode_final:type_name -> massa.api.v1.AddressBytecodeFinal
	36,  // 27: massa.api.v1.ExecutionQueryRequestItem.address_datastore_keys_candidate:type_name -> massa.api.v1.AddressDatastoreKeysCandidate
	37,  // 28: massa.api.v1.ExecutionQueryRequestItem.address_datastore_keys_final:type_name -> massa.api.v1.AddressDatastoreKeysFinal
	38,  // 29: massa.api.v1.ExecutionQueryRequestItem.address_datastore_value_candidate:type_name -> massa.api.v1.AddressDatastoreValueCandidate
	39,  // 30: massa.api.v1.ExecutionQueryRequestItem.address_datastore_value_final:type_name -> massa.api.v1.AddressDatastoreValueFinal
	40,  // 31: massa.api.v1.ExecutionQueryRequestItem.op_execution_status_candidate:type_name -> massa.api.v1.OpExecutionStatusCandidate
	41,  // 32: massa.api.v1.ExecutionQueryRequestItem.op_execution_status_final:type_name -> massa.api.v1.OpExecutionStatusFinal
	42,  // 33: massa.api.v1.ExecutionQueryRequestItem.denunciation_execution_status_candidate:type_name -> massa.api.v1.DenunciationExecutionStatusCandidate
	43,  // 34: massa.api.v1.ExecutionQueryRequestItem.denunciation_execution_status_final:type_name -> massa.api.v1.DenunciationExecutionStatusFinal
	44,  // 35: massa.api.v1.ExecutionQueryRequestItem.address_rolls_candidate:type_name -> massa.api.v1.AddressRollsCandidate
	45,  // 36: massa.api.v1.ExecutionQueryRequestItem.address_rolls_final:type_name -> massa.api.v1.AddressRollsFinal
	46,  // 37: massa.api.v1.ExecutionQueryRequestItem.address_deferred_credits_candidate:type_name -> massa.api.v1.AddressDeferredCreditsCandidate
	47,  // 38: massa.api.v1.ExecutionQueryRequestItem.address_deferred_credits_final:type_name -> massa.api.v1.AddressDeferredCreditsFinal
	48,  // 39: massa.api.v1.ExecutionQueryRequestItem.cycle_infos:type_name -> massa.api.v1.CycleInfos
	49,  // 40: massa.api.v1.ExecutionQueryRequestItem.events:type_name -> massa.api.v1.Events
	133, // 41: massa.api.v1.DenunciationExecutionStatusCandidate.denunciation_index:type_name -> massa.model.v1.DenunciationIndex
	133, // 42: massa.api.v1.DenunciationExecutionStatusFinal.denunciation_index:type_name -> massa.model.v1.DenunciationIndex
	16,  // 43: massa.api.v1.Events.filters:type_name -> massa.api.v1.ScExecutionEventsFilter
	134, // 44: massa.api.v1.QueryStateResponse.final_cursor:type_name -> massa.model.v1.Slot
	134, // 45: massa.api.v1.QueryStateResponse.candidate_cursor:type_name -> massa.model.v1.Slot
	51,  // 46: massa.api.v1.QueryStateResponse.responses:type_name -> massa.api.v1.ExecutionQueryResponse
	52,  // 47: massa.api.v1.ExecutionQueryResponse.result:type_name -> massa.api.v1.ExecutionQueryResponseItem
	135, // 48: massa.api.v1.ExecutionQueryResponse.error:type_name -> massa.model.v1.Error
	136, // 49: massa.api.v1.ExecutionQueryResponseItem.amount:type_name -> massa.model.v1.NativeAmount
	137, // 50: massa.api.v1.ExecutionQueryResponseItem.vec_bytes:type_name -> massa.model.v1.ArrayOfBytesWrapper
	53,  // 51: massa.api.v1.ExecutionQueryResponseItem.deferred_credits:type_name -> massa.api.v1.DeferredCreditsEntryWrapper
	0,   // 52: massa.api.v1.ExecutionQueryResponseItem.execution_status:type_name -> massa.api.v1.ExecutionQueryExecutionStatus
	55,  // 53: massa.api.v1.ExecutionQueryResponseItem.cycle_infos:type_name -> massa.api.v1.ExecutionQueryCycleInfos
	60,  // 54: massa.api.v1.ExecutionQueryResponseItem.events:type_name -> massa.api.v1.ScOutputEventsWrapper
	54,  // 55: massa.api.v1.DeferredCreditsEntryWrapper.entries:type_name -> massa.api.v1.DeferredCreditsEntry
	134, // 56: massa.api.v1.DeferredCreditsEntry.slot:type_name -> massa.model.v1.Slot
	136, // 57: massa.api.v1.DeferredCreditsEntry.amount:type_name -> massa.model.v1.NativeAmount
	56,  // 58: massa.api.v1.ExecutionQueryCycleInfos.staker_infos:type_name -> massa.api.v1.ExecutionQueryStakerInfoEntry
	57,  // 59: massa.api.v1.ExecutionQueryStakerInfoEntry.info:type_name -> massa.api.v1.ExecutionQueryStakerInfo
	58,  // 60: massa.api.v1.ExecutionQueryStakerInfo.production_stats:type_name -> massa.api.v1.ExecutionQueryStakerInfoProductionStatsEntry
	59,  // 61: massa.api.v1.ExecutionQueryStakerInfoProductionStatsEntry.stats:type_name -> massa.api.v1.ExecutionQueryStakerInfoProductionStats
	128, // 62: massa.api.v1.ScOutputEventsWrapper.events:type_name -> massa.model.v1.ScExecutionEvent
	62,  // 63: massa.api.v1.NewBlocksRequest.filters:type_name -> massa.api.v1.NewBlocksFilter
	138, // 64: massa.api.v1.NewBlocksFilter.block_ids:type_name -> massa.model.v1.BlockIds
	130, // 65: massa.api.v1.NewBlocksFilter.addresses:type_name -> massa.model.v1.Addresses
	126, // 66: massa.api.v1.NewBlocksFilter.slot_range:type_name -> massa.model.v1.SlotRange
	139, // 67: massa.api.v1.NewBlocksResponse.signed_block:type_name -> massa.model.v1.SignedBlock
	65,  // 68: massa.api.v1.NewEndorsementsRequest.filters:type_name -> massa.api.v1.NewEndorsementsFilter
	140, // 69: massa.api.v1.NewEndorsementsFilter.endorsement_ids:type_name -> massa.model.v1.EndorsementIds
	130, // 70: massa.api.v1.NewEndorsementsFilter.addresses:type_name -> massa.model.v1.Addresses
	138, // 71: massa.api.v1.NewEndorsementsFilter.block_ids:type_name -> massa.model.v1.BlockIds
	141, // 72: massa.api.v1.NewEndorsementsResponse.signed_endorsement:type_name -> massa.model.v1.SignedEndorsement
	62,  // 73: massa.api.v1.NewFilledBlocksRequest.filters:type_name -> massa.api.v1.NewBlocksFilter
	138, // 74: massa.api.v1.NewFilledBlocksFilter.block_ids:type_name -> massa.model.v1.BlockIds
	130, // 75: massa.api.v1.NewFilledBlocksFilter.addresses:type_name -> massa.model.v1.Addresses
	126, // 76: massa.api.v1.NewFilledBlocksFilter.slot_range:type_name -> massa.model.v1.SlotRange
	142, // 77: massa.api.v1.NewFilledBlocksResponse.filled_block:type_name -> massa.model.v1.FilledBlock
	71,  // 78: massa.api.v1.NewOperationsRequest.filters:type_name -> massa.api.v1.NewOperationsFilter
	143, // 79: massa.api.v1.NewOperationsFilter.operation_ids:type_name -> massa.model.v1.OperationIds
	130, // 80: massa.api.v1.NewOperationsFilter.addresses:type_name -> massa.model.v1.Addresses
	144, // 81: massa.api.v1.NewOperationsFilter.operation_types:type_name -> massa.model.v1.OpTypes
	145, // 82: massa.api.v1.NewOperationsResponse.signed_operation:type_name -> massa.model.v1.SignedOperation
	74,  // 83: massa.api.v1.NewSlotExecutionOutputsRequest.filters:type_name -> massa.api.v1.NewSlotExecutionOutputsFilter
	146, // 84: massa.api.v1.NewSlotExecutionOutputsFilter.status:type_name -> massa.model.v1.ExecutionOutputStatus
	126, // 85: massa.api.v1.NewSlotExecutionOutputsFilter.slot_range:type_name -> massa.model.v1.SlotRange
	75,  // 86: massa.api.v1.NewSlotExecutionOutputsFilter.async_pool_changes_filter:type_name -> massa.api.v1.AsyncPoolChangesFilter
	79,  // 87: massa.api.v1.NewSlotExecutionOutputsFilter.executed_denounciation_filter:type_name -> massa.api.v1.ExecutedDenounciationFilter
	77,  // 88: massa.api.v1.NewSlotExecutionOutputsFilter.event_filter:type_name -> massa.api.v1.ExecutionEventFilter
	78,  // 89: massa.api.v1.NewSlotExecutionOutputsFilter.executed_ops_changes_filter:type_name -> massa.api.v1.ExecutedOpsChangesFilter
	80,  // 90: massa.api.v1.NewSlotExecutionOutputsFilter.ledger_changes_filter:type_name -> massa.api.v1.LedgerChangesFilter
	147, // 91: massa.api.v1.AsyncPoolChangesFilter.none:type_name -> massa.model.v1.Empty
	148, // 92: massa.api.v1.AsyncPoolChangesFilter.type:type_name -> massa.model.v1.AsyncPoolChangeType
	147, // 93: massa.api.v1.PosChangesFilter.none:type_name -> massa.model.v1.Empty
	147, // 94: massa.api.v1.ExecutionEventFilter.none:type_name -> massa.model.v1.Empty
	147, // 95: massa.api.v1.ExecutedOpsChangesFilter.none:type_name -> massa.model.v1.Empty
	147, // 96: massa.api.v1.ExecutedDenounciationFilter.none:type_name -> massa.model.v1.Empty
	147, // 97: massa.api.v1.LedgerChangesFilter.none:type_name -> massa.model.v1.Empty
	149, // 98: massa.api.v1.NewSlotExecutionOutputsResponse.output:type_name -> massa.model.v1.SlotExecutionOutput
	1,   // 99: massa.api.v1.NewSlotABICallStacksRequest.finality_level:type_name -> massa.api.v1.FinalityLevel
	134, // 100: massa.api.v1.NewSlotABICallStacksResponse.slot:type_name -> massa.model.v1.Slot
	110, // 101: massa.api.v1.NewSlotABICallStacksResponse.asc_call_stacks:type_name -> massa.api.v1.ASCABICallStack
	111, // 102: massa.api.v1.NewSlotABICallStacksResponse.operation_call_stacks:type_name -> massa.api.v1.OperationABICallStack
	1,   // 103: massa.api.v1.NewSlotTransfersRequest.finality_level:type_name -> massa.api.v1.FinalityLevel
	134, // 104: massa.api.v1.NewSlotTransfersResponse.slot:type_name -> massa.model.v1.Slot
	115, // 105: massa.api.v1.NewSlotTransfersResponse.transfers:type_name -> massa.api.v1.TransferInfo
	135, // 106: massa.api.v1.SendBlocksResponse.error:type_name -> massa.model.v1.Error
	140, // 107: massa.api.v1.SendEndorsementsResponse.endorsement_ids:type_name -> massa.model.v1.EndorsementIds
	135, // 108: massa.api.v1.SendEndorsementsResponse.error:type_name -> massa.model.v1.Error
	143, // 109: massa.api.v1.SendOperationsResponse.operation_ids:type_name -> massa.model.v1.OperationIds
	135, // 110: massa.api.v1.SendOperationsResponse.error:type_name -> massa.model.v1.Error
	150, // 111: massa.api.v1.TransactionsThroughputRequest.interval:type_name -> google.protobuf.UInt64Value
	95,  // 112: massa.api.v1.SearchBlocksRequest.filters:type_name -> massa.api.v1.SearchBlocksFilter
	138, // 113: massa.api.v1.SearchBlocksFilter.block_ids:type_name -> massa.model.v1.BlockIds
	130, // 114: massa.api.v1.SearchBlocksFilter.addresses:type_name -> massa.model.v1.Addresses
	126, // 115: massa.api.v1.SearchBlocksFilter.slot_range:type_name -> massa.model.v1.SlotRange
	151, // 116: massa.api.v1.SearchBlocksResponse.block_infos:type_name -> massa.model.v1.BlockInfo
	98,  // 117: massa.api.v1.SearchEndorsementsRequest.filters:type_name -> massa.api.v1.SearchEndorsementsFilter
	140, // 118: massa.api.v1.SearchEndorsementsFilter.endorsement_ids:type_name -> massa.model.v1.EndorsementIds
	130, // 119: massa.api.v1.SearchEndorsementsFilter.addresses:type_name -> massa.model.v1.Addresses
	138, // 120: massa.api.v1.SearchEndorsementsFilter.block_ids:type_name -> massa.model.v1.BlockIds
	152, // 121: massa.api.v1.SearchEndorsementsResponse.endorsement_infos:type_name -> massa.model.v1.EndorsementInfo
	101, // 122: massa.api.v1.SearchOperationsRequest.filters:type_name -> massa.api.v1.SearchOperationsFilter
	143, // 123: massa.api.v1.SearchOperationsFilter.operation_ids:type_name -> massa.model.v1.OperationIds
	130, // 124: massa.api.v1.SearchOperationsFilter.addresses:type_name -> massa.model.v1.Addresses
	153, // 125: massa.api.v1.SearchOperationsResponse.operation_infos:type_name -> massa.model.v1.OperationInfo
	106, // 126: massa.api.v1.ABICallStackElementCall.sub_calls:type_name -> massa.api.v1.ABICallStackElementParent
	104, // 127: massa.api.v1.ABICallStackElementParent.element:type_name -> massa.api.v1.ABICallStackElement
	105, // 128: massa.api.v1.ABICallStackElementParent.element_call:type_name -> massa.api.v1.ABICallStackElementCall
	106, // 129: massa.api.v1.ABICallStack.call_stack:type_name -> massa.api.v1.ABICallStackElementParent
	107, // 130: massa.api.v1.GetOperationABICallStacksResponse.call_stacks:type_name -> massa.api.v1.ABICallStack
	134, // 131: massa.api.v1.GetSlotABICallStacksRequest.slots:type_name -> massa.model.v1.Slot
	106, // 132: massa.api.v1.ASCABICallStack.call_stack:type_name -> massa.api.v1.ABICallStackElementParent
	106, // 133: massa.api.v1.OperationABICallStack.call_stack:type_name -> massa.api.v1.ABICallStackElementParent
	110, // 134: massa.api.v1.SlotABICallStacks.asc_call_stacks:type_name -> massa.api.v1.ASCABICallStack
	111, // 135: massa.api.v1.SlotABICallStacks.operation_call_stacks:type_name -> massa.api.v1.OperationABICallStack
	112, // 136: massa.api.v1.GetSlotABICallStacksResponse.slot_call_stacks:type_name -> massa.api.v1.SlotABICallStacks
	134, // 137: massa.api.v1.GetSlotTransfersRequest.slots:type_name -> massa.model.v1.Slot
	134, // 138: massa.api.v1.TransferInfos.slot:type_name -> massa.model.v1.Slot
	115, // 139: massa.api.v1.TransferInfos.transfers:type_name -> massa.api.v1.TransferInfo
	116, // 140: massa.api.v1.GetSlotTransfersResponse.transfer_each_slot:type_name -> massa.api.v1.TransferInfos
	2,   // 141: massa.api.v1.PublicService.ExecuteReadOnlyCall:input_type -> massa.api.v1.ExecuteReadOnlyCallRequest
	4,   // 142: massa.api.v1.PublicService.GetBlocks:input_type -> massa.api.v1.GetBlocksRequest
	6,   // 143: massa.api.v1.PublicService.GetDatastoreEntries:input_type -> massa.api.v1.GetDatastoreEntriesRequest
	9,   // 144: massa.api.v1.PublicService.GetEndorsements:input_type -> massa.api.v1.GetEndorsementsRequest
	11,  // 145: massa.api.v1.PublicService.GetNextBlockBestParents:input_type -> massa.api.v1.GetNextBlockBestParentsRequest
	13,  // 146: massa.api.v1.PublicService.GetOperations:input_type -> massa.api.v1.GetOperationsRequest
	15,  // 147: massa.api.v1.PublicService.GetScExecutionEvents:input_type -> massa.api.v1.GetScExecutionEventsRequest
	20,  // 148: massa.api.v1.PublicService.GetSelectorDraws:input_type -> massa.api.v1.GetSelectorDrawsRequest
	23,  // 149: massa.api.v1.PublicService.GetStakers:input_type -> massa.api.v1.GetStakersRequest
	18,  // 150: massa.api.v1.PublicService.GetStatus:input_type -> massa.api.v1.GetStatusRequest
	26,  // 151: massa.api.v1.PublicService.GetTransactionsThroughput:input_type -> massa.api.v1.GetTransactionsThroughputRequest
	28,  // 152: massa.api.v1.PublicService.QueryState:input_type -> massa.api.v1.QueryStateRequest
	94,  // 153: massa.api.v1.PublicService.SearchBlocks:input_type -> massa.api.v1.SearchBlocksRequest
	97,  // 154: massa.api.v1.PublicService.SearchEndorsements:input_type -> massa.api.v1.SearchEndorsementsRequest
	100, // 155: massa.api.v1.PublicService.SearchOperations:input_type -> massa.api.v1.SearchOperationsRequest
	103, // 156: massa.api.v1.PublicService.GetOperationABICallStacks:input_type -> massa.api.v1.GetOperationABICallStacksRequest
	109, // 157: massa.api.v1.PublicService.GetSlotABICallStacks:input_type -> massa.api.v1.GetSlotABICallStacksRequest
	114, // 158: massa.api.v1.PublicService.GetSlotTransfers:input_type -> massa.api.v1.GetSlotTransfersRequest
	61,  // 159: massa.api.v1.PublicService.NewBlocks:input_type -> massa.api.v1.NewBlocksRequest
	64,  // 160: massa.api.v1.PublicService.NewEndorsements:input_type -> massa.api.v1.NewEndorsementsRequest
	67,  // 161: massa.api.v1.PublicService.NewFilledBlocks:input_type -> massa.api.v1.NewFilledBlocksRequest
	70,  // 162: massa.api.v1.PublicService.NewOperations:input_type -> massa.api.v1.NewOperationsRequest
	73,  // 163: massa.api.v1.PublicService.NewSlotExecutionOutputs:input_type -> massa.api.v1.NewSlotExecutionOutputsRequest
	82,  // 164: massa.api.v1.PublicService.NewSlotABICallStacks:input_type -> massa.api.v1.NewSlotABICallStacksRequest
	84,  // 165: massa.api.v1.PublicService.NewSlotTransfers:input_type -> massa.api.v1.NewSlotTransfersRequest
	86,  // 166: massa.api.v1.PublicService.SendBlocks:input_type -> massa.api.v1.SendBlocksRequest
	88,  // 167: massa.api.v1.PublicService.SendEndorsements:input_type -> massa.api.v1.SendEndorsementsRequest
	90,  // 168: massa.api.v1.PublicService.SendOperations:input_type -> massa.api.v1.SendOperationsRequest
	92,  // 169: massa.api.v1.PublicService.TransactionsThroughput:input_type -> massa.api.v1.TransactionsThroughputRequest
	3,   // 170: massa.api.v1.PublicService.ExecuteReadOnlyCall:output_type -> massa.api.v1.ExecuteReadOnlyCallResponse
	5,   // 171: massa.api.v1.PublicService.GetBlocks:output_type -> massa.api.v1.GetBlocksResponse
	8,   // 172: massa.api.v1.PublicService.GetDatastoreEntries:output_type -> massa.api.v1.GetDatastoreEntriesResponse
	10,  // 173: massa.api.v1.PublicService.GetEndorsements:output_type -> massa.api.v1.GetEndorsementsResponse
	12,  // 174: massa.api.v1.PublicService.GetNextBlockBestParents:output_type -> massa.api.v1.GetNextBlockBestParentsResponse
	14,  // 175: massa.api.v1.PublicService.GetOperations:output_type -> massa.api.v1.GetOperationsResponse
	17,  // 176: massa.api.v1.PublicService.GetScExecutionEvents:output_type -> massa.api.v1.GetScExecutionEventsResponse
	22,  // 177: massa.api.v1.PublicService.GetSelectorDraws:output_type -> massa.api.v1.GetSelectorDrawsResponse
	25,  // 178: massa.api.v1.PublicService.GetStakers:output_type -> massa.api.v1.GetStakersResponse
	19,  // 179: massa.api.v1.PublicService.GetStatus:output_type -> massa.api.v1.GetStatusResponse
	27,  // 180: massa.api.v1.PublicService.GetTransactionsThroughput:output_type -> massa.api.v1.GetTransactionsThroughputResponse
	50,  // 181: massa.api.v1.PublicService.QueryState:output_type -> massa.api.v1.QueryStateResponse
	96,  // 182: massa.api.v1.PublicService.SearchBlocks:output_type -> massa.api.v1.SearchBlocksResponse
	99,  // 183: massa.api.v1.PublicService.SearchEndorsements:output_type -> massa.api.v1.SearchEndorsementsResponse
	102, // 184: massa.api.v1.PublicService.SearchOperations:output_type -> massa.api.v1.SearchOperationsResponse
	108, // 185: massa.api.v1.PublicService.GetOperationABICallStacks:output_type -> massa.api.v1.GetOperationABICallStacksResponse
	113, // 186: massa.api.v1.PublicService.GetSlotABICallStacks:output_type -> massa.api.v1.GetSlotABICallStacksResponse
	117, // 187: massa.api.v1.PublicService.GetSlotTransfers:output_type -> massa.api.v1.GetSlotTransfersResponse
	63,  // 188: massa.api.v1.PublicService.NewBlocks:output_type -> massa.api.v1.NewBlocksResponse
	66,  // 189: massa.api.v1.PublicService.NewEndorsements:output_type -> massa.api.v1.NewEndorsementsResponse
	69,  // 190: massa.api.v1.PublicService.NewFilledBlocks:output_type -> massa.api.v1.NewFilledBlocksResponse
	72,  // 191: massa.api.v1.PublicService.NewOperations:output_type -> massa.api.v1.NewOperationsResponse
	81,  // 192: massa.api.v1.PublicService.NewSlotExecutionOutputs:output_type -> massa.api.v1.NewSlotExecutionOutputsResponse
	83,  // 193: massa.api.v1.PublicService.NewSlotABICallStacks:output_type -> massa.api.v1.NewSlotABICallStacksResponse
	85,  // 194: massa.api.v1.PublicService.NewSlotTransfers:output_type -> massa.api.v1.NewSlotTransfersResponse
	87,  // 195: massa.api.v1.PublicService.SendBlocks:output_type -> massa.api.v1.SendBlocksResponse
	89,  // 196: massa.api.v1.PublicService.SendEndorsements:output_type -> massa.api.v1.SendEndorsementsResponse
	91,  // 197: massa.api.v1.PublicService.SendOperations:output_type -> massa.api.v1.SendOperationsResponse
	93,  // 198: massa.api.v1.PublicService.TransactionsThroughput:output_type -> massa.api.v1.TransactionsThroughputResponse
	170, // [170:199] is the sub-list for method output_type
	141, // [141:170] is the sub-list for method input_type
	141, // [141:141] is the sub-list for extension type_name
	141, // [141:141] is the sub-list for extension extendee
	0,   // [0:141] is the sub-list for field type_name
}

func init() { file_massa_api_v1_public_proto_init() }
func file_massa_api_v1_public_proto_init() {
	if File_massa_api_v1_public_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_massa_api_v1_public_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteReadOnlyCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteReadOnlyCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatastoreEntriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatastoreEntryFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDatastoreEntriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEndorsementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEndorsementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextBlockBestParentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextBlockBestParentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScExecutionEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScExecutionEventsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScExecutionEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSelectorDrawsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectorDrawsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSelectorDrawsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StakersFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStakersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsThroughputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionsThroughputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryRequestItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressExistsCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressExistsFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressBalanceCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressBalanceFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressBytecodeCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressBytecodeFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDatastoreKeysCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDatastoreKeysFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDatastoreValueCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDatastoreValueFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpExecutionStatusCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpExecutionStatusFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenunciationExecutionStatusCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenunciationExecutionStatusFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressRollsCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressRollsFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDeferredCreditsCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressDeferredCreditsFinal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CycleInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Events); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeferredCreditsEntryWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeferredCreditsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryCycleInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryStakerInfoEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryStakerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryStakerInfoProductionStatsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionQueryStakerInfoProductionStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScOutputEventsWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBlocksFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEndorsementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEndorsementsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEndorsementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFilledBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFilledBlocksFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFilledBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOperationsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlotExecutionOutputsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlotExecutionOutputsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncPoolChangesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PosChangesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionEventFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutedOpsChangesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutedDenounciationFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerChangesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlotExecutionOutputsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlotABICallStacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlotABICallStacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlotTransfersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlotTransfersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEndorsementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEndorsementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsThroughputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsThroughputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBlocksFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEndorsementsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEndorsementsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEndorsementsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOperationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOperationsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOperationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationABICallStacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABICallStackElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABICallStackElementCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABICallStackElementParent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABICallStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOperationABICallStacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotABICallStacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASCABICallStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationABICallStack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotABICallStacks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotABICallStacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotTransfersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_massa_api_v1_public_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotTransfersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_massa_api_v1_public_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetDatastoreEntryFilter_AddressKey)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ScExecutionEventsFilter_SlotRange)(nil),
		(*ScExecutionEventsFilter_CallerAddress)(nil),
		(*ScExecutionEventsFilter_EmitterAddress)(nil),
		(*ScExecutionEventsFilter_OriginalOperationId)(nil),
		(*ScExecutionEventsFilter_IsFailure)(nil),
		(*ScExecutionEventsFilter_Status)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*SelectorDrawsFilter_Addresses)(nil),
		(*SelectorDrawsFilter_SlotRange)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*StakersFilter_MinRolls)(nil),
		(*StakersFilter_MaxRolls)(nil),
		(*StakersFilter_Limit)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*ExecutionQueryRequestItem_AddressExistsCandidate)(nil),
		(*ExecutionQueryRequestItem_AddressExistsFinal)(nil),
		(*ExecutionQueryRequestItem_AddressBalanceCandidate)(nil),
		(*ExecutionQueryRequestItem_AddressBalanceFinal)(nil),
		(*ExecutionQueryRequestItem_AddressBytecodeCandidate)(nil),
		(*ExecutionQueryRequestItem_AddressBytecodeFinal)(nil),
		(*ExecutionQueryRequestItem_AddressDatastoreKeysCandidate)(nil),
		(*ExecutionQueryRequestItem_AddressDatastoreKeysFinal)(nil),
		(*ExecutionQueryRequestItem_AddressDatastoreValueCandidate)(nil),
		(*ExecutionQueryRequestItem_AddressDatastoreValueFinal)(nil),
		(*ExecutionQueryRequestItem_OpExecutionStatusCandidate)(nil),
		(*ExecutionQueryRequestItem_OpExecutionStatusFinal)(nil),
		(*ExecutionQueryRequestItem_DenunciationExecutionStatusCandidate)(nil),
		(*ExecutionQueryRequestItem_DenunciationExecutionStatusFinal)(nil),
		(*ExecutionQueryRequestItem_AddressRollsCandidate)(nil),
		(*ExecutionQueryRequestItem_AddressRollsFinal)(nil),
		(*ExecutionQueryRequestItem_AddressDeferredCreditsCandidate)(nil),
		(*ExecutionQueryRequestItem_AddressDeferredCreditsFinal)(nil),
		(*ExecutionQueryRequestItem_CycleInfos)(nil),
		(*ExecutionQueryRequestItem_Events)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[49].OneofWrappers = []interface{}{
		(*ExecutionQueryResponse_Result)(nil),
		(*ExecutionQueryResponse_Error)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[50].OneofWrappers = []interface{}{
		(*ExecutionQueryResponseItem_Boolean)(nil),
		(*ExecutionQueryResponseItem_RollCount)(nil),
		(*ExecutionQueryResponseItem_Amount)(nil),
		(*ExecutionQueryResponseItem_Bytes)(nil),
		(*ExecutionQueryResponseItem_VecBytes)(nil),
		(*ExecutionQueryResponseItem_DeferredCredits)(nil),
		(*ExecutionQueryResponseItem_ExecutionStatus)(nil),
		(*ExecutionQueryResponseItem_CycleInfos)(nil),
		(*ExecutionQueryResponseItem_Events)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*NewBlocksFilter_BlockIds)(nil),
		(*NewBlocksFilter_Addresses)(nil),
		(*NewBlocksFilter_SlotRange)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[63].OneofWrappers = []interface{}{
		(*NewEndorsementsFilter_EndorsementIds)(nil),
		(*NewEndorsementsFilter_Addresses)(nil),
		(*NewEndorsementsFilter_BlockIds)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[66].OneofWrappers = []interface{}{
		(*NewFilledBlocksFilter_BlockIds)(nil),
		(*NewFilledBlocksFilter_Addresses)(nil),
		(*NewFilledBlocksFilter_SlotRange)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[69].OneofWrappers = []interface{}{
		(*NewOperationsFilter_OperationIds)(nil),
		(*NewOperationsFilter_Addresses)(nil),
		(*NewOperationsFilter_OperationTypes)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*NewSlotExecutionOutputsFilter_Status)(nil),
		(*NewSlotExecutionOutputsFilter_SlotRange)(nil),
		(*NewSlotExecutionOutputsFilter_AsyncPoolChangesFilter)(nil),
		(*NewSlotExecutionOutputsFilter_ExecutedDenounciationFilter)(nil),
		(*NewSlotExecutionOutputsFilter_EventFilter)(nil),
		(*NewSlotExecutionOutputsFilter_ExecutedOpsChangesFilter)(nil),
		(*NewSlotExecutionOutputsFilter_LedgerChangesFilter)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[73].OneofWrappers = []interface{}{
		(*AsyncPoolChangesFilter_None)(nil),
		(*AsyncPoolChangesFilter_Type)(nil),
		(*AsyncPoolChangesFilter_Handler)(nil),
		(*AsyncPoolChangesFilter_DestinationAddress)(nil),
		(*AsyncPoolChangesFilter_EmitterAddress)(nil),
		(*AsyncPoolChangesFilter_CanBeExecuted)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[74].OneofWrappers = []interface{}{
		(*PosChangesFilter_None)(nil),
		(*PosChangesFilter_Address)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[75].OneofWrappers = []interface{}{
		(*ExecutionEventFilter_None)(nil),
		(*ExecutionEventFilter_CallerAddress)(nil),
		(*ExecutionEventFilter_EmitterAddress)(nil),
		(*ExecutionEventFilter_OriginalOperationId)(nil),
		(*ExecutionEventFilter_IsFailure)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[76].OneofWrappers = []interface{}{
		(*ExecutedOpsChangesFilter_None)(nil),
		(*ExecutedOpsChangesFilter_OperationId)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[77].OneofWrappers = []interface{}{
		(*ExecutedDenounciationFilter_None)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*LedgerChangesFilter_None)(nil),
		(*LedgerChangesFilter_Address)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[85].OneofWrappers = []interface{}{
		(*SendBlocksResponse_BlockId)(nil),
		(*SendBlocksResponse_Error)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[87].OneofWrappers = []interface{}{
		(*SendEndorsementsResponse_EndorsementIds)(nil),
		(*SendEndorsementsResponse_Error)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[89].OneofWrappers = []interface{}{
		(*SendOperationsResponse_OperationIds)(nil),
		(*SendOperationsResponse_Error)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[93].OneofWrappers = []interface{}{
		(*SearchBlocksFilter_BlockIds)(nil),
		(*SearchBlocksFilter_Addresses)(nil),
		(*SearchBlocksFilter_SlotRange)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[96].OneofWrappers = []interface{}{
		(*SearchEndorsementsFilter_EndorsementIds)(nil),
		(*SearchEndorsementsFilter_Addresses)(nil),
		(*SearchEndorsementsFilter_BlockIds)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[99].OneofWrappers = []interface{}{
		(*SearchOperationsFilter_OperationIds)(nil),
		(*SearchOperationsFilter_Addresses)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[104].OneofWrappers = []interface{}{
		(*ABICallStackElementParent_Element)(nil),
		(*ABICallStackElementParent_ElementCall)(nil),
	}
	file_massa_api_v1_public_proto_msgTypes[113].OneofWrappers = []interface{}{
		(*TransferInfo_OperationId)(nil),
		(*TransferInfo_AscIndex)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_massa_api_v1_public_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   116,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_massa_api_v1_public_proto_goTypes,
		DependencyIndexes: file_massa_api_v1_public_proto_depIdxs,
		EnumInfos:         file_massa_api_v1_public_proto_enumTypes,
		MessageInfos:      file_massa_api_v1_public_proto_msgTypes,
	}.Build()
	File_massa_api_v1_public_proto = out.File
	file_massa_api_v1_public_proto_rawDesc = nil
	file_massa_api_v1_public_proto_goTypes = nil
	file_massa_api_v1_public_proto_depIdxs = nil
}
